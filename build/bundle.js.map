{"version":3,"sources":["webpack:///webpack/bootstrap 9bf656d20e4d0715d834","webpack:///(webpack)-dev-server/client","webpack:///(webpack)-dev-server/client?8505","webpack:///(webpack)/~/node-libs-browser/~/url/url.js","webpack:///(webpack)/~/node-libs-browser/~/url/~/punycode/punycode.js","webpack:///(webpack)/buildin/module.js","webpack:///(webpack)/~/node-libs-browser/~/url/~/querystring/index.js","webpack:///(webpack)/~/node-libs-browser/~/url/~/querystring/decode.js","webpack:///(webpack)/~/node-libs-browser/~/url/~/querystring/encode.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/entry.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport-list.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/websocket.js","webpack:///(webpack)/~/node-libs-browser/~/process/browser.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/utils/event.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/utils/random.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/utils/browser-crypto.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/utils/url.js","webpack:///(webpack)-dev-server/~/sockjs-client/~/url-parse/index.js","webpack:///(webpack)-dev-server/~/sockjs-client/~/url-parse/~/requires-port/index.js","webpack:///(webpack)-dev-server/~/sockjs-client/~/url-parse/lolcation.js","webpack:///(webpack)-dev-server/~/sockjs-client/~/url-parse/~/querystringify/index.js","webpack:///(webpack)-dev-server/~/sockjs-client/~/debug/browser.js","webpack:///(webpack)-dev-server/~/sockjs-client/~/debug/debug.js","webpack:///(webpack)-dev-server/~/sockjs-client/~/debug/~/ms/index.js","webpack:///(webpack)-dev-server/~/sockjs-client/~/inherits/inherits_browser.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/event/emitter.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/event/eventtarget.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/browser/websocket.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/xhr-streaming.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/lib/ajax-based.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/lib/sender-receiver.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/lib/buffered-sender.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/lib/polling.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/receiver/xhr.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/sender/xhr-cors.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/browser/abstract-xhr.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/sender/xhr-local.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/utils/browser.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/xdr-streaming.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/sender/xdr.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/eventsource.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/receiver/eventsource.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/browser/eventsource.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/lib/iframe-wrap.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/iframe.js","webpack:///(webpack)-dev-server/~/sockjs-client/~/json3/lib/json3.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/version.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/utils/iframe.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/utils/object.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/htmlfile.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/receiver/htmlfile.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/xhr-polling.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/xdr-polling.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/jsonp-polling.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/receiver/jsonp.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/sender/jsonp.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/main.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/shims.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/utils/escape.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/utils/transport.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/utils/log.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/event/event.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/location.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/event/close.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/event/trans-message.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/info-receiver.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/transport/sender/xhr-fake.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/info-iframe.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/info-iframe-receiver.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/info-ajax.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/iframe-bootstrap.js","webpack:///(webpack)-dev-server/~/sockjs-client/lib/facade.js","webpack:///(webpack)-dev-server/~/strip-ansi/index.js","webpack:///(webpack)-dev-server/~/strip-ansi/~/ansi-regex/index.js","webpack:///(webpack)/hot/only-dev-server.js","webpack:///./index.js","webpack:///./src/logger.js","webpack:///./src/sender.js","webpack:///./src/constants.js","webpack:///./src/client.js","webpack:///./~/elasticsearch/src/elasticsearch.js","webpack:///./~/elasticsearch/src/lib/client.js","webpack:///./~/elasticsearch/src/lib/transport.js","webpack:///./~/elasticsearch/src/lib/utils.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/index.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/~/base64-js/lib/b64.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/~/ieee754/index.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/~/isarray/index.js","webpack:///(webpack)/~/node-libs-browser/~/path-browserify/index.js","webpack:///./~/elasticsearch/~/lodash-compat/index.js","webpack:///(webpack)/~/node-libs-browser/~/util/util.js","webpack:///(webpack)/~/node-libs-browser/~/util/support/isBufferBrowser.js","webpack:///(webpack)/~/node-libs-browser/~/util/~/inherits/inherits_browser.js","webpack:///./~/elasticsearch/src/lib/errors.js","webpack:///(webpack)/~/node-libs-browser/~/querystring-es3/index.js","webpack:///(webpack)/~/node-libs-browser/~/querystring-es3/decode.js","webpack:///(webpack)/~/node-libs-browser/~/querystring-es3/encode.js","webpack:///./~/elasticsearch/src/lib/host.js","webpack:///./~/elasticsearch/~/promise/lib/es6-extensions.js","webpack:///./~/elasticsearch/~/promise/lib/core.js","webpack:///./~/elasticsearch/~/promise/~/asap/browser-raw.js","webpack:///./~/elasticsearch/src/lib/transport/sniff_on_connection_fault.js","webpack:///./~/elasticsearch/src/lib/transport/find_common_protocol.js","webpack:///./~/elasticsearch/src/lib/log.js","webpack:///(webpack)/~/node-libs-browser/~/events/events.js","webpack:///./~/elasticsearch/src/lib/loggers/browser_index.js","webpack:///./~/elasticsearch/src/lib/loggers/console.js","webpack:///./~/elasticsearch/src/lib/logger.js","webpack:///./~/elasticsearch/src/lib/connection_pool.js","webpack:///./~/elasticsearch/src/lib/selectors/index.js","webpack:///./~/elasticsearch/src/lib/selectors/random.js","webpack:///./~/elasticsearch/src/lib/selectors/round_robin.js","webpack:///./~/elasticsearch/src/lib/connectors/browser_index.js","webpack:///./~/elasticsearch/src/lib/connectors/xhr.js","webpack:///./~/elasticsearch/src/lib/connection.js","webpack:///./~/elasticsearch/src/lib/connectors/jquery.js","webpack:///./~/elasticsearch/src/lib/connectors/angular.js","webpack:///./~/elasticsearch/src/lib/serializers/index.js","webpack:///./~/elasticsearch/src/lib/serializers/angular.js","webpack:///./~/elasticsearch/src/lib/serializers/json.js","webpack:///./~/elasticsearch/src/lib/nodes_to_host.js","webpack:///./~/elasticsearch/src/lib/client_action.js","webpack:///./~/elasticsearch/src/lib/apis/browser_index.js","webpack:///./~/elasticsearch/src/lib/apis/2_3.js","webpack:///./~/elasticsearch/src/lib/apis/2_2.js","webpack:///./~/elasticsearch/src/lib/apis/2_1.js","webpack:///./~/elasticsearch/src/lib/apis/2_0.js","webpack:///./~/elasticsearch/src/lib/apis/1_7.js","webpack:///./~/elasticsearch/src/lib/apis/2_x.js","webpack:///./~/elasticsearch/src/lib/apis/master.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACtCA,wDCAA,UDAA,mBCAA,CDAA,CCAA;AACA,cDAA,mBCAA,CDAA,CCAA;AACA,iBDAA,mBCAA,CDAA,ECAA;AACA;AACA;;AAEA;AACA;AACA,0BDAA,KCAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,iBAAgB,qBAAqB;AACrC;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,iBAAgB,mBAAmB;AACnC;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,iBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAgB,KAAK;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA,2CAA0C,KAAK;AAC/C,0CAAyC,KAAK;AAC9C;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA,2CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA8B,QAAQ;AACtC;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;mCClsBA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAY,OAAO;AACnB,eAAc,MAAM;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY,MAAM;AAClB,aAAY,SAAS;AACrB;AACA,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,SAAS;AACrB;AACA,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA,MAAK;AACL,6BAA4B;AAC5B;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY,MAAM;AAClB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,eAAc,OAAO;AACrB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,mCAAmC;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAwB;;AAExB,0CAAyC,qBAAqB;;AAE9D;AACA;AACA;AACA;AACA;AACA,mCAAkC,oBAAoB;;AAEtD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAc,iBAAiB;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAEA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE;AACF,uCAAsC;AACtC;AACA,IAAG,OAAO;AACV;AACA;AACA;AACA;AACA,GAAE,OAAO;AACT;AACA;;AAEA,EAAC;;;;;;;;ACjhBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;;AAEA;AACA;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;;;;;;AC/DA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;ACTA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;AC7FtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACxEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;;;;;;;AChBA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;AC9CA;;AAEA;AACA;AACA;AACA;AACA,mDAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc,OAAO;AACrB,eAAc,QAAQ;AACtB,eAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,cAAc;AACzB,YAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,MAAM;AACjB,YAAW,iBAAiB;AAC5B;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5QA;;AAEA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,OAAO;AAClB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;ACrCA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA,eAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0DAAyD;AACzD,IAAG;AACH,uCAAsC;AACtC;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACpDA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;;;;;;;ACtKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAiB,SAAS;AAC1B,6BAA4B;AAC5B;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;;AAEA;AACA;AACA,0CAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA,0CAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,aAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACpMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,QAAQ;AAC1B;AACA;AACA,kBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACxDA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;;;;;;;AC7DA;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sCAAqC;;AAErC;AACA;AACA;AACA;;AAEA;;;;;;;;ACxCA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;AChDA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5CA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtFA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxDA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;ACdA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;;AAEA;;AAEA;;;;;;;;AChMA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;;AAEA;;;;;;;AChBA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;;;;;;;AC1BA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAqC;;AAErC;;;;;;;AC/BA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACtGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AC1BA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;;AC9DA;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,2CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA,0FAAyF;;AAEzF;;AAEA;AACA;;;;;;;;AChCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;mCC5IA;AACA,EAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP,mCAAkC,iDAAiD;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,oDAAoD;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,0CAAyC,8BAA8B;AACvE;AACA,UAAS;AACT;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,gBAAgB;AAChC;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE,6BAA6B;AAC7F,wEAAuE,iCAAiC;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,qEAAoE;AACpE;AACA,wCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,sEAAqE;AACrE,6DAA4D;AAC5D;AACA;AACA,kDAAiD,MAAM;AACvD;AACA;AACA;AACA,gBAAe;AACf,yDAAwD,0EAA0E,OAAO,0BAA0B,SAAS;AAC5K;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,iEAAgE,gBAAgB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAiE,2BAA2B;AAC5F;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,+BAA8B,OAAO;AACrC,2CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,KAAK;AACpD;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA,2CAA0C,gBAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,6FAA6F;AACrH,oEAAmE;AACnE;AACA;AACA;AACA;AACA,2BAA0B,mGAAmG;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,mGAAmG;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,qBAAqB;AAClC;AACA;AACA,sBAAqB;AACrB;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,UAAU;AACnD;AACA;AACA,cAAa;AACb;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAwF;AACxF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;;;;;;;;ACr4BD;;;;;;;;ACAA;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1LA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA8C,YAAY;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvBA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACxBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACtFA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAmC;;AAEnC;;;;;;;AChCA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oCAAmC;;AAEnC;;;;;;;ACtBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACjCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,eAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,2BAA0B,qDAAqD,mBAAmB,WAAW;AAC7G;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtLA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iDAAgD,WAAW;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA,oBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AC5XA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAgC,SAAS;AACzC;AACA,MAAK,YAAY;AACjB;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,gDAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,EAAC;AACD;AACA,gDAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAsF,sCAAsC,EAAE;;AAE9H;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sDAAqD;AACrD,sEAAqE;AACrE;AACA;AACA,yDAAwD;AACxD,+EAA8E;AAC9E;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAyB,mBAAmB;;;AAG5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,gCAAgC;AAC9E,UAAS;;AAET;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D;;AAE9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,0BAA0B;AACrE;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,mDAAkD,WAAW;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACxdD;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;;;;;;AChDA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;;;;;;;ACjDA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA,IAAG,oCAAoC;AACvC,EAAC;;AAED;;;;;;;;ACjBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACrBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AChBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACdA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACxFA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAgC;AAChC,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACvBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChCA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;AChDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;ACrGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1BA;AACA;;AAEA;AACA;AACA;;;;;;;ACLA;AACA;AACA,8BAA6B,YAAY,IAAI,IAAI,MAAM,IAAI;AAC3D;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAI;AACJ,IAAG;AACH;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA,EAAC;AACD;AACA;;;;;;;;;;;sCC5EwB,EAAc;;KAA1B,MAAM;;AAClB,OAAM,CAAC,UAAU,EAAE,C;;;;;;;;;;;;;;mCCDK,EAAU;;KAAtB,MAAM;;AAElB,KAAI,IAAI,GAAG;AACV,UAAQ,EAAE,EAAE;AACZ,SAAO,EAAE,QAAQ,CAAC,GAAG;AACrB,SAAO,EAAE,EAAE;AACX,SAAO,EAAE,IAAI,CAAC,GAAG,EAAE;AACnB,UAAQ,EAAE,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,YAAY;AACtD,UAAQ,EAAE,EAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAC;AAC5B,SAAO,EAAE,QAAQ,CAAC,QAAQ;AAC1B,YAAU,EAAE,CAAC;AACb,cAAY,EAAE,CAAC;EACf,CAAC;;AAEF,KAAM,UAAU,GAAG,SAAb,UAAU,GAAS;AACxB,iBAAe,EAAE,CAAC;;AAElB,QAAM,CAAC,cAAc,GAAG,YAAM;AAC7B,OAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;AACzC,SAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;GAC7B;EACD,CAAC;;AAEF,KAAM,eAAe,GAAG,SAAlB,eAAe,GAAS;AAC7B,MAAG,SAAS,CAAC,WAAW,EAAE;AACnB,YAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,UAAC,QAAQ,EAAK;AACnD,QAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;AAC7C,QAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;IACjD,CAAC,CAAC;GACN;EACJ,CAAC;;AAEF,KAAM,aAAa,GAAG,SAAhB,aAAa,GAAS;AAC3B,MAAI,CAAC,YAAY,EAAE,CAAC;EACpB,CAAC;;SAGD,UAAU,GAAV,UAAU;SACV,aAAa,GAAb,aAAa,C;;;;;;;;;;;;;;sCCtCO,EAAa;;;;mCACf,EAAU;;;;AAE7B,KAAM,YAAY,GAAG,SAAf,YAAY,CAAI,QAAQ,EAAK;AAClC,WAAS;AACT,sBAAO,MAAM,CAAC;AACb,QAAK,EAAE,uBAAS,KAAK;AACrB,OAAI,EAAE,uBAAS,IAAI;AACjB,OAAI,EAAE,QAAQ;GAChB,EAAE,UAAC,KAAK,EAAE,QAAQ,EAAK;AACvB,UAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;GACtB,CAAC,CAAC;EACH,CAAC;;SAGD,YAAY,GAAZ,YAAY,C;;;;;;;;;;;sBCfE;AACd,OAAK,EAAE,YAAY;AACnB,MAAI,EAAE,aAAa;AACnB,QAAM,EAAE,WAAW;AACnB,MAAI,EAAE,MAAM;EACZ;;;;;;;;;;;;;;;sCCLoB,EAAa;;;;0CACR,EAAe;;;;AAEzC,KAAM,MAAM,GAAG,IAAI,2BAAc,MAAM,CAAC;AACvC,MAAI,EAAK,uBAAS,MAAM,SAAI,uBAAS,IAAM;AAC3C,KAAG,EAAE,MAAM;EACX,CAAC,CAAC;;sBAEY,MAAM;;;;;;;ACRrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;AACA,0DAAyD,wBAAwB,WAAW;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;;AAEA;AACA;;AAEA;;;;;;;ACvGA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA,YAAW,OAAO;AAClB,YAAW,cAAc;AACzB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;AACjB,uBAAsB;AACtB,sBAAqB;AACrB,wBAAuB;AACvB,WAAU;AACV,aAAY;;AAEZ;AACA,qCAAoC;AACpC;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,YAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5bA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,MAAM;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,QAAQ;AACpB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAU,mBAAmB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,EAAE;AACd,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,SAAS;AACzB,oBAAmB,EAAE;AACrB,iBAAgB,UAAU;AAC1B,2BAA0B,QAAQ;AAClC,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,aAAY,SAAS;AACrB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAY,gBAAgB;AAC5B,aAAY,OAAO;AACnB,aAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,EAAE;AACd,aAAY,SAAS;AACrB,aAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAa,kBAAkB;AAC/B;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY,eAAe;AAC3B,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5bA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA,iBAAgB,oCAAoC;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,cAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,oBAAmB,cAAc;AACjwDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,wDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAqB,QAAQ;AAC7B;AACA;AACA,IAAG;AACH;AACA,gBAAe,SAAS;AACxB;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA,IAAG;AACH;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,wCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;;;;;;;AC3gDA;;AAEA,EAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAiD,YAAY;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAC,6BAAqD;;;;;;;AC3HtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAQ,WAAW;;AAEnB;AACA;AACA;AACA,SAAQ,WAAW;;AAEnB;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA,SAAQ,WAAW;;AAEnB;AACA;AACA,SAAQ,UAAU;;AAElB;AACA;;;;;;;ACnFA,kBAAiB;;AAEjB;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,QAAQ;AACxC;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8BAA6B,IAAI;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qCAAoC,8BAA8B;AAClE;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU,oBAAoB;AAC9B;AACA;;AAEA;AACA,WAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAA+B,sBAAsB;AACrD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;;;;;;;;mCC/NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA2C;AAC3C;AACA,4DAA2D;;AAE3D;AACA,oDAAmD;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA0B,MAAM,aAAa,OAAO;;AAEpD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf,eAAc;AACd,eAAc;AACd,iBAAgB;AAChB,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA,WAAU;AACV,UAAS;AACT,UAAS;AACT,YAAW;AACX,WAAU;AACV,WAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf,cAAa,EAAE;AACf,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,SAAS;AACtB,cAAa,QAAQ;AACrB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,EAAE;AACf,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,UAAU;AACvB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf,gBAAe,QAAQ;AACvB;AACA;AACA;AACA,eAAc,gBAAgB;AAC9B,MAAK;AACL,0BAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,EAAE;AACf,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,SAAS;AACtB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,SAAS;AACxB;AACA;AACA,eAAc,2BAA2B;AACzC;AACA;AACA,oBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,OAAM;AACN;AACA;AACA,kCAAiC,6BAA6B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gEAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iFAAgF;AAChF,wDAAuD;AACvD,iFAAgF;AAChF,gCAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA6B,YAAY,EAAE;AAC3C,qBAAoB,sBAAsB;AAC1C;;AAEA,yBAAwB;AACxB,kCAAiC,iBAAiB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;;AAEA,oBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB;AACA,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB;AACA,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,kBAAkB;AACjC,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,gBAAe,OAAO,WAAW;AACjC,kBAAiB,OAAO;AACxB;AACA;AACA,6BAA4B;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,qCAAoC,6BAA6B,EAAE;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,kBAAiB,oBAAoB;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,kBAAiB,oBAAoB;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB;AACA,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB;AACA,gBAAe,SAAS;AACxB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,6BAA6B;AAC5C,gBAAe,UAAU;AACzB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA,2DAA0D,2BAA2B,EAAE;;AAEvF;AACA,gEAA+D,wBAAwB,EAAE;AACzF,iBAAgB;AAChB,QAAO;;AAEP;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,EAAE;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2CAA0C;AAC1C,yCAAwC;AACxC,gEAA+D;AAC/D,kEAAiE;AACjE;AACA;AACA,eAAc;AACd;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,aAAa;AAC5B,gBAAe,MAAM;AACrB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,oCAAoC;AAC9C,WAAU,qCAAqC;AAC/C,WAAU;AACV;AACA;AACA;AACA,yCAAwC,qCAAqC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,qCAAqC;AAC/C,WAAU,qCAAqC;AAC/C,WAAU;AACV;AACA;AACA;AACA,oCAAmC,oCAAoC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,WAAU,qCAAqC;AAC/C,WAAU,qCAAqC;AAC/C,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,4BAA2B,kCAAkC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,WAAU,oCAAoC;AAC9C,WAAU,qCAAqC;AAC/C,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,gCAA+B,mCAAmC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,QAAQ;AACvB,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,eAAe;AAC9B;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,eAAe;AAC9B;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,KAAK;AACpB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,qBAAqB;AACpC;AACA,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,UAAU,yCAAyC;AACtE;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,wBAAuB,UAAU,GAAG,UAAU,IAAI,UAAU;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,EAAE;AACjB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,oCAAoC;AAC9C,WAAU,qCAAqC;AAC/C,WAAU;AACV;AACA;AACA;AACA,yCAAwC,qCAAqC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,qCAAqC;AAC/C,WAAU,oCAAoC;AAC9C,WAAU;AACV;AACA;AACA;AACA,oCAAmC,oCAAoC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,QAAQ;AACvB,gBAAe,uBAAuB;AACtC,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,iBAAgB,SAAS,GAAG,SAAS,GAAG,SAAS;AACjD,gBAAe,SAAS,GAAG,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,KAAK;AACpB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,MAAM;AACrB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,eAAc;AACd;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,WAAU,+BAA+B;AACzC,WAAU,+BAA+B;AACzC,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,WAAU;AACV;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,4DAA4D;AAC9F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,qCAAqC;AACpD;AACA,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA,eAAc;AACd;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,oCAAoC;AAC9C,WAAU;AACV;AACA;AACA;AACA,wBAAuB,oCAAoC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,8CAA8C;AACxD,WAAU;AACV;AACA;AACA;AACA,iCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA,WAAU,+CAA+C;AACzD,WAAU,gDAAgD;AAC1D,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,gCAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,OAAO;AACtB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA,WAAU,8CAA8C;AACxD,WAAU;AACV;AACA;AACA,qCAAoC,4BAA4B;AAChE;AACA;AACA,qCAAoC,6BAA6B;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,mBAAkB,iBAAiB;AACnC;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,WAAU,4BAA4B;AACtC,WAAU;AACV;AACA;AACA;AACA,eAAc,UAAU,4BAA4B,YAAY,8BAA8B;AAC9F;AACA;AACA;AACA,SAAQ;AACR,eAAc,OAAO,4BAA4B,QAAQ,8BAA8B;AACvF;AACA;AACA;AACA,SAAQ;AACR,eAAc,OAAO,4BAA4B,QAAQ,8BAA8B;AACvF;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,sBAAsB;AACrC;AACA,gBAAe,KAAK;AACpB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,iBAAiB;AAC/B;AACA;AACA;AACA,WAAU,mBAAmB;AAC7B,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,gDAAgD;AAC1D,WAAU,+CAA+C;AACzD,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,4BAA4B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,cAAc,iBAAiB,EAAE;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,aAAa;AAC5B,kBAAiB,MAAM;AACvB;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA,SAAQ,IAAI;AACZ,eAAc,iBAAiB;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,+CAA+C;AACzD,WAAU;AACV;AACA;AACA;AACA,iCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,mCAAmC;AAC7C,WAAU;AACV;AACA;AACA;AACA,uBAAsB,oCAAoC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,WAAU,iBAAiB;AAC3B,WAAU,oBAAoB;AAC9B,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,yDAAyD;AACxE;AACA,kBAAiB,MAAM;AACvB;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,WAAU,8BAA8B;AACxC,WAAU,8BAA8B;AACxC,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,6BAA6B;AAC5C,gBAAe,UAAU;AACzB,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,WAAU,8BAA8B;AACxC,WAAU,8BAA8B;AACxC,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA,WAAU,kEAAkE;AAC5E,WAAU;AACV;AACA;AACA,gCAA+B,6BAA6B;AAC5D;AACA;AACA,gCAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,qBAAoB,iCAAiC;AACrD,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,KAAK;AACpB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,qBAAqB;AACpC;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA,gBAAe,OAAO;AACtB;AACA,gBAAe,QAAQ;AACvB;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,kCAAkC;AAChE;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,KAAK;AACpB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,qBAAoB;AACpB;AACA;AACA;AACA,eAAc;AACd;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,yBAAyB;AACxC;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,KAAK;AACpB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,KAAK;AACpB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,qBAAqB;AACpC;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA,gBAAe,QAAQ;AACvB;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,oCAAmC,6DAA6D;AAChG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,wDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA,WAAU,mBAAmB;AAC7B,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA,WAAU,mBAAmB;AAC7B,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA,kCAAiC,kBAAkB,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA,8BAA6B,kBAAkB,EAAE;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA,sBAAqB;AACrB,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA,sBAAqB;AACrB;AACA,2BAA0B,YAAY;AACtC;AACA;AACA,2BAA0B,YAAY;AACtC;AACA;AACA;AACA,sBAAqB;AACrB,sBAAqB;AACrB;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B,eAAc;AACd;AACA,kBAAiB,SAAS;AAC1B,eAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,UAAU;AACzB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,oBAAmB,mBAAmB,GAAG,iBAAiB;AAC1D;AACA;AACA;AACA,oBAAmB,YAAY,GAAG,YAAY;AAC9C;AACA;AACA;AACA,eAAc,WAAW,8BAA8B,GAAG,4BAA4B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,UAAU;AACzB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA,kBAAiB,mBAAmB,GAAG,YAAY,GAAG,iBAAiB;AACvE,eAAc;AACd;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,kBAAiB,mBAAmB,GAAG,YAAY,GAAG,iBAAiB;AACvE,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,UAAU;AACzB,kBAAiB,OAAO;AACxB;AACA;AACA,oBAAmB,mBAAmB,GAAG,YAAY,GAAG,iBAAiB;AACzE,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,UAAU;AACzB,kBAAiB,OAAO;AACxB;AACA;AACA,wBAAuB,UAAU,mBAAmB,EAAE,GAAG,UAAU,4BAA4B,EAAE;AACjG,eAAc,UAAU,8BAA8B;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,sBAAqB,4BAA4B;AACjD,sBAAqB,6BAA6B;AAClD,sBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,0BAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,sBAAqB,4BAA4B;AACjD,sBAAqB,6BAA6B;AAClD,sBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,8BAA6B,4BAA4B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,aAAa;AAC5B,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA,sBAAqB,QAAQ,OAAO,SAAS,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,aAAa;AAC5B,kBAAiB,QAAQ;AACzB;AACA;AACA,sBAAqB,OAAO,OAAO,SAAS,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,iBAAgB,OAAO;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA,sBAAqB;AACrB;AACA;AACA,eAAc;AACd;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA,mBAAkB,iBAAiB;AACnC;AACA,SAAQ;AACR,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,uBAAuB;AACtC;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA,qBAAoB,iBAAiB;AACrC;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA,sBAAqB,+BAA+B;AACpD,sBAAqB;AACrB;AACA;AACA;AACA;AACA,eAAc,2BAA2B;AACzC;AACA;;AAEA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,8BAA8B;AAC7C;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA,sBAAqB;AACrB;AACA;AACA,eAAc;AACd;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA,iBAAgB,2BAA2B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,8BAA8B;AAC7C;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA,sBAAqB;AACrB;AACA;AACA,eAAc;AACd;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,aAAa;AAC5B,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA,sBAAqB,QAAQ,OAAO,+BAA+B,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,aAAa;AAC5B,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA,sBAAqB,QAAQ,OAAO,SAAS,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,qBAAoB,iBAAiB;AACrC;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,kBAAiB,sBAAsB;AACvC,sBAAqB,UAAU;AAC/B;AACA;AACA,uEAAsE,2BAA2B,EAAE;AACnG,kBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA,6DAA4D;AAC5D,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA,2CAA0C,OAAO;AACjD,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,4CAA2C,YAAY;AACvD,2CAA0C,QAAQ;AAClD,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA,sDAAqD,2BAA2B,EAAE;AAClF,yCAAwC,aAAa,eAAe,EAAE;AACtE,kBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA,yDAAwD,qCAAqC;AAC7F;AACA;AACA;AACA;AACA,2DAA0D,qBAAqB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAwC;;AAExC,6CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP,oBAAmB;;AAEnB;AACA;AACA;AACA;AACA,+BAA8B,mBAAmB;AACjD;AACA;AACA;AACA;AACA,6CAA4C;;AAE5C;AACA,wDAAuD;AACvD;AACA;AACA,8BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C,gCAA+B,iCAAiC;AAChE,eAAc;AACd;AACA;AACA,uBAAsB;;AAEtB;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B,iBAAgB,OAAO;AACvB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAiC;AACjC,cAAa,QAAQ,QAAQ,UAAU,SAAS,aAAa;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B,iBAAgB,OAAO;AACvB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,iBAAgB,OAAO;AACvB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,gBAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,SAAS;AAC1B;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,WAAU,8CAA8C;AACxD,WAAU;AACV;AACA;AACA,mCAAkC,6BAA6B;AAC/D,gBAAe,6CAA6C;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,EAAE;AACjB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,WAAU,mBAAmB;AAC7B,WAAU;AACV;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,KAAK;AACpB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,WAAU,OAAO,OAAO,qBAAqB,EAAE,EAAE;AACjD,WAAU,OAAO,OAAO,qBAAqB,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA,iBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,mBAAmB,GAAG,iBAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA8B,qDAAqD;AACnF;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,WAAU,OAAO,OAAO,SAAS,EAAE,EAAE;AACrC,WAAU,OAAO,OAAO,SAAS,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,kBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC,gBAAe,EAAE;AACjB,kBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR,eAAc;AACd;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC,gBAAe,uBAAuB;AACtC,gBAAe,EAAE;AACjB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,eAAc,iBAAiB;AAC/B;AACA;AACA;AACA,WAAU,SAAS;AACnB,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT,kCAAiC,sEAAsE;AACvG;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAmC,8DAA8D;AACjG;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,4DAA4D;AAClF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,yCAAyC;AAC7D;AACA,MAAK;;AAEL,uEAAsE,uCAAuC;;AAE7G;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;;AC5wYD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,wBAAuB,SAAS;AAChC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA4C,KAAK;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;;AAGA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA,YAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACzkBA;AACA;AACA;AACA;AACA;AACA,E;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,UAAS,OAAO;AAChB;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH,EAAC;;;;;;;ACnMD;;AAEA;AACA;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpFA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAA+B;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA0B,kBAAkB,wBAAwB;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oCAAmC;AACnC;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA,EAAC;;AAED;AACA;AACA;;;;;;;;AC1MA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;;;;;;;AC1GA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAqD,cAAc;AACnE;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;ACpNA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE,kBAAkB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3NA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,UAAU;AACtB,aAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,G;;;;;;AC1DA;;AAEA;AACA;;AAEA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACbA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,4CAA4C;AACvD;AACA;AACA,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,cAAa,oBAAoB;AACjC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,8FAA6F;AAC7F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,sBAAsB;AAClC;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,EAAE;AACd,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA,YAAW,sBAAsB;AACjC;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,aAAa;AACzB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAY,EAAE;AACd,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAY,EAAE;AACd,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,EAAE;AACd,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,cAAc;AACzB;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH,qBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACzSA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,IAAI;AACf;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY,MAAM;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA,EAAC;;;;;;;AClGD;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY,QAAQ;AACpB,aAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,aAAY,MAAM;AAClB,aAAY;AACZ;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;;;;;;ACnLA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,SAAS;AACrB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,aAAY,mBAAmB;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA,aAAY,mBAAmB;AAC/B;AACA;AACA;AACA,kBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,mBAAmB;AAC/B,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,oBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,sBAAsB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtVA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;AACA,WAAU;AACV,YAAW,MAAM;AACjB,aAAY,WAAW;AACvB;AACA;AACA;AACA;;;;;;;ACVA;AACA;AACA;AACA;AACA,WAAU;AACV,YAAW,MAAM;AACjB,aAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,EAAC;AACD;AACA,EAAC;AACD;AACA;;AAEA;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;ACtFA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B,wBAAuB,OAAO;AAC9B,0BAAyB,OAAO;AAChC,kCAAiC,QAAQ;AACzC,eAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+CAA8C;AAC9C;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;AClGA;AACA;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,G;;;;;;AClDA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oC;;;;;;ACpBA;AACA;AACA,WAAU;AACV;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,aAAY,EAAE;AACd;AACA,aAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,gBAAgB;AAC/B;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;;;;;;;AC9DA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAqC,UAAU,EAAE,GAAG,EAAE,KAAK;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;;;;;;;AC3DA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA,oBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG,IAAI;AACP;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA,cAAa,kCAAkC;AAC/C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;;;;;;ACrWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;AACD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrlB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO,wCAAwC;AAC1D;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,4DAA4D;AACjG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,2EAA2E;AAChH,YAAW,0BAA0B,gFAAgF;AACrH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,qFAAqF;AAC1H,YAAW,0BAA0B,kGAAkG;AACvI;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gFAAgF;AACrH,YAAW,0BAA0B,2DAA2D;AAChG,YAAW,0BAA0B,kFAAkF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,qGAAqG;AAC1I,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,0GAA0G;AAC/I,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,iFAAiF;AACtH,YAAW,OAAO;AAClB,YAAW,0BAA0B,mFAAmF;AACxH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrlB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gFAAgF;AACrH,YAAW,0BAA0B,kFAAkF;AACvlB;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B,+FAA+F;AACplB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvlB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrlB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gFAAgF;AACrH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B,+FAA+F;AACpI,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B,+FAA+F;AACpI,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL,eAAc;AACd;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvlB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;AClkND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;AACD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrlB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO,wCAAwC;AAC1D;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,4DAA4D;AACjG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,2EAA2E;AAChH,YAAW,0BAA0B,gFAAgF;AACrH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,qFAAqF;AAC1H,YAAW,0BAA0B,kGAAkG;AACvI;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gFAAgF;AACrH,YAAW,0BAA0B,2DAA2D;AAChG,YAAW,0BAA0B,kFAAkF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,qGAAqG;AAC1I,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,0GAA0G;AAC/I,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,iFAAiF;AACtH,YAAW,OAAO;AAClB,YAAW,0BAA0B,mFAAmF;AACxH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrlB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gFAAgF;AACrH,YAAW,0BAA0B,kFAAkF;AACvlB;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B,+FAA+F;AACplB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvlB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrlB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gFAAgF;AACrH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL,eAAc;AACd;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;AChsMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;AACD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO,wCAAwC;AAC1D;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,4DAA4D;AACjG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,2EAA2E;AAChH,YAAW,0BAA0B,gFAAgF;AACrH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,qFAAqF;AAC1H,YAAW,0BAA0B,kGAAkG;AACvI;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gFAAgF;AACrH,YAAW,0BAA0B,2DAA2D;AAChG,YAAW,0BAA0B,kFAAkF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,qGAAqG;AAC1I,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,0GAA0G;AAC/I,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,iFAAiF;AACtH,YAAW,OAAO;AAClB,YAAW,0BAA0B,mFAAmF;AACxH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrlB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gFAAgF;AACrH,YAAW,0BAA0B,kFAAkF;AACvlB;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B,+FAA+F;AACplB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvlB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrlB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gFAAgF;AACrH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL,eAAc;AACd;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;AClrMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;AACD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrlB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO,wCAAwC;AAC1D;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,4DAA4D;AACjG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,2EAA2E;AAChH,YAAW,0BAA0B,gFAAgF;AACrH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,qFAAqF;AAC1H,YAAW,0BAA0B,kGAAkG;AACvI;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gFAAgF;AACrH,YAAW,0BAA0B,2DAA2D;AAChG,YAAW,0BAA0B,kFAAkF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,qGAAqG;AAC1I,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,0GAA0G;AAC/I,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,iFAAiF;AACtH,YAAW,OAAO;AAClB,YAAW,0BAA0B,mFAAmF;AACxH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrlB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gFAAgF;AACrH,YAAW,0BAA0B,kFAAkF;AACvH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B,+FAA+F;AACplB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvlB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrlB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gFAAgF;AACrH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL,eAAc;AACd;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACjiMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;AACD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrlB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,4EAA4E;AACjH,YAAW,0BAA0B;AACrlB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO,wCAAwC;AAC1D;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,4DAA4D;AACjG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,2EAA2E;AAChH,YAAW,0BAA0B,gFAAgF;AACrH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,2EAA2E;AAChH,YAAW,0BAA0B,uFAAuF;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,qFAAqF;AAC1H,YAAW,0BAA0B,kGAAkG;AACvI;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gFAAgF;AACrH,YAAW,0BAA0B,2DAA2D;AAChG,YAAW,0BAA0B,kFAAkF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,qGAAqG;AAC1I,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,0GAA0G;AAC/I,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,iFAAiF;AACtH,YAAW,OAAO;AAClB,YAAW,0BAA0B,mFAAmF;AACxH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrlB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gFAAgF;AACrH,YAAW,0BAA0B,kFAAkF;AACvlB;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,yFAAyF;AAC9H;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvlB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrlB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gFAAgF;AACrH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL,eAAc;AACd;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACxuMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;AACD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrlB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO,wCAAwC;AAC1D;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,4DAA4D;AACjG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,2EAA2E;AAChH,YAAW,0BAA0B,gFAAgF;AACrH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,qFAAqF;AAC1H,YAAW,0BAA0B,kGAAkG;AACvI;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gFAAgF;AACrH,YAAW,0BAA0B,2DAA2D;AAChG,YAAW,0BAA0B,kFAAkF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,qGAAqG;AAC1I,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,0GAA0G;AAC/I,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,iFAAiF;AACtH,YAAW,OAAO;AAClB,YAAW,0BAA0B,mFAAmF;AACxH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrlB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gFAAgF;AACrH,YAAW,0BAA0B,kFAAkF;AACvlB;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B,+FAA+F;AACplB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvlB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrlB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gFAAgF;AACrH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B,+FAA+F;AACpI,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B,+FAA+F;AACpI,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL,eAAc;AACd;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvlB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;AClkND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;AACD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrlB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO,wCAAwC;AAC1D;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,4DAA4D;AACjG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,2EAA2E;AAChH,YAAW,0BAA0B,gFAAgF;AACrH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B,qGAAqG;AAC1I,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,0GAA0G;AAC/I,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B,sDAAsD;AAC3F,YAAW,0BAA0B;AACrlB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gFAAgF;AACrH,YAAW,0BAA0B,kFAAkF;AACvlB;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,0BAA0B,+FAA+F;AACpI,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B,+FAA+F;AACplB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvlB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B,gFAAgF;AACrH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B,+FAA+F;AACpI,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,0BAA0B,+FAA+F;AACpI,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AACllB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL,eAAc;AACd;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,0BAA0B;AACrC,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB,YAAW,aAAa;AACxB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,MAAM;AACjB,YAAW,0BAA0B,gEAAgE;AACrG,YAAW,0BAA0B,kEAAkE;AACvlB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,aAAa;AACxB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,EAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9bf656d20e4d0715d834\n **/","null\n\n\n/** WEBPACK FOOTER **\n ** (webpack)-dev-server/client?http:/0.0.0.0:8080\n **/","var url = require('url');\r\nvar SockJS = require(\"sockjs-client\");\r\nvar stripAnsi = require('strip-ansi');\r\nvar scriptElements = document.getElementsByTagName(\"script\");\r\nvar scriptHost = scriptElements[scriptElements.length-1].getAttribute(\"src\").replace(/\\/[^\\/]+$/, \"\");\r\n\r\n// If this bundle is inlined, use the resource query to get the correct url.\r\n// Else, get the url from the <script> this file was called with.\r\nvar urlParts = url.parse(typeof __resourceQuery === \"string\" && __resourceQuery ?\r\n\t__resourceQuery.substr(1) :\r\n\t(scriptHost ? scriptHost : \"/\")\r\n);\r\n\r\nvar sock = null;\r\nvar hot = false;\r\nvar initial = true;\r\nvar currentHash = \"\";\r\n\r\nvar onSocketMsg = {\r\n\thot: function() {\r\n\t\thot = true;\r\n\t\tconsole.log(\"[WDS] Hot Module Replacement enabled.\");\r\n\t},\r\n\tinvalid: function() {\r\n\t\tconsole.log(\"[WDS] App updated. Recompiling...\");\r\n\t},\r\n\thash: function(hash) {\r\n\t\tcurrentHash = hash;\r\n\t},\r\n\t\"still-ok\": function() {\r\n\t\tconsole.log(\"[WDS] Nothing changed.\")\r\n\t},\r\n\tok: function() {\r\n\t\tif(initial) return initial = false;\r\n\t\treloadApp();\r\n\t},\r\n\twarnings: function(warnings) {\r\n\t\tconsole.log(\"[WDS] Warnings while compiling.\");\r\n\t\tfor(var i = 0; i < warnings.length; i++)\r\n\t\t\tconsole.warn(stripAnsi(warnings[i]));\r\n\t\tif(initial) return initial = false;\r\n\t\treloadApp();\r\n\t},\r\n\terrors: function(errors) {\r\n\t\tconsole.log(\"[WDS] Errors while compiling.\");\r\n\t\tfor(var i = 0; i < errors.length; i++)\r\n\t\t\tconsole.error(stripAnsi(errors[i]));\r\n\t\tif(initial) return initial = false;\r\n\t\treloadApp();\r\n\t},\r\n\t\"proxy-error\": function(errors) {\r\n\t\tconsole.log(\"[WDS] Proxy error.\");\r\n\t\tfor(var i = 0; i < errors.length; i++)\r\n\t\t\tconsole.error(stripAnsi(errors[i]));\r\n\t\tif(initial) return initial = false;\r\n\t\treloadApp();\r\n\t}\r\n};\r\n\r\nvar newConnection = function() {\r\n\tsock = new SockJS(url.format({\r\n\t\tprotocol: urlParts.protocol,\r\n\t\tauth: urlParts.auth,\r\n\t\thostname: (urlParts.hostname === '0.0.0.0') ? window.location.hostname : urlParts.hostname,\r\n\t\tport: urlParts.port,\r\n\t\tpathname: urlParts.path === '/' ? \"/sockjs-node\" : urlParts.path\r\n\t}));\r\n\r\n\tsock.onclose = function() {\r\n\t\tconsole.error(\"[WDS] Disconnected!\");\r\n\r\n\t\t// Try to reconnect.\r\n\t\tsock = null;\r\n\t\tsetTimeout(function () {\r\n\t\t\tnewConnection();\r\n\t\t}, 2000);\r\n\t};\r\n\r\n\tsock.onmessage = function(e) {\r\n\t\t// This assumes that all data sent via the websocket is JSON.\r\n\t\tvar msg = JSON.parse(e.data);\r\n\t\tonSocketMsg[msg.type](msg.data);\r\n\t};\r\n};\r\n\r\nnewConnection();\r\n\r\nfunction reloadApp() {\r\n\tif(hot) {\r\n\t\tconsole.log(\"[WDS] App hot update...\");\r\n\t\twindow.postMessage(\"webpackHotUpdate\" + currentHash, \"*\");\r\n\t} else {\r\n\t\tconsole.log(\"[WDS] App updated. Reloading...\");\r\n\t\twindow.location.reload();\r\n\t}\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/client?http://0.0.0.0:8080\n ** module id = 1\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/url/url.js\n ** module id = 2\n ** module chunks = 0\n **/","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/url/~/punycode/punycode.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/url/~/querystring/index.js\n ** module id = 5\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/url/~/querystring/decode.js\n ** module id = 6\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/url/~/querystring/encode.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nvar transportList = require('./transport-list');\n\nmodule.exports = require('./main')(transportList);\n\n// TODO can't get rid of this until all servers do\nif ('_sockjs_onload' in global) {\n  setTimeout(global._sockjs_onload, 1);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/entry.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = [\n  // streaming transports\n  require('./transport/websocket')\n, require('./transport/xhr-streaming')\n, require('./transport/xdr-streaming')\n, require('./transport/eventsource')\n, require('./transport/lib/iframe-wrap')(require('./transport/eventsource'))\n\n  // polling transports\n, require('./transport/htmlfile')\n, require('./transport/lib/iframe-wrap')(require('./transport/htmlfile'))\n, require('./transport/xhr-polling')\n, require('./transport/xdr-polling')\n, require('./transport/lib/iframe-wrap')(require('./transport/xhr-polling'))\n, require('./transport/jsonp-polling')\n];\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport-list.js\n ** module id = 9\n ** module chunks = 0\n **/","'use strict';\n\nvar utils = require('../utils/event')\n  , urlUtils = require('../utils/url')\n  , inherits = require('inherits')\n  , EventEmitter = require('events').EventEmitter\n  , WebsocketDriver = require('./driver/websocket')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:websocket');\n}\n\nfunction WebSocketTransport(transUrl, ignore, options) {\n  if (!WebSocketTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n\n  EventEmitter.call(this);\n  debug('constructor', transUrl);\n\n  var self = this;\n  var url = urlUtils.addPath(transUrl, '/websocket');\n  if (url.slice(0, 5) === 'https') {\n    url = 'wss' + url.slice(5);\n  } else {\n    url = 'ws' + url.slice(4);\n  }\n  this.url = url;\n\n  this.ws = new WebsocketDriver(this.url, undefined, options);\n  this.ws.onmessage = function(e) {\n    debug('message event', e.data);\n    self.emit('message', e.data);\n  };\n  // Firefox has an interesting bug. If a websocket connection is\n  // created after onunload, it stays alive even when user\n  // navigates away from the page. In such situation let's lie -\n  // let's not open the ws connection at all. See:\n  // https://github.com/sockjs/sockjs-client/issues/28\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=696085\n  this.unloadRef = utils.unloadAdd(function() {\n    debug('unload');\n    self.ws.close();\n  });\n  this.ws.onclose = function(e) {\n    debug('close event', e.code, e.reason);\n    self.emit('close', e.code, e.reason);\n    self._cleanup();\n  };\n  this.ws.onerror = function(e) {\n    debug('error event', e);\n    self.emit('close', 1006, 'WebSocket connection broken');\n    self._cleanup();\n  };\n}\n\ninherits(WebSocketTransport, EventEmitter);\n\nWebSocketTransport.prototype.send = function(data) {\n  var msg = '[' + data + ']';\n  debug('send', msg);\n  this.ws.send(msg);\n};\n\nWebSocketTransport.prototype.close = function() {\n  debug('close');\n  if (this.ws) {\n    this.ws.close();\n  }\n  this._cleanup();\n};\n\nWebSocketTransport.prototype._cleanup = function() {\n  debug('_cleanup');\n  var ws = this.ws;\n  if (ws) {\n    ws.onmessage = ws.onclose = ws.onerror = null;\n  }\n  utils.unloadDel(this.unloadRef);\n  this.unloadRef = this.ws = null;\n  this.removeAllListeners();\n};\n\nWebSocketTransport.enabled = function() {\n  debug('enabled');\n  return !!WebsocketDriver;\n};\nWebSocketTransport.transportName = 'websocket';\n\n// In theory, ws should require 1 round trip. But in chrome, this is\n// not very stable over SSL. Most likely a ws connection requires a\n// separate SSL connection, in which case 2 round trips are an\n// absolute minumum.\nWebSocketTransport.roundTrips = 2;\n\nmodule.exports = WebSocketTransport;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/websocket.js\n ** module id = 10\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/process/browser.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict';\n\nvar random = require('./random');\n\nvar onUnload = {}\n  , afterUnload = false\n    // detect google chrome packaged apps because they don't allow the 'unload' event\n  , isChromePackagedApp = global.chrome && global.chrome.app && global.chrome.app.runtime\n  ;\n\nmodule.exports = {\n  attachEvent: function(event, listener) {\n    if (typeof global.addEventListener !== 'undefined') {\n      global.addEventListener(event, listener, false);\n    } else if (global.document && global.attachEvent) {\n      // IE quirks.\n      // According to: http://stevesouders.com/misc/test-postmessage.php\n      // the message gets delivered only to 'document', not 'window'.\n      global.document.attachEvent('on' + event, listener);\n      // I get 'window' for ie8.\n      global.attachEvent('on' + event, listener);\n    }\n  }\n\n, detachEvent: function(event, listener) {\n    if (typeof global.addEventListener !== 'undefined') {\n      global.removeEventListener(event, listener, false);\n    } else if (global.document && global.detachEvent) {\n      global.document.detachEvent('on' + event, listener);\n      global.detachEvent('on' + event, listener);\n    }\n  }\n\n, unloadAdd: function(listener) {\n    if (isChromePackagedApp) {\n      return null;\n    }\n\n    var ref = random.string(8);\n    onUnload[ref] = listener;\n    if (afterUnload) {\n      setTimeout(this.triggerUnloadCallbacks, 0);\n    }\n    return ref;\n  }\n\n, unloadDel: function(ref) {\n    if (ref in onUnload) {\n      delete onUnload[ref];\n    }\n  }\n\n, triggerUnloadCallbacks: function() {\n    for (var ref in onUnload) {\n      onUnload[ref]();\n      delete onUnload[ref];\n    }\n  }\n};\n\nvar unloadTriggered = function() {\n  if (afterUnload) {\n    return;\n  }\n  afterUnload = true;\n  module.exports.triggerUnloadCallbacks();\n};\n\n// 'unload' alone is not reliable in opera within an iframe, but we\n// can't use `beforeunload` as IE fires it on javascript: links.\nif (!isChromePackagedApp) {\n  module.exports.attachEvent('unload', unloadTriggered);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/utils/event.js\n ** module id = 12\n ** module chunks = 0\n **/","'use strict';\n\n/* global crypto:true */\nvar crypto = require('crypto');\n\n// This string has length 32, a power of 2, so the modulus doesn't introduce a\n// bias.\nvar _randomStringChars = 'abcdefghijklmnopqrstuvwxyz012345';\nmodule.exports = {\n  string: function(length) {\n    var max = _randomStringChars.length;\n    var bytes = crypto.randomBytes(length);\n    var ret = [];\n    for (var i = 0; i < length; i++) {\n      ret.push(_randomStringChars.substr(bytes[i] % max, 1));\n    }\n    return ret.join('');\n  }\n\n, number: function(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n, numberString: function(max) {\n    var t = ('' + (max - 1)).length;\n    var p = new Array(t + 1).join('0');\n    return (p + this.number(max)).slice(-t);\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/utils/random.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\n\nif (global.crypto && global.crypto.getRandomValues) {\n  module.exports.randomBytes = function(length) {\n    var bytes = new Uint8Array(length);\n    global.crypto.getRandomValues(bytes);\n    return bytes;\n  };\n} else {\n  module.exports.randomBytes = function(length) {\n    var bytes = new Array(length);\n    for (var i = 0; i < length; i++) {\n      bytes[i] = Math.floor(Math.random() * 256);\n    }\n    return bytes;\n  };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/utils/browser-crypto.js\n ** module id = 14\n ** module chunks = 0\n **/","'use strict';\n\nvar URL = require('url-parse');\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:utils:url');\n}\n\nmodule.exports = {\n  getOrigin: function(url) {\n    if (!url) {\n      return null;\n    }\n\n    var p = new URL(url);\n    if (p.protocol === 'file:') {\n      return null;\n    }\n\n    var port = p.port;\n    if (!port) {\n      port = (p.protocol === 'https:') ? '443' : '80';\n    }\n\n    return p.protocol + '//' + p.hostname + ':' + port;\n  }\n\n, isOriginEqual: function(a, b) {\n    var res = this.getOrigin(a) === this.getOrigin(b);\n    debug('same', a, b, res);\n    return res;\n  }\n\n, isSchemeEqual: function(a, b) {\n    return (a.split(':')[0] === b.split(':')[0]);\n  }\n\n, addPath: function (url, path) {\n    var qs = url.split('?');\n    return qs[0] + path + (qs[1] ? '?' + qs[1] : '');\n  }\n\n, addQuery: function (url, q) {\n    return url + (url.indexOf('?') === -1 ? ('?' + q) : ('&' + q));\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/utils/url.js\n ** module id = 15\n ** module chunks = 0\n **/","'use strict';\n\nvar required = require('requires-port')\n  , lolcation = require('./lolcation')\n  , qs = require('querystringify')\n  , relativere = /^\\/(?!\\/)/\n  , protocolre = /^([a-z0-9.+-]+:)?(\\/\\/)?(.*)$/i; // actual protocol is first match\n\n/**\n * These are the parse instructions for the URL parsers, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar instructions = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/\\:(\\d+)$/, 'port'],                 // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n /**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase\n * @property {Boolean} slashes Indicates whether the protocol is followed by double slash (\"//\")\n * @property {String} rest     Rest of the URL that is not part of the protocol\n */\n\n /**\n  * Extract protocol information from a URL with/without double slash (\"//\")\n  *\n  * @param  {String} address   URL we want to extract from.\n  * @return {ProtocolExtract}  Extracted information\n  * @private\n  */\nfunction extractProtocol(address) {\n  var match = protocolre.exec(address);\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3] ? match[3] : ''\n  };\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my CDO.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} location Location defaults for relative paths.\n * @param {Boolean|Function} parser Parser for the query string.\n * @api public\n */\nfunction URL(address, location, parser) {\n  if (!(this instanceof URL)) {\n    return new URL(address, location, parser);\n  }\n\n  var relative = relativere.test(address)\n    , parse, instruction, index, key\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) {\n    parser = qs.parse;\n  }\n\n  location = lolcation(location);\n\n  // extract protocol information before running the instructions\n  var extracted = extractProtocol(address);\n  url.protocol = extracted.protocol || location.protocol || '';\n  url.slashes = extracted.slashes || location.slashes;\n  address = extracted.rest;\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if (index = parse.exec(address)) {\n      url[key] = index[1];\n      address = address.slice(0, address.length - index[0].length);\n    }\n\n    url[key] = url[key] || (instruction[3] || ('port' === key && relative) ? location[key] || '' : '');\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) {\n      url[key] = url[key].toLowerCase();\n    }\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} prop          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function used to parse\n *                               the query.\n *                               When setting the protocol, double slash will be removed from\n *                               the final url if it is true.\n * @returns {URL}\n * @api public\n */\nURL.prototype.set = function set(part, value, fn) {\n  var url = this;\n\n  if ('query' === part) {\n    if ('string' === typeof value && value.length) {\n      value = (fn || qs.parse)(value);\n    }\n\n    url[part] = value;\n  } else if ('port' === part) {\n    url[part] = value;\n\n    if (!required(value, url.protocol)) {\n      url.host = url.hostname;\n      url[part] = '';\n    } else if (value) {\n      url.host = url.hostname +':'+ value;\n    }\n  } else if ('hostname' === part) {\n    url[part] = value;\n\n    if (url.port) value += ':'+ url.port;\n    url.host = value;\n  } else if ('host' === part) {\n    url[part] = value;\n\n    if (/\\:\\d+/.test(value)) {\n      value = value.split(':');\n      url.hostname = value[0];\n      url.port = value[1];\n    }\n  } else if ('protocol' === part) {\n    url.protocol = value;\n    url.slashes = !fn;\n  } else {\n    url[part] = value;\n  }\n\n  url.href = url.toString();\n  return url;\n};\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String}\n * @api public\n */\nURL.prototype.toString = function toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.hostname;\n  if (url.port) result += ':'+ url.port;\n\n  result += url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n};\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others.\n//\nURL.qs = qs;\nURL.location = lolcation;\nmodule.exports = URL;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/~/url-parse/index.js\n ** module id = 16\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/~/url-parse/~/requires-port/index.js\n ** module id = 17\n ** module chunks = 0\n **/","'use strict';\n\nvar slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 }\n  , URL;\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @api public\n */\nmodule.exports = function lolcation(loc) {\n  loc = loc || global.location || {};\n  URL = URL || require('./');\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new URL(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new URL(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/~/url-parse/lolcation.js\n ** module id = 18\n ** module chunks = 0\n **/","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=([^&]*)/g\n    , result = {}\n    , part;\n\n  //\n  // Little nifty parsing hack, leverage the fact that RegExp.exec increments\n  // the lastIndex property so we can continue executing this loop until we've\n  // parsed all results.\n  //\n  for (;\n    part = parser.exec(query);\n    result[decodeURIComponent(part[1])] = decodeURIComponent(part[2])\n  );\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/~/url-parse/~/querystringify/index.js\n ** module id = 19\n ** module chunks = 0\n **/","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/~/debug/browser.js\n ** module id = 20\n ** module chunks = 0\n **/","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/~/debug/debug.js\n ** module id = 21\n ** module chunks = 0\n **/","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/~/debug/~/ms/index.js\n ** module id = 22\n ** module chunks = 0\n **/","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/~/inherits/inherits_browser.js\n ** module id = 23\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , EventTarget = require('./eventtarget')\n  ;\n\nfunction EventEmitter() {\n  EventTarget.call(this);\n}\n\ninherits(EventEmitter, EventTarget);\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  if (type) {\n    delete this._listeners[type];\n  } else {\n    this._listeners = {};\n  }\n};\n\nEventEmitter.prototype.once = function(type, listener) {\n  var self = this\n    , fired = false;\n\n  function g() {\n    self.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  this.on(type, g);\n};\n\nEventEmitter.prototype.emit = function() {\n  var type = arguments[0];\n  var listeners = this._listeners[type];\n  if (!listeners) {\n    return;\n  }\n  // equivalent of Array.prototype.slice.call(arguments, 1);\n  var l = arguments.length;\n  var args = new Array(l - 1);\n  for (var ai = 1; ai < l; ai++) {\n    args[ai - 1] = arguments[ai];\n  }\n  for (var i = 0; i < listeners.length; i++) {\n    listeners[i].apply(this, args);\n  }\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener = EventTarget.prototype.addEventListener;\nEventEmitter.prototype.removeListener = EventTarget.prototype.removeEventListener;\n\nmodule.exports.EventEmitter = EventEmitter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/event/emitter.js\n ** module id = 24\n ** module chunks = 0\n **/","'use strict';\n\n/* Simplified implementation of DOM2 EventTarget.\n *   http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget\n */\n\nfunction EventTarget() {\n  this._listeners = {};\n}\n\nEventTarget.prototype.addEventListener = function(eventType, listener) {\n  if (!(eventType in this._listeners)) {\n    this._listeners[eventType] = [];\n  }\n  var arr = this._listeners[eventType];\n  // #4\n  if (arr.indexOf(listener) === -1) {\n    // Make a copy so as not to interfere with a current dispatchEvent.\n    arr = arr.concat([listener]);\n  }\n  this._listeners[eventType] = arr;\n};\n\nEventTarget.prototype.removeEventListener = function(eventType, listener) {\n  var arr = this._listeners[eventType];\n  if (!arr) {\n    return;\n  }\n  var idx = arr.indexOf(listener);\n  if (idx !== -1) {\n    if (arr.length > 1) {\n      // Make a copy so as not to interfere with a current dispatchEvent.\n      this._listeners[eventType] = arr.slice(0, idx).concat(arr.slice(idx + 1));\n    } else {\n      delete this._listeners[eventType];\n    }\n    return;\n  }\n};\n\nEventTarget.prototype.dispatchEvent = function() {\n  var event = arguments[0];\n  var t = event.type;\n  // equivalent of Array.prototype.slice.call(arguments, 0);\n  var args = arguments.length === 1 ? [event] : Array.apply(null, arguments);\n  // TODO: This doesn't match the real behavior; per spec, onfoo get\n  // their place in line from the /first/ time they're set from\n  // non-null. Although WebKit bumps it to the end every time it's\n  // set.\n  if (this['on' + t]) {\n    this['on' + t].apply(this, args);\n  }\n  if (t in this._listeners) {\n    // Grab a reference to the listeners list. removeEventListener may alter the list.\n    var listeners = this._listeners[t];\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i].apply(this, args);\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/event/eventtarget.js\n ** module id = 25\n ** module chunks = 0\n **/","module.exports = global.WebSocket || global.MozWebSocket;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/browser/websocket.js\n ** module id = 26\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , AjaxBasedTransport = require('./lib/ajax-based')\n  , XhrReceiver = require('./receiver/xhr')\n  , XHRCorsObject = require('./sender/xhr-cors')\n  , XHRLocalObject = require('./sender/xhr-local')\n  , browser = require('../utils/browser')\n  ;\n\nfunction XhrStreamingTransport(transUrl) {\n  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XHRCorsObject);\n}\n\ninherits(XhrStreamingTransport, AjaxBasedTransport);\n\nXhrStreamingTransport.enabled = function(info) {\n  if (info.nullOrigin) {\n    return false;\n  }\n  // Opera doesn't support xhr-streaming #60\n  // But it might be able to #92\n  if (browser.isOpera()) {\n    return false;\n  }\n\n  return XHRCorsObject.enabled;\n};\n\nXhrStreamingTransport.transportName = 'xhr-streaming';\nXhrStreamingTransport.roundTrips = 2; // preflight, ajax\n\n// Safari gets confused when a streaming ajax request is started\n// before onload. This causes the load indicator to spin indefinetely.\n// Only require body when used in a browser\nXhrStreamingTransport.needBody = !!global.document;\n\nmodule.exports = XhrStreamingTransport;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/xhr-streaming.js\n ** module id = 27\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , urlUtils = require('../../utils/url')\n  , SenderReceiver = require('./sender-receiver')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:ajax-based');\n}\n\nfunction createAjaxSender(AjaxObject) {\n  return function(url, payload, callback) {\n    debug('create ajax sender', url, payload);\n    var opt = {};\n    if (typeof payload === 'string') {\n      opt.headers = {'Content-type': 'text/plain'};\n    }\n    var ajaxUrl = urlUtils.addPath(url, '/xhr_send');\n    var xo = new AjaxObject('POST', ajaxUrl, payload, opt);\n    xo.once('finish', function(status) {\n      debug('finish', status);\n      xo = null;\n\n      if (status !== 200 && status !== 204) {\n        return callback(new Error('http status ' + status));\n      }\n      callback();\n    });\n    return function() {\n      debug('abort');\n      xo.close();\n      xo = null;\n\n      var err = new Error('Aborted');\n      err.code = 1000;\n      callback(err);\n    };\n  };\n}\n\nfunction AjaxBasedTransport(transUrl, urlSuffix, Receiver, AjaxObject) {\n  SenderReceiver.call(this, transUrl, urlSuffix, createAjaxSender(AjaxObject), Receiver, AjaxObject);\n}\n\ninherits(AjaxBasedTransport, SenderReceiver);\n\nmodule.exports = AjaxBasedTransport;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/lib/ajax-based.js\n ** module id = 28\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , urlUtils = require('../../utils/url')\n  , BufferedSender = require('./buffered-sender')\n  , Polling = require('./polling')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:sender-receiver');\n}\n\nfunction SenderReceiver(transUrl, urlSuffix, senderFunc, Receiver, AjaxObject) {\n  var pollUrl = urlUtils.addPath(transUrl, urlSuffix);\n  debug(pollUrl);\n  var self = this;\n  BufferedSender.call(this, transUrl, senderFunc);\n\n  this.poll = new Polling(Receiver, pollUrl, AjaxObject);\n  this.poll.on('message', function(msg) {\n    debug('poll message', msg);\n    self.emit('message', msg);\n  });\n  this.poll.once('close', function(code, reason) {\n    debug('poll close', code, reason);\n    self.poll = null;\n    self.emit('close', code, reason);\n    self.close();\n  });\n}\n\ninherits(SenderReceiver, BufferedSender);\n\nSenderReceiver.prototype.close = function() {\n  debug('close');\n  this.removeAllListeners();\n  if (this.poll) {\n    this.poll.abort();\n    this.poll = null;\n  }\n  this.stop();\n};\n\nmodule.exports = SenderReceiver;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/lib/sender-receiver.js\n ** module id = 29\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , EventEmitter = require('events').EventEmitter\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:buffered-sender');\n}\n\nfunction BufferedSender(url, sender) {\n  debug(url);\n  EventEmitter.call(this);\n  this.sendBuffer = [];\n  this.sender = sender;\n  this.url = url;\n}\n\ninherits(BufferedSender, EventEmitter);\n\nBufferedSender.prototype.send = function(message) {\n  debug('send', message);\n  this.sendBuffer.push(message);\n  if (!this.sendStop) {\n    this.sendSchedule();\n  }\n};\n\n// For polling transports in a situation when in the message callback,\n// new message is being send. If the sending connection was started\n// before receiving one, it is possible to saturate the network and\n// timeout due to the lack of receiving socket. To avoid that we delay\n// sending messages by some small time, in order to let receiving\n// connection be started beforehand. This is only a halfmeasure and\n// does not fix the big problem, but it does make the tests go more\n// stable on slow networks.\nBufferedSender.prototype.sendScheduleWait = function() {\n  debug('sendScheduleWait');\n  var self = this;\n  var tref;\n  this.sendStop = function() {\n    debug('sendStop');\n    self.sendStop = null;\n    clearTimeout(tref);\n  };\n  tref = setTimeout(function() {\n    debug('timeout');\n    self.sendStop = null;\n    self.sendSchedule();\n  }, 25);\n};\n\nBufferedSender.prototype.sendSchedule = function() {\n  debug('sendSchedule', this.sendBuffer.length);\n  var self = this;\n  if (this.sendBuffer.length > 0) {\n    var payload = '[' + this.sendBuffer.join(',') + ']';\n    this.sendStop = this.sender(this.url, payload, function(err) {\n      self.sendStop = null;\n      if (err) {\n        debug('error', err);\n        self.emit('close', err.code || 1006, 'Sending error: ' + err);\n        self._cleanup();\n      } else {\n        self.sendScheduleWait();\n      }\n    });\n    this.sendBuffer = [];\n  }\n};\n\nBufferedSender.prototype._cleanup = function() {\n  debug('_cleanup');\n  this.removeAllListeners();\n};\n\nBufferedSender.prototype.stop = function() {\n  debug('stop');\n  this._cleanup();\n  if (this.sendStop) {\n    this.sendStop();\n    this.sendStop = null;\n  }\n};\n\nmodule.exports = BufferedSender;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/lib/buffered-sender.js\n ** module id = 30\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , EventEmitter = require('events').EventEmitter\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:polling');\n}\n\nfunction Polling(Receiver, receiveUrl, AjaxObject) {\n  debug(receiveUrl);\n  EventEmitter.call(this);\n  this.Receiver = Receiver;\n  this.receiveUrl = receiveUrl;\n  this.AjaxObject = AjaxObject;\n  this._scheduleReceiver();\n}\n\ninherits(Polling, EventEmitter);\n\nPolling.prototype._scheduleReceiver = function() {\n  debug('_scheduleReceiver');\n  var self = this;\n  var poll = this.poll = new this.Receiver(this.receiveUrl, this.AjaxObject);\n\n  poll.on('message', function(msg) {\n    debug('message', msg);\n    self.emit('message', msg);\n  });\n\n  poll.once('close', function(code, reason) {\n    debug('close', code, reason, self.pollIsClosing);\n    self.poll = poll = null;\n\n    if (!self.pollIsClosing) {\n      if (reason === 'network') {\n        self._scheduleReceiver();\n      } else {\n        self.emit('close', code || 1006, reason);\n        self.removeAllListeners();\n      }\n    }\n  });\n};\n\nPolling.prototype.abort = function() {\n  debug('abort');\n  this.removeAllListeners();\n  this.pollIsClosing = true;\n  if (this.poll) {\n    this.poll.abort();\n  }\n};\n\nmodule.exports = Polling;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/lib/polling.js\n ** module id = 31\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , EventEmitter = require('events').EventEmitter\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:receiver:xhr');\n}\n\nfunction XhrReceiver(url, AjaxObject) {\n  debug(url);\n  EventEmitter.call(this);\n  var self = this;\n\n  this.bufferPosition = 0;\n\n  this.xo = new AjaxObject('POST', url, null);\n  this.xo.on('chunk', this._chunkHandler.bind(this));\n  this.xo.once('finish', function(status, text) {\n    debug('finish', status, text);\n    self._chunkHandler(status, text);\n    self.xo = null;\n    var reason = status === 200 ? 'network' : 'permanent';\n    debug('close', reason);\n    self.emit('close', null, reason);\n    self._cleanup();\n  });\n}\n\ninherits(XhrReceiver, EventEmitter);\n\nXhrReceiver.prototype._chunkHandler = function(status, text) {\n  debug('_chunkHandler', status);\n  if (status !== 200 || !text) {\n    return;\n  }\n\n  for (var idx = -1; ; this.bufferPosition += idx + 1) {\n    var buf = text.slice(this.bufferPosition);\n    idx = buf.indexOf('\\n');\n    if (idx === -1) {\n      break;\n    }\n    var msg = buf.slice(0, idx);\n    if (msg) {\n      debug('message', msg);\n      this.emit('message', msg);\n    }\n  }\n};\n\nXhrReceiver.prototype._cleanup = function() {\n  debug('_cleanup');\n  this.removeAllListeners();\n};\n\nXhrReceiver.prototype.abort = function() {\n  debug('abort');\n  if (this.xo) {\n    this.xo.close();\n    debug('close');\n    this.emit('close', null, 'user');\n    this.xo = null;\n  }\n  this._cleanup();\n};\n\nmodule.exports = XhrReceiver;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/receiver/xhr.js\n ** module id = 32\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , XhrDriver = require('../driver/xhr')\n  ;\n\nfunction XHRCorsObject(method, url, payload, opts) {\n  XhrDriver.call(this, method, url, payload, opts);\n}\n\ninherits(XHRCorsObject, XhrDriver);\n\nXHRCorsObject.enabled = XhrDriver.enabled && XhrDriver.supportsCORS;\n\nmodule.exports = XHRCorsObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/sender/xhr-cors.js\n ** module id = 33\n ** module chunks = 0\n **/","'use strict';\n\nvar EventEmitter = require('events').EventEmitter\n  , inherits = require('inherits')\n  , utils = require('../../utils/event')\n  , urlUtils = require('../../utils/url')\n  , XHR = global.XMLHttpRequest\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:browser:xhr');\n}\n\nfunction AbstractXHRObject(method, url, payload, opts) {\n  debug(method, url);\n  var self = this;\n  EventEmitter.call(this);\n\n  setTimeout(function () {\n    self._start(method, url, payload, opts);\n  }, 0);\n}\n\ninherits(AbstractXHRObject, EventEmitter);\n\nAbstractXHRObject.prototype._start = function(method, url, payload, opts) {\n  var self = this;\n\n  try {\n    this.xhr = new XHR();\n  } catch (x) {\n    // intentionally empty\n  }\n\n  if (!this.xhr) {\n    debug('no xhr');\n    this.emit('finish', 0, 'no xhr support');\n    this._cleanup();\n    return;\n  }\n\n  // several browsers cache POSTs\n  url = urlUtils.addQuery(url, 't=' + (+new Date()));\n\n  // Explorer tends to keep connection open, even after the\n  // tab gets closed: http://bugs.jquery.com/ticket/5280\n  this.unloadRef = utils.unloadAdd(function() {\n    debug('unload cleanup');\n    self._cleanup(true);\n  });\n  try {\n    this.xhr.open(method, url, true);\n    if (this.timeout && 'timeout' in this.xhr) {\n      this.xhr.timeout = this.timeout;\n      this.xhr.ontimeout = function() {\n        debug('xhr timeout');\n        self.emit('finish', 0, '');\n        self._cleanup(false);\n      };\n    }\n  } catch (e) {\n    debug('exception', e);\n    // IE raises an exception on wrong port.\n    this.emit('finish', 0, '');\n    this._cleanup(false);\n    return;\n  }\n\n  if ((!opts || !opts.noCredentials) && AbstractXHRObject.supportsCORS) {\n    debug('withCredentials');\n    // Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest :\n    // \"This never affects same-site requests.\"\n\n    this.xhr.withCredentials = 'true';\n  }\n  if (opts && opts.headers) {\n    for (var key in opts.headers) {\n      this.xhr.setRequestHeader(key, opts.headers[key]);\n    }\n  }\n\n  this.xhr.onreadystatechange = function() {\n    if (self.xhr) {\n      var x = self.xhr;\n      var text, status;\n      debug('readyState', x.readyState);\n      switch (x.readyState) {\n      case 3:\n        // IE doesn't like peeking into responseText or status\n        // on Microsoft.XMLHTTP and readystate=3\n        try {\n          status = x.status;\n          text = x.responseText;\n        } catch (e) {\n          // intentionally empty\n        }\n        debug('status', status);\n        // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450\n        if (status === 1223) {\n          status = 204;\n        }\n\n        // IE does return readystate == 3 for 404 answers.\n        if (status === 200 && text && text.length > 0) {\n          debug('chunk');\n          self.emit('chunk', status, text);\n        }\n        break;\n      case 4:\n        status = x.status;\n        debug('status', status);\n        // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450\n        if (status === 1223) {\n          status = 204;\n        }\n        // IE returns this for a bad port\n        // http://msdn.microsoft.com/en-us/library/windows/desktop/aa383770(v=vs.85).aspx\n        if (status === 12005 || status === 12029) {\n          status = 0;\n        }\n\n        debug('finish', status, x.responseText);\n        self.emit('finish', status, x.responseText);\n        self._cleanup(false);\n        break;\n      }\n    }\n  };\n\n  try {\n    self.xhr.send(payload);\n  } catch (e) {\n    self.emit('finish', 0, '');\n    self._cleanup(false);\n  }\n};\n\nAbstractXHRObject.prototype._cleanup = function(abort) {\n  debug('cleanup');\n  if (!this.xhr) {\n    return;\n  }\n  this.removeAllListeners();\n  utils.unloadDel(this.unloadRef);\n\n  // IE needs this field to be a function\n  this.xhr.onreadystatechange = function() {};\n  if (this.xhr.ontimeout) {\n    this.xhr.ontimeout = null;\n  }\n\n  if (abort) {\n    try {\n      this.xhr.abort();\n    } catch (x) {\n      // intentionally empty\n    }\n  }\n  this.unloadRef = this.xhr = null;\n};\n\nAbstractXHRObject.prototype.close = function() {\n  debug('close');\n  this._cleanup(true);\n};\n\nAbstractXHRObject.enabled = !!XHR;\n// override XMLHttpRequest for IE6/7\n// obfuscate to avoid firewalls\nvar axo = ['Active'].concat('Object').join('X');\nif (!AbstractXHRObject.enabled && (axo in global)) {\n  debug('overriding xmlhttprequest');\n  XHR = function() {\n    try {\n      return new global[axo]('Microsoft.XMLHTTP');\n    } catch (e) {\n      return null;\n    }\n  };\n  AbstractXHRObject.enabled = !!new XHR();\n}\n\nvar cors = false;\ntry {\n  cors = 'withCredentials' in new XHR();\n} catch (ignored) {\n  // intentionally empty\n}\n\nAbstractXHRObject.supportsCORS = cors;\n\nmodule.exports = AbstractXHRObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/browser/abstract-xhr.js\n ** module id = 34\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , XhrDriver = require('../driver/xhr')\n  ;\n\nfunction XHRLocalObject(method, url, payload /*, opts */) {\n  XhrDriver.call(this, method, url, payload, {\n    noCredentials: true\n  });\n}\n\ninherits(XHRLocalObject, XhrDriver);\n\nXHRLocalObject.enabled = XhrDriver.enabled;\n\nmodule.exports = XHRLocalObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/sender/xhr-local.js\n ** module id = 35\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = {\n  isOpera: function() {\n    return global.navigator &&\n      /opera/i.test(global.navigator.userAgent);\n  }\n\n, isKonqueror: function() {\n    return global.navigator &&\n      /konqueror/i.test(global.navigator.userAgent);\n  }\n\n  // #187 wrap document.domain in try/catch because of WP8 from file:///\n, hasDomain: function () {\n    // non-browser client always has a domain\n    if (!global.document) {\n      return true;\n    }\n\n    try {\n      return !!global.document.domain;\n    } catch (e) {\n      return false;\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/utils/browser.js\n ** module id = 36\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , AjaxBasedTransport = require('./lib/ajax-based')\n  , XhrReceiver = require('./receiver/xhr')\n  , XDRObject = require('./sender/xdr')\n  ;\n\n// According to:\n//   http://stackoverflow.com/questions/1641507/detect-browser-support-for-cross-domain-xmlhttprequests\n//   http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/\n\nfunction XdrStreamingTransport(transUrl) {\n  if (!XDRObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XDRObject);\n}\n\ninherits(XdrStreamingTransport, AjaxBasedTransport);\n\nXdrStreamingTransport.enabled = function(info) {\n  if (info.cookie_needed || info.nullOrigin) {\n    return false;\n  }\n  return XDRObject.enabled && info.sameScheme;\n};\n\nXdrStreamingTransport.transportName = 'xdr-streaming';\nXdrStreamingTransport.roundTrips = 2; // preflight, ajax\n\nmodule.exports = XdrStreamingTransport;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/xdr-streaming.js\n ** module id = 37\n ** module chunks = 0\n **/","'use strict';\n\nvar EventEmitter = require('events').EventEmitter\n  , inherits = require('inherits')\n  , eventUtils = require('../../utils/event')\n  , browser = require('../../utils/browser')\n  , urlUtils = require('../../utils/url')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:sender:xdr');\n}\n\n// References:\n//   http://ajaxian.com/archives/100-line-ajax-wrapper\n//   http://msdn.microsoft.com/en-us/library/cc288060(v=VS.85).aspx\n\nfunction XDRObject(method, url, payload) {\n  debug(method, url);\n  var self = this;\n  EventEmitter.call(this);\n\n  setTimeout(function() {\n    self._start(method, url, payload);\n  }, 0);\n}\n\ninherits(XDRObject, EventEmitter);\n\nXDRObject.prototype._start = function(method, url, payload) {\n  debug('_start');\n  var self = this;\n  var xdr = new global.XDomainRequest();\n  // IE caches even POSTs\n  url = urlUtils.addQuery(url, 't=' + (+new Date()));\n\n  xdr.onerror = function() {\n    debug('onerror');\n    self._error();\n  };\n  xdr.ontimeout = function() {\n    debug('ontimeout');\n    self._error();\n  };\n  xdr.onprogress = function() {\n    debug('progress', xdr.responseText);\n    self.emit('chunk', 200, xdr.responseText);\n  };\n  xdr.onload = function() {\n    debug('load');\n    self.emit('finish', 200, xdr.responseText);\n    self._cleanup(false);\n  };\n  this.xdr = xdr;\n  this.unloadRef = eventUtils.unloadAdd(function() {\n    self._cleanup(true);\n  });\n  try {\n    // Fails with AccessDenied if port number is bogus\n    this.xdr.open(method, url);\n    if (this.timeout) {\n      this.xdr.timeout = this.timeout;\n    }\n    this.xdr.send(payload);\n  } catch (x) {\n    this._error();\n  }\n};\n\nXDRObject.prototype._error = function() {\n  this.emit('finish', 0, '');\n  this._cleanup(false);\n};\n\nXDRObject.prototype._cleanup = function(abort) {\n  debug('cleanup', abort);\n  if (!this.xdr) {\n    return;\n  }\n  this.removeAllListeners();\n  eventUtils.unloadDel(this.unloadRef);\n\n  this.xdr.ontimeout = this.xdr.onerror = this.xdr.onprogress = this.xdr.onload = null;\n  if (abort) {\n    try {\n      this.xdr.abort();\n    } catch (x) {\n      // intentionally empty\n    }\n  }\n  this.unloadRef = this.xdr = null;\n};\n\nXDRObject.prototype.close = function() {\n  debug('close');\n  this._cleanup(true);\n};\n\n// IE 8/9 if the request target uses the same scheme - #79\nXDRObject.enabled = !!(global.XDomainRequest && browser.hasDomain());\n\nmodule.exports = XDRObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/sender/xdr.js\n ** module id = 38\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , AjaxBasedTransport = require('./lib/ajax-based')\n  , EventSourceReceiver = require('./receiver/eventsource')\n  , XHRCorsObject = require('./sender/xhr-cors')\n  , EventSourceDriver = require('eventsource')\n  ;\n\nfunction EventSourceTransport(transUrl) {\n  if (!EventSourceTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n\n  AjaxBasedTransport.call(this, transUrl, '/eventsource', EventSourceReceiver, XHRCorsObject);\n}\n\ninherits(EventSourceTransport, AjaxBasedTransport);\n\nEventSourceTransport.enabled = function() {\n  return !!EventSourceDriver;\n};\n\nEventSourceTransport.transportName = 'eventsource';\nEventSourceTransport.roundTrips = 2;\n\nmodule.exports = EventSourceTransport;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/eventsource.js\n ** module id = 39\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , EventEmitter = require('events').EventEmitter\n  , EventSourceDriver = require('eventsource')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:receiver:eventsource');\n}\n\nfunction EventSourceReceiver(url) {\n  debug(url);\n  EventEmitter.call(this);\n\n  var self = this;\n  var es = this.es = new EventSourceDriver(url);\n  es.onmessage = function(e) {\n    debug('message', e.data);\n    self.emit('message', decodeURI(e.data));\n  };\n  es.onerror = function(e) {\n    debug('error', es.readyState, e);\n    // ES on reconnection has readyState = 0 or 1.\n    // on network error it's CLOSED = 2\n    var reason = (es.readyState !== 2 ? 'network' : 'permanent');\n    self._cleanup();\n    self._close(reason);\n  };\n}\n\ninherits(EventSourceReceiver, EventEmitter);\n\nEventSourceReceiver.prototype.abort = function() {\n  debug('abort');\n  this._cleanup();\n  this._close('user');\n};\n\nEventSourceReceiver.prototype._cleanup = function() {\n  debug('cleanup');\n  var es = this.es;\n  if (es) {\n    es.onmessage = es.onerror = null;\n    es.close();\n    this.es = null;\n  }\n};\n\nEventSourceReceiver.prototype._close = function(reason) {\n  debug('close', reason);\n  var self = this;\n  // Safari and chrome < 15 crash if we close window before\n  // waiting for ES cleanup. See:\n  // https://code.google.com/p/chromium/issues/detail?id=89155\n  setTimeout(function() {\n    self.emit('close', null, reason);\n    self.removeAllListeners();\n  }, 200);\n};\n\nmodule.exports = EventSourceReceiver;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/receiver/eventsource.js\n ** module id = 40\n ** module chunks = 0\n **/","module.exports = global.EventSource;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/browser/eventsource.js\n ** module id = 41\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , IframeTransport = require('../iframe')\n  , objectUtils = require('../../utils/object')\n  ;\n\nmodule.exports = function(transport) {\n\n  function IframeWrapTransport(transUrl, baseUrl) {\n    IframeTransport.call(this, transport.transportName, transUrl, baseUrl);\n  }\n\n  inherits(IframeWrapTransport, IframeTransport);\n\n  IframeWrapTransport.enabled = function(url, info) {\n    if (!global.document) {\n      return false;\n    }\n\n    var iframeInfo = objectUtils.extend({}, info);\n    iframeInfo.sameOrigin = true;\n    return transport.enabled(iframeInfo) && IframeTransport.enabled();\n  };\n\n  IframeWrapTransport.transportName = 'iframe-' + transport.transportName;\n  IframeWrapTransport.needBody = true;\n  IframeWrapTransport.roundTrips = IframeTransport.roundTrips + transport.roundTrips - 1; // html, javascript (2) + transport - no CORS (1)\n\n  IframeWrapTransport.facadeTransport = transport;\n\n  return IframeWrapTransport;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/lib/iframe-wrap.js\n ** module id = 42\n ** module chunks = 0\n **/","'use strict';\n\n// Few cool transports do work only for same-origin. In order to make\n// them work cross-domain we shall use iframe, served from the\n// remote domain. New browsers have capabilities to communicate with\n// cross domain iframe using postMessage(). In IE it was implemented\n// from IE 8+, but of course, IE got some details wrong:\n//    http://msdn.microsoft.com/en-us/library/cc197015(v=VS.85).aspx\n//    http://stevesouders.com/misc/test-postmessage.php\n\nvar inherits = require('inherits')\n  , JSON3 = require('json3')\n  , EventEmitter = require('events').EventEmitter\n  , version = require('../version')\n  , urlUtils = require('../utils/url')\n  , iframeUtils = require('../utils/iframe')\n  , eventUtils = require('../utils/event')\n  , random = require('../utils/random')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:transport:iframe');\n}\n\nfunction IframeTransport(transport, transUrl, baseUrl) {\n  if (!IframeTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n  EventEmitter.call(this);\n\n  var self = this;\n  this.origin = urlUtils.getOrigin(baseUrl);\n  this.baseUrl = baseUrl;\n  this.transUrl = transUrl;\n  this.transport = transport;\n  this.windowId = random.string(8);\n\n  var iframeUrl = urlUtils.addPath(baseUrl, '/iframe.html') + '#' + this.windowId;\n  debug(transport, transUrl, iframeUrl);\n\n  this.iframeObj = iframeUtils.createIframe(iframeUrl, function(r) {\n    debug('err callback');\n    self.emit('close', 1006, 'Unable to load an iframe (' + r + ')');\n    self.close();\n  });\n\n  this.onmessageCallback = this._message.bind(this);\n  eventUtils.attachEvent('message', this.onmessageCallback);\n}\n\ninherits(IframeTransport, EventEmitter);\n\nIframeTransport.prototype.close = function() {\n  debug('close');\n  this.removeAllListeners();\n  if (this.iframeObj) {\n    eventUtils.detachEvent('message', this.onmessageCallback);\n    try {\n      // When the iframe is not loaded, IE raises an exception\n      // on 'contentWindow'.\n      this.postMessage('c');\n    } catch (x) {\n      // intentionally empty\n    }\n    this.iframeObj.cleanup();\n    this.iframeObj = null;\n    this.onmessageCallback = this.iframeObj = null;\n  }\n};\n\nIframeTransport.prototype._message = function(e) {\n  debug('message', e.data);\n  if (!urlUtils.isOriginEqual(e.origin, this.origin)) {\n    debug('not same origin', e.origin, this.origin);\n    return;\n  }\n\n  var iframeMessage;\n  try {\n    iframeMessage = JSON3.parse(e.data);\n  } catch (ignored) {\n    debug('bad json', e.data);\n    return;\n  }\n\n  if (iframeMessage.windowId !== this.windowId) {\n    debug('mismatched window id', iframeMessage.windowId, this.windowId);\n    return;\n  }\n\n  switch (iframeMessage.type) {\n  case 's':\n    this.iframeObj.loaded();\n    // window global dependency\n    this.postMessage('s', JSON3.stringify([\n      version\n    , this.transport\n    , this.transUrl\n    , this.baseUrl\n    ]));\n    break;\n  case 't':\n    this.emit('message', iframeMessage.data);\n    break;\n  case 'c':\n    var cdata;\n    try {\n      cdata = JSON3.parse(iframeMessage.data);\n    } catch (ignored) {\n      debug('bad json', iframeMessage.data);\n      return;\n    }\n    this.emit('close', cdata[0], cdata[1]);\n    this.close();\n    break;\n  }\n};\n\nIframeTransport.prototype.postMessage = function(type, data) {\n  debug('postMessage', type, data);\n  this.iframeObj.post(JSON3.stringify({\n    windowId: this.windowId\n  , type: type\n  , data: data || ''\n  }), this.origin);\n};\n\nIframeTransport.prototype.send = function(message) {\n  debug('send', message);\n  this.postMessage('m', message);\n};\n\nIframeTransport.enabled = function() {\n  return iframeUtils.iframeEnabled;\n};\n\nIframeTransport.transportName = 'iframe';\nIframeTransport.roundTrips = 2;\n\nmodule.exports = IframeTransport;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/iframe.js\n ** module id = 43\n ** module chunks = 0\n **/","/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]());\n\n    // Native constructor aliases.\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undef]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = \"\\\\u00\";\n        var quote = function (value) {\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + '\"';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return \"null\";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/~/json3/lib/json3.js\n ** module id = 44\n ** module chunks = 0\n **/","module.exports = __webpack_amd_options__;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/amd-options.js\n ** module id = 45\n ** module chunks = 0\n **/","module.exports = '1.1.0';\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/version.js\n ** module id = 46\n ** module chunks = 0\n **/","'use strict';\n\nvar eventUtils = require('./event')\n  , JSON3 = require('json3')\n  , browser = require('./browser')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:utils:iframe');\n}\n\nmodule.exports = {\n  WPrefix: '_jp'\n, currentWindowId: null\n\n, polluteGlobalNamespace: function() {\n    if (!(module.exports.WPrefix in global)) {\n      global[module.exports.WPrefix] = {};\n    }\n  }\n\n, postMessage: function(type, data) {\n    if (global.parent !== global) {\n      global.parent.postMessage(JSON3.stringify({\n        windowId: module.exports.currentWindowId\n      , type: type\n      , data: data || ''\n      }), '*');\n    } else {\n      debug('Cannot postMessage, no parent window.', type, data);\n    }\n  }\n\n, createIframe: function(iframeUrl, errorCallback) {\n    var iframe = global.document.createElement('iframe');\n    var tref, unloadRef;\n    var unattach = function() {\n      debug('unattach');\n      clearTimeout(tref);\n      // Explorer had problems with that.\n      try {\n        iframe.onload = null;\n      } catch (x) {\n        // intentionally empty\n      }\n      iframe.onerror = null;\n    };\n    var cleanup = function() {\n      debug('cleanup');\n      if (iframe) {\n        unattach();\n        // This timeout makes chrome fire onbeforeunload event\n        // within iframe. Without the timeout it goes straight to\n        // onunload.\n        setTimeout(function() {\n          if (iframe) {\n            iframe.parentNode.removeChild(iframe);\n          }\n          iframe = null;\n        }, 0);\n        eventUtils.unloadDel(unloadRef);\n      }\n    };\n    var onerror = function(err) {\n      debug('onerror', err);\n      if (iframe) {\n        cleanup();\n        errorCallback(err);\n      }\n    };\n    var post = function(msg, origin) {\n      debug('post', msg, origin);\n      try {\n        // When the iframe is not loaded, IE raises an exception\n        // on 'contentWindow'.\n        setTimeout(function() {\n          if (iframe && iframe.contentWindow) {\n            iframe.contentWindow.postMessage(msg, origin);\n          }\n        }, 0);\n      } catch (x) {\n        // intentionally empty\n      }\n    };\n\n    iframe.src = iframeUrl;\n    iframe.style.display = 'none';\n    iframe.style.position = 'absolute';\n    iframe.onerror = function() {\n      onerror('onerror');\n    };\n    iframe.onload = function() {\n      debug('onload');\n      // `onload` is triggered before scripts on the iframe are\n      // executed. Give it few seconds to actually load stuff.\n      clearTimeout(tref);\n      tref = setTimeout(function() {\n        onerror('onload timeout');\n      }, 2000);\n    };\n    global.document.body.appendChild(iframe);\n    tref = setTimeout(function() {\n      onerror('timeout');\n    }, 15000);\n    unloadRef = eventUtils.unloadAdd(cleanup);\n    return {\n      post: post\n    , cleanup: cleanup\n    , loaded: unattach\n    };\n  }\n\n/* jshint undef: false, newcap: false */\n/* eslint no-undef: 0, new-cap: 0 */\n, createHtmlfile: function(iframeUrl, errorCallback) {\n    var axo = ['Active'].concat('Object').join('X');\n    var doc = new global[axo]('htmlfile');\n    var tref, unloadRef;\n    var iframe;\n    var unattach = function() {\n      clearTimeout(tref);\n      iframe.onerror = null;\n    };\n    var cleanup = function() {\n      if (doc) {\n        unattach();\n        eventUtils.unloadDel(unloadRef);\n        iframe.parentNode.removeChild(iframe);\n        iframe = doc = null;\n        CollectGarbage();\n      }\n    };\n    var onerror = function(r) {\n      debug('onerror', r);\n      if (doc) {\n        cleanup();\n        errorCallback(r);\n      }\n    };\n    var post = function(msg, origin) {\n      try {\n        // When the iframe is not loaded, IE raises an exception\n        // on 'contentWindow'.\n        setTimeout(function() {\n          if (iframe && iframe.contentWindow) {\n              iframe.contentWindow.postMessage(msg, origin);\n          }\n        }, 0);\n      } catch (x) {\n        // intentionally empty\n      }\n    };\n\n    doc.open();\n    doc.write('<html><s' + 'cript>' +\n              'document.domain=\"' + global.document.domain + '\";' +\n              '</s' + 'cript></html>');\n    doc.close();\n    doc.parentWindow[module.exports.WPrefix] = global[module.exports.WPrefix];\n    var c = doc.createElement('div');\n    doc.body.appendChild(c);\n    iframe = doc.createElement('iframe');\n    c.appendChild(iframe);\n    iframe.src = iframeUrl;\n    iframe.onerror = function() {\n      onerror('onerror');\n    };\n    tref = setTimeout(function() {\n      onerror('timeout');\n    }, 15000);\n    unloadRef = eventUtils.unloadAdd(cleanup);\n    return {\n      post: post\n    , cleanup: cleanup\n    , loaded: unattach\n    };\n  }\n};\n\nmodule.exports.iframeEnabled = false;\nif (global.document) {\n  // postMessage misbehaves in konqueror 4.6.5 - the messages are delivered with\n  // huge delay, or not at all.\n  module.exports.iframeEnabled = (typeof global.postMessage === 'function' ||\n    typeof global.postMessage === 'object') && (!browser.isKonqueror());\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/utils/iframe.js\n ** module id = 47\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = {\n  isObject: function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  }\n\n, extend: function(obj) {\n    if (!this.isObject(obj)) {\n      return obj;\n    }\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n      source = arguments[i];\n      for (prop in source) {\n        if (Object.prototype.hasOwnProperty.call(source, prop)) {\n          obj[prop] = source[prop];\n        }\n      }\n    }\n    return obj;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/utils/object.js\n ** module id = 48\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , HtmlfileReceiver = require('./receiver/htmlfile')\n  , XHRLocalObject = require('./sender/xhr-local')\n  , AjaxBasedTransport = require('./lib/ajax-based')\n  ;\n\nfunction HtmlFileTransport(transUrl) {\n  if (!HtmlfileReceiver.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/htmlfile', HtmlfileReceiver, XHRLocalObject);\n}\n\ninherits(HtmlFileTransport, AjaxBasedTransport);\n\nHtmlFileTransport.enabled = function(info) {\n  return HtmlfileReceiver.enabled && info.sameOrigin;\n};\n\nHtmlFileTransport.transportName = 'htmlfile';\nHtmlFileTransport.roundTrips = 2;\n\nmodule.exports = HtmlFileTransport;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/htmlfile.js\n ** module id = 49\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , iframeUtils = require('../../utils/iframe')\n  , urlUtils = require('../../utils/url')\n  , EventEmitter = require('events').EventEmitter\n  , random = require('../../utils/random')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:receiver:htmlfile');\n}\n\nfunction HtmlfileReceiver(url) {\n  debug(url);\n  EventEmitter.call(this);\n  var self = this;\n  iframeUtils.polluteGlobalNamespace();\n\n  this.id = 'a' + random.string(6);\n  url = urlUtils.addQuery(url, 'c=' + decodeURIComponent(iframeUtils.WPrefix + '.' + this.id));\n\n  debug('using htmlfile', HtmlfileReceiver.htmlfileEnabled);\n  var constructFunc = HtmlfileReceiver.htmlfileEnabled ?\n      iframeUtils.createHtmlfile : iframeUtils.createIframe;\n\n  global[iframeUtils.WPrefix][this.id] = {\n    start: function() {\n      debug('start');\n      self.iframeObj.loaded();\n    }\n  , message: function(data) {\n      debug('message', data);\n      self.emit('message', data);\n    }\n  , stop: function() {\n      debug('stop');\n      self._cleanup();\n      self._close('network');\n    }\n  };\n  this.iframeObj = constructFunc(url, function() {\n    debug('callback');\n    self._cleanup();\n    self._close('permanent');\n  });\n}\n\ninherits(HtmlfileReceiver, EventEmitter);\n\nHtmlfileReceiver.prototype.abort = function() {\n  debug('abort');\n  this._cleanup();\n  this._close('user');\n};\n\nHtmlfileReceiver.prototype._cleanup = function() {\n  debug('_cleanup');\n  if (this.iframeObj) {\n    this.iframeObj.cleanup();\n    this.iframeObj = null;\n  }\n  delete global[iframeUtils.WPrefix][this.id];\n};\n\nHtmlfileReceiver.prototype._close = function(reason) {\n  debug('_close', reason);\n  this.emit('close', null, reason);\n  this.removeAllListeners();\n};\n\nHtmlfileReceiver.htmlfileEnabled = false;\n\n// obfuscate to avoid firewalls\nvar axo = ['Active'].concat('Object').join('X');\nif (axo in global) {\n  try {\n    HtmlfileReceiver.htmlfileEnabled = !!new global[axo]('htmlfile');\n  } catch (x) {\n    // intentionally empty\n  }\n}\n\nHtmlfileReceiver.enabled = HtmlfileReceiver.htmlfileEnabled || iframeUtils.iframeEnabled;\n\nmodule.exports = HtmlfileReceiver;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/receiver/htmlfile.js\n ** module id = 50\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , AjaxBasedTransport = require('./lib/ajax-based')\n  , XhrReceiver = require('./receiver/xhr')\n  , XHRCorsObject = require('./sender/xhr-cors')\n  , XHRLocalObject = require('./sender/xhr-local')\n  ;\n\nfunction XhrPollingTransport(transUrl) {\n  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XHRCorsObject);\n}\n\ninherits(XhrPollingTransport, AjaxBasedTransport);\n\nXhrPollingTransport.enabled = function(info) {\n  if (info.nullOrigin) {\n    return false;\n  }\n\n  if (XHRLocalObject.enabled && info.sameOrigin) {\n    return true;\n  }\n  return XHRCorsObject.enabled;\n};\n\nXhrPollingTransport.transportName = 'xhr-polling';\nXhrPollingTransport.roundTrips = 2; // preflight, ajax\n\nmodule.exports = XhrPollingTransport;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/xhr-polling.js\n ** module id = 51\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , AjaxBasedTransport = require('./lib/ajax-based')\n  , XdrStreamingTransport = require('./xdr-streaming')\n  , XhrReceiver = require('./receiver/xhr')\n  , XDRObject = require('./sender/xdr')\n  ;\n\nfunction XdrPollingTransport(transUrl) {\n  if (!XDRObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XDRObject);\n}\n\ninherits(XdrPollingTransport, AjaxBasedTransport);\n\nXdrPollingTransport.enabled = XdrStreamingTransport.enabled;\nXdrPollingTransport.transportName = 'xdr-polling';\nXdrPollingTransport.roundTrips = 2; // preflight, ajax\n\nmodule.exports = XdrPollingTransport;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/xdr-polling.js\n ** module id = 52\n ** module chunks = 0\n **/","'use strict';\n\n// The simplest and most robust transport, using the well-know cross\n// domain hack - JSONP. This transport is quite inefficient - one\n// message could use up to one http request. But at least it works almost\n// everywhere.\n// Known limitations:\n//   o you will get a spinning cursor\n//   o for Konqueror a dumb timer is needed to detect errors\n\nvar inherits = require('inherits')\n  , SenderReceiver = require('./lib/sender-receiver')\n  , JsonpReceiver = require('./receiver/jsonp')\n  , jsonpSender = require('./sender/jsonp')\n  ;\n\nfunction JsonPTransport(transUrl) {\n  if (!JsonPTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n  SenderReceiver.call(this, transUrl, '/jsonp', jsonpSender, JsonpReceiver);\n}\n\ninherits(JsonPTransport, SenderReceiver);\n\nJsonPTransport.enabled = function() {\n  return !!global.document;\n};\n\nJsonPTransport.transportName = 'jsonp-polling';\nJsonPTransport.roundTrips = 1;\nJsonPTransport.needBody = true;\n\nmodule.exports = JsonPTransport;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/jsonp-polling.js\n ** module id = 53\n ** module chunks = 0\n **/","'use strict';\n\nvar utils = require('../../utils/iframe')\n  , random = require('../../utils/random')\n  , browser = require('../../utils/browser')\n  , urlUtils = require('../../utils/url')\n  , inherits = require('inherits')\n  , EventEmitter = require('events').EventEmitter\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:receiver:jsonp');\n}\n\nfunction JsonpReceiver(url) {\n  debug(url);\n  var self = this;\n  EventEmitter.call(this);\n\n  utils.polluteGlobalNamespace();\n\n  this.id = 'a' + random.string(6);\n  var urlWithId = urlUtils.addQuery(url, 'c=' + encodeURIComponent(utils.WPrefix + '.' + this.id));\n\n  global[utils.WPrefix][this.id] = this._callback.bind(this);\n  this._createScript(urlWithId);\n\n  // Fallback mostly for Konqueror - stupid timer, 35 seconds shall be plenty.\n  this.timeoutId = setTimeout(function() {\n    debug('timeout');\n    self._abort(new Error('JSONP script loaded abnormally (timeout)'));\n  }, JsonpReceiver.timeout);\n}\n\ninherits(JsonpReceiver, EventEmitter);\n\nJsonpReceiver.prototype.abort = function() {\n  debug('abort');\n  if (global[utils.WPrefix][this.id]) {\n    var err = new Error('JSONP user aborted read');\n    err.code = 1000;\n    this._abort(err);\n  }\n};\n\nJsonpReceiver.timeout = 35000;\nJsonpReceiver.scriptErrorTimeout = 1000;\n\nJsonpReceiver.prototype._callback = function(data) {\n  debug('_callback', data);\n  this._cleanup();\n\n  if (this.aborting) {\n    return;\n  }\n\n  if (data) {\n    debug('message', data);\n    this.emit('message', data);\n  }\n  this.emit('close', null, 'network');\n  this.removeAllListeners();\n};\n\nJsonpReceiver.prototype._abort = function(err) {\n  debug('_abort', err);\n  this._cleanup();\n  this.aborting = true;\n  this.emit('close', err.code, err.message);\n  this.removeAllListeners();\n};\n\nJsonpReceiver.prototype._cleanup = function() {\n  debug('_cleanup');\n  clearTimeout(this.timeoutId);\n  if (this.script2) {\n    this.script2.parentNode.removeChild(this.script2);\n    this.script2 = null;\n  }\n  if (this.script) {\n    var script = this.script;\n    // Unfortunately, you can't really abort script loading of\n    // the script.\n    script.parentNode.removeChild(script);\n    script.onreadystatechange = script.onerror =\n        script.onload = script.onclick = null;\n    this.script = null;\n  }\n  delete global[utils.WPrefix][this.id];\n};\n\nJsonpReceiver.prototype._scriptError = function() {\n  debug('_scriptError');\n  var self = this;\n  if (this.errorTimer) {\n    return;\n  }\n\n  this.errorTimer = setTimeout(function() {\n    if (!self.loadedOkay) {\n      self._abort(new Error('JSONP script loaded abnormally (onerror)'));\n    }\n  }, JsonpReceiver.scriptErrorTimeout);\n};\n\nJsonpReceiver.prototype._createScript = function(url) {\n  debug('_createScript', url);\n  var self = this;\n  var script = this.script = global.document.createElement('script');\n  var script2;  // Opera synchronous load trick.\n\n  script.id = 'a' + random.string(8);\n  script.src = url;\n  script.type = 'text/javascript';\n  script.charset = 'UTF-8';\n  script.onerror = this._scriptError.bind(this);\n  script.onload = function() {\n    debug('onload');\n    self._abort(new Error('JSONP script loaded abnormally (onload)'));\n  };\n\n  // IE9 fires 'error' event after onreadystatechange or before, in random order.\n  // Use loadedOkay to determine if actually errored\n  script.onreadystatechange = function() {\n    debug('onreadystatechange', script.readyState);\n    if (/loaded|closed/.test(script.readyState)) {\n      if (script && script.htmlFor && script.onclick) {\n        self.loadedOkay = true;\n        try {\n          // In IE, actually execute the script.\n          script.onclick();\n        } catch (x) {\n          // intentionally empty\n        }\n      }\n      if (script) {\n        self._abort(new Error('JSONP script loaded abnormally (onreadystatechange)'));\n      }\n    }\n  };\n  // IE: event/htmlFor/onclick trick.\n  // One can't rely on proper order for onreadystatechange. In order to\n  // make sure, set a 'htmlFor' and 'event' properties, so that\n  // script code will be installed as 'onclick' handler for the\n  // script object. Later, onreadystatechange, manually execute this\n  // code. FF and Chrome doesn't work with 'event' and 'htmlFor'\n  // set. For reference see:\n  //   http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html\n  // Also, read on that about script ordering:\n  //   http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order\n  if (typeof script.async === 'undefined' && global.document.attachEvent) {\n    // According to mozilla docs, in recent browsers script.async defaults\n    // to 'true', so we may use it to detect a good browser:\n    // https://developer.mozilla.org/en/HTML/Element/script\n    if (!browser.isOpera()) {\n      // Naively assume we're in IE\n      try {\n        script.htmlFor = script.id;\n        script.event = 'onclick';\n      } catch (x) {\n        // intentionally empty\n      }\n      script.async = true;\n    } else {\n      // Opera, second sync script hack\n      script2 = this.script2 = global.document.createElement('script');\n      script2.text = \"try{var a = document.getElementById('\" + script.id + \"'); if(a)a.onerror();}catch(x){};\";\n      script.async = script2.async = false;\n    }\n  }\n  if (typeof script.async !== 'undefined') {\n    script.async = true;\n  }\n\n  var head = global.document.getElementsByTagName('head')[0];\n  head.insertBefore(script, head.firstChild);\n  if (script2) {\n    head.insertBefore(script2, head.firstChild);\n  }\n};\n\nmodule.exports = JsonpReceiver;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/receiver/jsonp.js\n ** module id = 54\n ** module chunks = 0\n **/","'use strict';\n\nvar random = require('../../utils/random')\n  , urlUtils = require('../../utils/url')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:sender:jsonp');\n}\n\nvar form, area;\n\nfunction createIframe(id) {\n  debug('createIframe', id);\n  try {\n    // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n    return global.document.createElement('<iframe name=\"' + id + '\">');\n  } catch (x) {\n    var iframe = global.document.createElement('iframe');\n    iframe.name = id;\n    return iframe;\n  }\n}\n\nfunction createForm() {\n  debug('createForm');\n  form = global.document.createElement('form');\n  form.style.display = 'none';\n  form.style.position = 'absolute';\n  form.method = 'POST';\n  form.enctype = 'application/x-www-form-urlencoded';\n  form.acceptCharset = 'UTF-8';\n\n  area = global.document.createElement('textarea');\n  area.name = 'd';\n  form.appendChild(area);\n\n  global.document.body.appendChild(form);\n}\n\nmodule.exports = function(url, payload, callback) {\n  debug(url, payload);\n  if (!form) {\n    createForm();\n  }\n  var id = 'a' + random.string(8);\n  form.target = id;\n  form.action = urlUtils.addQuery(urlUtils.addPath(url, '/jsonp_send'), 'i=' + id);\n\n  var iframe = createIframe(id);\n  iframe.id = id;\n  iframe.style.display = 'none';\n  form.appendChild(iframe);\n\n  try {\n    area.value = payload;\n  } catch (e) {\n    // seriously broken browsers get here\n  }\n  form.submit();\n\n  var completed = function(err) {\n    debug('completed', id, err);\n    if (!iframe.onerror) {\n      return;\n    }\n    iframe.onreadystatechange = iframe.onerror = iframe.onload = null;\n    // Opera mini doesn't like if we GC iframe\n    // immediately, thus this timeout.\n    setTimeout(function() {\n      debug('cleaning up', id);\n      iframe.parentNode.removeChild(iframe);\n      iframe = null;\n    }, 500);\n    area.value = '';\n    // It is not possible to detect if the iframe succeeded or\n    // failed to submit our form.\n    callback(err);\n  };\n  iframe.onerror = function() {\n    debug('onerror', id);\n    completed();\n  };\n  iframe.onload = function() {\n    debug('onload', id);\n    completed();\n  };\n  iframe.onreadystatechange = function(e) {\n    debug('onreadystatechange', id, iframe.readyState, e);\n    if (iframe.readyState === 'complete') {\n      completed();\n    }\n  };\n  return function() {\n    debug('aborted', id);\n    completed(new Error('Aborted'));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/sender/jsonp.js\n ** module id = 55\n ** module chunks = 0\n **/","'use strict';\n\nrequire('./shims');\n\nvar URL = require('url-parse')\n  , inherits = require('inherits')\n  , JSON3 = require('json3')\n  , random = require('./utils/random')\n  , escape = require('./utils/escape')\n  , urlUtils = require('./utils/url')\n  , eventUtils = require('./utils/event')\n  , transport = require('./utils/transport')\n  , objectUtils = require('./utils/object')\n  , browser = require('./utils/browser')\n  , log = require('./utils/log')\n  , Event = require('./event/event')\n  , EventTarget = require('./event/eventtarget')\n  , loc = require('./location')\n  , CloseEvent = require('./event/close')\n  , TransportMessageEvent = require('./event/trans-message')\n  , InfoReceiver = require('./info-receiver')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:main');\n}\n\nvar transports;\n\n// follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface\nfunction SockJS(url, protocols, options) {\n  if (!(this instanceof SockJS)) {\n    return new SockJS(url, protocols, options);\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'SockJS: 1 argument required, but only 0 present\");\n  }\n  EventTarget.call(this);\n\n  this.readyState = SockJS.CONNECTING;\n  this.extensions = '';\n  this.protocol = '';\n\n  // non-standard extension\n  options = options || {};\n  if (options.protocols_whitelist) {\n    log.warn(\"'protocols_whitelist' is DEPRECATED. Use 'transports' instead.\");\n  }\n  this._transportsWhitelist = options.transports;\n  this._transportOptions = options.transportOptions || {};\n\n  var sessionId = options.sessionId || 8;\n  if (typeof sessionId === 'function') {\n    this._generateSessionId = sessionId;\n  } else if (typeof sessionId === 'number') {\n    this._generateSessionId = function() {\n      return random.string(sessionId);\n    };\n  } else {\n    throw new TypeError('If sessionId is used in the options, it needs to be a number or a function.');\n  }\n\n  this._server = options.server || random.numberString(1000);\n\n  // Step 1 of WS spec - parse and validate the url. Issue #8\n  var parsedUrl = new URL(url);\n  if (!parsedUrl.host || !parsedUrl.protocol) {\n    throw new SyntaxError(\"The URL '\" + url + \"' is invalid\");\n  } else if (parsedUrl.hash) {\n    throw new SyntaxError('The URL must not contain a fragment');\n  } else if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n    throw new SyntaxError(\"The URL's scheme must be either 'http:' or 'https:'. '\" + parsedUrl.protocol + \"' is not allowed.\");\n  }\n\n  var secure = parsedUrl.protocol === 'https:';\n  // Step 2 - don't allow secure origin with an insecure protocol\n  if (loc.protocol === 'https' && !secure) {\n    throw new Error('SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS');\n  }\n\n  // Step 3 - check port access - no need here\n  // Step 4 - parse protocols argument\n  if (!protocols) {\n    protocols = [];\n  } else if (!Array.isArray(protocols)) {\n    protocols = [protocols];\n  }\n\n  // Step 5 - check protocols argument\n  var sortedProtocols = protocols.sort();\n  sortedProtocols.forEach(function(proto, i) {\n    if (!proto) {\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is invalid.\");\n    }\n    if (i < (sortedProtocols.length - 1) && proto === sortedProtocols[i + 1]) {\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is duplicated.\");\n    }\n  });\n\n  // Step 6 - convert origin\n  var o = urlUtils.getOrigin(loc.href);\n  this._origin = o ? o.toLowerCase() : null;\n\n  // remove the trailing slash\n  parsedUrl.set('pathname', parsedUrl.pathname.replace(/\\/+$/, ''));\n\n  // store the sanitized url\n  this.url = parsedUrl.href;\n  debug('using url', this.url);\n\n  // Step 7 - start connection in background\n  // obtain server info\n  // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26\n  this._urlInfo = {\n    nullOrigin: !browser.hasDomain()\n  , sameOrigin: urlUtils.isOriginEqual(this.url, loc.href)\n  , sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)\n  };\n\n  this._ir = new InfoReceiver(this.url, this._urlInfo);\n  this._ir.once('finish', this._receiveInfo.bind(this));\n}\n\ninherits(SockJS, EventTarget);\n\nfunction userSetCode(code) {\n  return code === 1000 || (code >= 3000 && code <= 4999);\n}\n\nSockJS.prototype.close = function(code, reason) {\n  // Step 1\n  if (code && !userSetCode(code)) {\n    throw new Error('InvalidAccessError: Invalid code');\n  }\n  // Step 2.4 states the max is 123 bytes, but we are just checking length\n  if (reason && reason.length > 123) {\n    throw new SyntaxError('reason argument has an invalid length');\n  }\n\n  // Step 3.1\n  if (this.readyState === SockJS.CLOSING || this.readyState === SockJS.CLOSED) {\n    return;\n  }\n\n  // TODO look at docs to determine how to set this\n  var wasClean = true;\n  this._close(code || 1000, reason || 'Normal closure', wasClean);\n};\n\nSockJS.prototype.send = function(data) {\n  // #13 - convert anything non-string to string\n  // TODO this currently turns objects into [object Object]\n  if (typeof data !== 'string') {\n    data = '' + data;\n  }\n  if (this.readyState === SockJS.CONNECTING) {\n    throw new Error('InvalidStateError: The connection has not been established yet');\n  }\n  if (this.readyState !== SockJS.OPEN) {\n    return;\n  }\n  this._transport.send(escape.quote(data));\n};\n\nSockJS.version = require('./version');\n\nSockJS.CONNECTING = 0;\nSockJS.OPEN = 1;\nSockJS.CLOSING = 2;\nSockJS.CLOSED = 3;\n\nSockJS.prototype._receiveInfo = function(info, rtt) {\n  debug('_receiveInfo', rtt);\n  this._ir = null;\n  if (!info) {\n    this._close(1002, 'Cannot connect to server');\n    return;\n  }\n\n  // establish a round-trip timeout (RTO) based on the\n  // round-trip time (RTT)\n  this._rto = this.countRTO(rtt);\n  // allow server to override url used for the actual transport\n  this._transUrl = info.base_url ? info.base_url : this.url;\n  info = objectUtils.extend(info, this._urlInfo);\n  debug('info', info);\n  // determine list of desired and supported transports\n  var enabledTransports = transports.filterToEnabled(this._transportsWhitelist, info);\n  this._transports = enabledTransports.main;\n  debug(this._transports.length + ' enabled transports');\n\n  this._connect();\n};\n\nSockJS.prototype._connect = function() {\n  for (var Transport = this._transports.shift(); Transport; Transport = this._transports.shift()) {\n    debug('attempt', Transport.transportName);\n    if (Transport.needBody) {\n      if (!global.document.body ||\n          (typeof global.document.readyState !== 'undefined' &&\n            global.document.readyState !== 'complete' &&\n            global.document.readyState !== 'interactive')) {\n        debug('waiting for body');\n        this._transports.unshift(Transport);\n        eventUtils.attachEvent('load', this._connect.bind(this));\n        return;\n      }\n    }\n\n    // calculate timeout based on RTO and round trips. Default to 5s\n    var timeoutMs = (this._rto * Transport.roundTrips) || 5000;\n    this._transportTimeoutId = setTimeout(this._transportTimeout.bind(this), timeoutMs);\n    debug('using timeout', timeoutMs);\n\n    var transportUrl = urlUtils.addPath(this._transUrl, '/' + this._server + '/' + this._generateSessionId());\n    var options = this._transportOptions[Transport.transportName];\n    debug('transport url', transportUrl);\n    var transportObj = new Transport(transportUrl, this._transUrl, options);\n    transportObj.on('message', this._transportMessage.bind(this));\n    transportObj.once('close', this._transportClose.bind(this));\n    transportObj.transportName = Transport.transportName;\n    this._transport = transportObj;\n\n    return;\n  }\n  this._close(2000, 'All transports failed', false);\n};\n\nSockJS.prototype._transportTimeout = function() {\n  debug('_transportTimeout');\n  if (this.readyState === SockJS.CONNECTING) {\n    this._transportClose(2007, 'Transport timed out');\n  }\n};\n\nSockJS.prototype._transportMessage = function(msg) {\n  debug('_transportMessage', msg);\n  var self = this\n    , type = msg.slice(0, 1)\n    , content = msg.slice(1)\n    , payload\n    ;\n\n  // first check for messages that don't need a payload\n  switch (type) {\n    case 'o':\n      this._open();\n      return;\n    case 'h':\n      this.dispatchEvent(new Event('heartbeat'));\n      debug('heartbeat', this.transport);\n      return;\n  }\n\n  if (content) {\n    try {\n      payload = JSON3.parse(content);\n    } catch (e) {\n      debug('bad json', content);\n    }\n  }\n\n  if (typeof payload === 'undefined') {\n    debug('empty payload', content);\n    return;\n  }\n\n  switch (type) {\n    case 'a':\n      if (Array.isArray(payload)) {\n        payload.forEach(function(p) {\n          debug('message', self.transport, p);\n          self.dispatchEvent(new TransportMessageEvent(p));\n        });\n      }\n      break;\n    case 'm':\n      debug('message', this.transport, payload);\n      this.dispatchEvent(new TransportMessageEvent(payload));\n      break;\n    case 'c':\n      if (Array.isArray(payload) && payload.length === 2) {\n        this._close(payload[0], payload[1], true);\n      }\n      break;\n  }\n};\n\nSockJS.prototype._transportClose = function(code, reason) {\n  debug('_transportClose', this.transport, code, reason);\n  if (this._transport) {\n    this._transport.removeAllListeners();\n    this._transport = null;\n    this.transport = null;\n  }\n\n  if (!userSetCode(code) && code !== 2000 && this.readyState === SockJS.CONNECTING) {\n    this._connect();\n    return;\n  }\n\n  this._close(code, reason);\n};\n\nSockJS.prototype._open = function() {\n  debug('_open', this._transport.transportName, this.readyState);\n  if (this.readyState === SockJS.CONNECTING) {\n    if (this._transportTimeoutId) {\n      clearTimeout(this._transportTimeoutId);\n      this._transportTimeoutId = null;\n    }\n    this.readyState = SockJS.OPEN;\n    this.transport = this._transport.transportName;\n    this.dispatchEvent(new Event('open'));\n    debug('connected', this.transport);\n  } else {\n    // The server might have been restarted, and lost track of our\n    // connection.\n    this._close(1006, 'Server lost session');\n  }\n};\n\nSockJS.prototype._close = function(code, reason, wasClean) {\n  debug('_close', this.transport, code, reason, wasClean, this.readyState);\n  var forceFail = false;\n\n  if (this._ir) {\n    forceFail = true;\n    this._ir.close();\n    this._ir = null;\n  }\n  if (this._transport) {\n    this._transport.close();\n    this._transport = null;\n    this.transport = null;\n  }\n\n  if (this.readyState === SockJS.CLOSED) {\n    throw new Error('InvalidStateError: SockJS has already been closed');\n  }\n\n  this.readyState = SockJS.CLOSING;\n  setTimeout(function() {\n    this.readyState = SockJS.CLOSED;\n\n    if (forceFail) {\n      this.dispatchEvent(new Event('error'));\n    }\n\n    var e = new CloseEvent('close');\n    e.wasClean = wasClean || false;\n    e.code = code || 1000;\n    e.reason = reason;\n\n    this.dispatchEvent(e);\n    this.onmessage = this.onclose = this.onerror = null;\n    debug('disconnected');\n  }.bind(this), 0);\n};\n\n// See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/\n// and RFC 2988.\nSockJS.prototype.countRTO = function(rtt) {\n  // In a local environment, when using IE8/9 and the `jsonp-polling`\n  // transport the time needed to establish a connection (the time that pass\n  // from the opening of the transport to the call of `_dispatchOpen`) is\n  // around 200msec (the lower bound used in the article above) and this\n  // causes spurious timeouts. For this reason we calculate a value slightly\n  // larger than that used in the article.\n  if (rtt > 100) {\n    return 4 * rtt; // rto > 400msec\n  }\n  return 300 + rtt; // 300msec < rto <= 400msec\n};\n\nmodule.exports = function(availableTransports) {\n  transports = transport(availableTransports);\n  require('./iframe-bootstrap')(SockJS, availableTransports);\n  return SockJS;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/main.js\n ** module id = 56\n ** module chunks = 0\n **/","/* eslint-disable */\n/* jscs: disable */\n'use strict';\n\n// pulled specific shims from https://github.com/es-shims/es5-shim\n\nvar ArrayPrototype = Array.prototype;\nvar ObjectPrototype = Object.prototype;\nvar FunctionPrototype = Function.prototype;\nvar StringPrototype = String.prototype;\nvar array_slice = ArrayPrototype.slice;\n\nvar _toString = ObjectPrototype.toString;\nvar isFunction = function (val) {\n    return ObjectPrototype.toString.call(val) === '[object Function]';\n};\nvar isArray = function isArray(obj) {\n    return _toString.call(obj) === '[object Array]';\n};\nvar isString = function isString(obj) {\n    return _toString.call(obj) === '[object String]';\n};\n\nvar supportsDescriptors = Object.defineProperty && (function () {\n    try {\n        Object.defineProperty({}, 'x', {});\n        return true;\n    } catch (e) { /* this is ES3 */\n        return false;\n    }\n}());\n\n// Define configurable, writable and non-enumerable props\n// if they don't exist.\nvar defineProperty;\nif (supportsDescriptors) {\n    defineProperty = function (object, name, method, forceAssign) {\n        if (!forceAssign && (name in object)) { return; }\n        Object.defineProperty(object, name, {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: method\n        });\n    };\n} else {\n    defineProperty = function (object, name, method, forceAssign) {\n        if (!forceAssign && (name in object)) { return; }\n        object[name] = method;\n    };\n}\nvar defineProperties = function (object, map, forceAssign) {\n    for (var name in map) {\n        if (ObjectPrototype.hasOwnProperty.call(map, name)) {\n          defineProperty(object, name, map[name], forceAssign);\n        }\n    }\n};\n\nvar toObject = function (o) {\n    if (o == null) { // this matches both null and undefined\n        throw new TypeError(\"can't convert \" + o + ' to object');\n    }\n    return Object(o);\n};\n\n//\n// Util\n// ======\n//\n\n// ES5 9.4\n// http://es5.github.com/#x9.4\n// http://jsperf.com/to-integer\n\nfunction toInteger(num) {\n    var n = +num;\n    if (n !== n) { // isNaN\n        n = 0;\n    } else if (n !== 0 && n !== (1 / 0) && n !== -(1 / 0)) {\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n    }\n    return n;\n}\n\nfunction ToUint32(x) {\n    return x >>> 0;\n}\n\n//\n// Function\n// ========\n//\n\n// ES-5 15.3.4.5\n// http://es5.github.com/#x15.3.4.5\n\nfunction Empty() {}\n\ndefineProperties(FunctionPrototype, {\n    bind: function bind(that) { // .length is 1\n        // 1. Let Target be the this value.\n        var target = this;\n        // 2. If IsCallable(Target) is false, throw a TypeError exception.\n        if (!isFunction(target)) {\n            throw new TypeError('Function.prototype.bind called on incompatible ' + target);\n        }\n        // 3. Let A be a new (possibly empty) internal list of all of the\n        //   argument values provided after thisArg (arg1, arg2 etc), in order.\n        // XXX slicedArgs will stand in for \"A\" if used\n        var args = array_slice.call(arguments, 1); // for normal call\n        // 4. Let F be a new native ECMAScript object.\n        // 11. Set the [[Prototype]] internal property of F to the standard\n        //   built-in Function prototype object as specified in 15.3.3.1.\n        // 12. Set the [[Call]] internal property of F as described in\n        //   15.3.4.5.1.\n        // 13. Set the [[Construct]] internal property of F as described in\n        //   15.3.4.5.2.\n        // 14. Set the [[HasInstance]] internal property of F as described in\n        //   15.3.4.5.3.\n        var binder = function () {\n\n            if (this instanceof bound) {\n                // 15.3.4.5.2 [[Construct]]\n                // When the [[Construct]] internal method of a function object,\n                // F that was created using the bind function is called with a\n                // list of arguments ExtraArgs, the following steps are taken:\n                // 1. Let target be the value of F's [[TargetFunction]]\n                //   internal property.\n                // 2. If target has no [[Construct]] internal method, a\n                //   TypeError exception is thrown.\n                // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\n                //   property.\n                // 4. Let args be a new list containing the same values as the\n                //   list boundArgs in the same order followed by the same\n                //   values as the list ExtraArgs in the same order.\n                // 5. Return the result of calling the [[Construct]] internal\n                //   method of target providing args as the arguments.\n\n                var result = target.apply(\n                    this,\n                    args.concat(array_slice.call(arguments))\n                );\n                if (Object(result) === result) {\n                    return result;\n                }\n                return this;\n\n            } else {\n                // 15.3.4.5.1 [[Call]]\n                // When the [[Call]] internal method of a function object, F,\n                // which was created using the bind function is called with a\n                // this value and a list of arguments ExtraArgs, the following\n                // steps are taken:\n                // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\n                //   property.\n                // 2. Let boundThis be the value of F's [[BoundThis]] internal\n                //   property.\n                // 3. Let target be the value of F's [[TargetFunction]] internal\n                //   property.\n                // 4. Let args be a new list containing the same values as the\n                //   list boundArgs in the same order followed by the same\n                //   values as the list ExtraArgs in the same order.\n                // 5. Return the result of calling the [[Call]] internal method\n                //   of target providing boundThis as the this value and\n                //   providing args as the arguments.\n\n                // equiv: target.call(this, ...boundArgs, ...args)\n                return target.apply(\n                    that,\n                    args.concat(array_slice.call(arguments))\n                );\n\n            }\n\n        };\n\n        // 15. If the [[Class]] internal property of Target is \"Function\", then\n        //     a. Let L be the length property of Target minus the length of A.\n        //     b. Set the length own property of F to either 0 or L, whichever is\n        //       larger.\n        // 16. Else set the length own property of F to 0.\n\n        var boundLength = Math.max(0, target.length - args.length);\n\n        // 17. Set the attributes of the length own property of F to the values\n        //   specified in 15.3.5.1.\n        var boundArgs = [];\n        for (var i = 0; i < boundLength; i++) {\n            boundArgs.push('$' + i);\n        }\n\n        // XXX Build a dynamic function with desired amount of arguments is the only\n        // way to set the length property of a function.\n        // In environments where Content Security Policies enabled (Chrome extensions,\n        // for ex.) all use of eval or Function costructor throws an exception.\n        // However in all of these environments Function.prototype.bind exists\n        // and so this code will never be executed.\n        var bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\n\n        if (target.prototype) {\n            Empty.prototype = target.prototype;\n            bound.prototype = new Empty();\n            // Clean up dangling references.\n            Empty.prototype = null;\n        }\n\n        // TODO\n        // 18. Set the [[Extensible]] internal property of F to true.\n\n        // TODO\n        // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\n        // 20. Call the [[DefineOwnProperty]] internal method of F with\n        //   arguments \"caller\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\n        //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\n        //   false.\n        // 21. Call the [[DefineOwnProperty]] internal method of F with\n        //   arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower,\n        //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\n        //   and false.\n\n        // TODO\n        // NOTE Function objects created using Function.prototype.bind do not\n        // have a prototype property or the [[Code]], [[FormalParameters]], and\n        // [[Scope]] internal properties.\n        // XXX can't delete prototype in pure-js.\n\n        // 22. Return F.\n        return bound;\n    }\n});\n\n//\n// Array\n// =====\n//\n\n// ES5 15.4.3.2\n// http://es5.github.com/#x15.4.3.2\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray\ndefineProperties(Array, { isArray: isArray });\n\n\nvar boxedString = Object('a');\nvar splitString = boxedString[0] !== 'a' || !(0 in boxedString);\n\nvar properlyBoxesContext = function properlyBoxed(method) {\n    // Check node 0.6.21 bug where third parameter is not boxed\n    var properlyBoxesNonStrict = true;\n    var properlyBoxesStrict = true;\n    if (method) {\n        method.call('foo', function (_, __, context) {\n            if (typeof context !== 'object') { properlyBoxesNonStrict = false; }\n        });\n\n        method.call([1], function () {\n            'use strict';\n            properlyBoxesStrict = typeof this === 'string';\n        }, 'x');\n    }\n    return !!method && properlyBoxesNonStrict && properlyBoxesStrict;\n};\n\ndefineProperties(ArrayPrototype, {\n    forEach: function forEach(fun /*, thisp*/) {\n        var object = toObject(this),\n            self = splitString && isString(this) ? this.split('') : object,\n            thisp = arguments[1],\n            i = -1,\n            length = self.length >>> 0;\n\n        // If no callback function or if callback is not a callable function\n        if (!isFunction(fun)) {\n            throw new TypeError(); // TODO message\n        }\n\n        while (++i < length) {\n            if (i in self) {\n                // Invoke the callback function with call, passing arguments:\n                // context, property value, property key, thisArg object\n                // context\n                fun.call(thisp, self[i], i, object);\n            }\n        }\n    }\n}, !properlyBoxesContext(ArrayPrototype.forEach));\n\n// ES5 15.4.4.14\n// http://es5.github.com/#x15.4.4.14\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\nvar hasFirefox2IndexOfBug = Array.prototype.indexOf && [0, 1].indexOf(1, 2) !== -1;\ndefineProperties(ArrayPrototype, {\n    indexOf: function indexOf(sought /*, fromIndex */ ) {\n        var self = splitString && isString(this) ? this.split('') : toObject(this),\n            length = self.length >>> 0;\n\n        if (!length) {\n            return -1;\n        }\n\n        var i = 0;\n        if (arguments.length > 1) {\n            i = toInteger(arguments[1]);\n        }\n\n        // handle negative indices\n        i = i >= 0 ? i : Math.max(0, length + i);\n        for (; i < length; i++) {\n            if (i in self && self[i] === sought) {\n                return i;\n            }\n        }\n        return -1;\n    }\n}, hasFirefox2IndexOfBug);\n\n//\n// String\n// ======\n//\n\n// ES5 15.5.4.14\n// http://es5.github.com/#x15.5.4.14\n\n// [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]\n// Many browsers do not split properly with regular expressions or they\n// do not perform the split correctly under obscure conditions.\n// See http://blog.stevenlevithan.com/archives/cross-browser-split\n// I've tested in many browsers and this seems to cover the deviant ones:\n//    'ab'.split(/(?:ab)*/) should be [\"\", \"\"], not [\"\"]\n//    '.'.split(/(.?)(.?)/) should be [\"\", \".\", \"\", \"\"], not [\"\", \"\"]\n//    'tesst'.split(/(s)*/) should be [\"t\", undefined, \"e\", \"s\", \"t\"], not\n//       [undefined, \"t\", undefined, \"e\", ...]\n//    ''.split(/.?/) should be [], not [\"\"]\n//    '.'.split(/()()/) should be [\".\"], not [\"\", \"\", \".\"]\n\nvar string_split = StringPrototype.split;\nif (\n    'ab'.split(/(?:ab)*/).length !== 2 ||\n    '.'.split(/(.?)(.?)/).length !== 4 ||\n    'tesst'.split(/(s)*/)[1] === 't' ||\n    'test'.split(/(?:)/, -1).length !== 4 ||\n    ''.split(/.?/).length ||\n    '.'.split(/()()/).length > 1\n) {\n    (function () {\n        var compliantExecNpcg = /()??/.exec('')[1] === void 0; // NPCG: nonparticipating capturing group\n\n        StringPrototype.split = function (separator, limit) {\n            var string = this;\n            if (separator === void 0 && limit === 0) {\n                return [];\n            }\n\n            // If `separator` is not a regex, use native split\n            if (_toString.call(separator) !== '[object RegExp]') {\n                return string_split.call(this, separator, limit);\n            }\n\n            var output = [],\n                flags = (separator.ignoreCase ? 'i' : '') +\n                        (separator.multiline  ? 'm' : '') +\n                        (separator.extended   ? 'x' : '') + // Proposed for ES6\n                        (separator.sticky     ? 'y' : ''), // Firefox 3+\n                lastLastIndex = 0,\n                // Make `global` and avoid `lastIndex` issues by working with a copy\n                separator2, match, lastIndex, lastLength;\n            separator = new RegExp(separator.source, flags + 'g');\n            string += ''; // Type-convert\n            if (!compliantExecNpcg) {\n                // Doesn't need flags gy, but they don't hurt\n                separator2 = new RegExp('^' + separator.source + '$(?!\\\\s)', flags);\n            }\n            /* Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules\n             */\n            limit = limit === void 0 ?\n                -1 >>> 0 : // Math.pow(2, 32) - 1\n                ToUint32(limit);\n            while (match = separator.exec(string)) {\n                // `separator.lastIndex` is not reliable cross-browser\n                lastIndex = match.index + match[0].length;\n                if (lastIndex > lastLastIndex) {\n                    output.push(string.slice(lastLastIndex, match.index));\n                    // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                    // nonparticipating capturing groups\n                    if (!compliantExecNpcg && match.length > 1) {\n                        match[0].replace(separator2, function () {\n                            for (var i = 1; i < arguments.length - 2; i++) {\n                                if (arguments[i] === void 0) {\n                                    match[i] = void 0;\n                                }\n                            }\n                        });\n                    }\n                    if (match.length > 1 && match.index < string.length) {\n                        ArrayPrototype.push.apply(output, match.slice(1));\n                    }\n                    lastLength = match[0].length;\n                    lastLastIndex = lastIndex;\n                    if (output.length >= limit) {\n                        break;\n                    }\n                }\n                if (separator.lastIndex === match.index) {\n                    separator.lastIndex++; // Avoid an infinite loop\n                }\n            }\n            if (lastLastIndex === string.length) {\n                if (lastLength || !separator.test('')) {\n                    output.push('');\n                }\n            } else {\n                output.push(string.slice(lastLastIndex));\n            }\n            return output.length > limit ? output.slice(0, limit) : output;\n        };\n    }());\n\n// [bugfix, chrome]\n// If separator is undefined, then the result array contains just one String,\n// which is the this value (converted to a String). If limit is not undefined,\n// then the output array is truncated so that it contains no more than limit\n// elements.\n// \"0\".split(undefined, 0) -> []\n} else if ('0'.split(void 0, 0).length) {\n    StringPrototype.split = function split(separator, limit) {\n        if (separator === void 0 && limit === 0) { return []; }\n        return string_split.call(this, separator, limit);\n    };\n}\n\n// ES5 15.5.4.20\n// whitespace from: http://es5.github.io/#x15.5.4.20\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n    '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' +\n    '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar wsRegexChars = '[' + ws + ']';\nvar trimBeginRegexp = new RegExp('^' + wsRegexChars + wsRegexChars + '*');\nvar trimEndRegexp = new RegExp(wsRegexChars + wsRegexChars + '*$');\nvar hasTrimWhitespaceBug = StringPrototype.trim && (ws.trim() || !zeroWidth.trim());\ndefineProperties(StringPrototype, {\n    // http://blog.stevenlevithan.com/archives/faster-trim-javascript\n    // http://perfectionkills.com/whitespace-deviations/\n    trim: function trim() {\n        if (this === void 0 || this === null) {\n            throw new TypeError(\"can't convert \" + this + ' to object');\n        }\n        return String(this).replace(trimBeginRegexp, '').replace(trimEndRegexp, '');\n    }\n}, hasTrimWhitespaceBug);\n\n// ECMA-262, 3rd B.2.3\n// Not an ECMAScript standard, although ECMAScript 3rd Edition has a\n// non-normative section suggesting uniform semantics and it should be\n// normalized across all browsers\n// [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE\nvar string_substr = StringPrototype.substr;\nvar hasNegativeSubstrBug = ''.substr && '0b'.substr(-1) !== 'b';\ndefineProperties(StringPrototype, {\n    substr: function substr(start, length) {\n        return string_substr.call(\n            this,\n            start < 0 ? ((start = this.length + start) < 0 ? 0 : start) : start,\n            length\n        );\n    }\n}, hasNegativeSubstrBug);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/shims.js\n ** module id = 57\n ** module chunks = 0\n **/","'use strict';\n\nvar JSON3 = require('json3');\n\n// Some extra characters that Chrome gets wrong, and substitutes with\n// something else on the wire.\nvar extraEscapable = /[\\x00-\\x1f\\ud800-\\udfff\\ufffe\\uffff\\u0300-\\u0333\\u033d-\\u0346\\u034a-\\u034c\\u0350-\\u0352\\u0357-\\u0358\\u035c-\\u0362\\u0374\\u037e\\u0387\\u0591-\\u05af\\u05c4\\u0610-\\u0617\\u0653-\\u0654\\u0657-\\u065b\\u065d-\\u065e\\u06df-\\u06e2\\u06eb-\\u06ec\\u0730\\u0732-\\u0733\\u0735-\\u0736\\u073a\\u073d\\u073f-\\u0741\\u0743\\u0745\\u0747\\u07eb-\\u07f1\\u0951\\u0958-\\u095f\\u09dc-\\u09dd\\u09df\\u0a33\\u0a36\\u0a59-\\u0a5b\\u0a5e\\u0b5c-\\u0b5d\\u0e38-\\u0e39\\u0f43\\u0f4d\\u0f52\\u0f57\\u0f5c\\u0f69\\u0f72-\\u0f76\\u0f78\\u0f80-\\u0f83\\u0f93\\u0f9d\\u0fa2\\u0fa7\\u0fac\\u0fb9\\u1939-\\u193a\\u1a17\\u1b6b\\u1cda-\\u1cdb\\u1dc0-\\u1dcf\\u1dfc\\u1dfe\\u1f71\\u1f73\\u1f75\\u1f77\\u1f79\\u1f7b\\u1f7d\\u1fbb\\u1fbe\\u1fc9\\u1fcb\\u1fd3\\u1fdb\\u1fe3\\u1feb\\u1fee-\\u1fef\\u1ff9\\u1ffb\\u1ffd\\u2000-\\u2001\\u20d0-\\u20d1\\u20d4-\\u20d7\\u20e7-\\u20e9\\u2126\\u212a-\\u212b\\u2329-\\u232a\\u2adc\\u302b-\\u302c\\uaab2-\\uaab3\\uf900-\\ufa0d\\ufa10\\ufa12\\ufa15-\\ufa1e\\ufa20\\ufa22\\ufa25-\\ufa26\\ufa2a-\\ufa2d\\ufa30-\\ufa6d\\ufa70-\\ufad9\\ufb1d\\ufb1f\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufb4e\\ufff0-\\uffff]/g\n  , extraLookup;\n\n// This may be quite slow, so let's delay until user actually uses bad\n// characters.\nvar unrollLookup = function(escapable) {\n  var i;\n  var unrolled = {};\n  var c = [];\n  for (i = 0; i < 65536; i++) {\n    c.push( String.fromCharCode(i) );\n  }\n  escapable.lastIndex = 0;\n  c.join('').replace(escapable, function(a) {\n    unrolled[ a ] = '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    return '';\n  });\n  escapable.lastIndex = 0;\n  return unrolled;\n};\n\n// Quote string, also taking care of unicode characters that browsers\n// often break. Especially, take care of unicode surrogates:\n// http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates\nmodule.exports = {\n  quote: function(string) {\n    var quoted = JSON3.stringify(string);\n\n    // In most cases this should be very fast and good enough.\n    extraEscapable.lastIndex = 0;\n    if (!extraEscapable.test(quoted)) {\n      return quoted;\n    }\n\n    if (!extraLookup) {\n      extraLookup = unrollLookup(extraEscapable);\n    }\n\n    return quoted.replace(extraEscapable, function(a) {\n      return extraLookup[a];\n    });\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/utils/escape.js\n ** module id = 58\n ** module chunks = 0\n **/","'use strict';\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:utils:transport');\n}\n\nmodule.exports = function(availableTransports) {\n  return {\n    filterToEnabled: function(transportsWhitelist, info) {\n      var transports = {\n        main: []\n      , facade: []\n      };\n      if (!transportsWhitelist) {\n        transportsWhitelist = [];\n      } else if (typeof transportsWhitelist === 'string') {\n        transportsWhitelist = [transportsWhitelist];\n      }\n\n      availableTransports.forEach(function(trans) {\n        if (!trans) {\n          return;\n        }\n\n        if (trans.transportName === 'websocket' && info.websocket === false) {\n          debug('disabled from server', 'websocket');\n          return;\n        }\n\n        if (transportsWhitelist.length &&\n            transportsWhitelist.indexOf(trans.transportName) === -1) {\n          debug('not in whitelist', trans.transportName);\n          return;\n        }\n\n        if (trans.enabled(info)) {\n          debug('enabled', trans.transportName);\n          transports.main.push(trans);\n          if (trans.facadeTransport) {\n            transports.facade.push(trans.facadeTransport);\n          }\n        } else {\n          debug('disabled', trans.transportName);\n        }\n      });\n      return transports;\n    }\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/utils/transport.js\n ** module id = 59\n ** module chunks = 0\n **/","'use strict';\n\nvar logObject = {};\n['log', 'debug', 'warn'].forEach(function (level) {\n  var levelExists;\n\n  try {\n    levelExists = global.console && global.console[level] && global.console[level].apply;\n  } catch(e) {\n    // do nothing\n  }\n\n  logObject[level] = levelExists ? function () {\n    return global.console[level].apply(global.console, arguments);\n  } : (level === 'log' ? function () {} : logObject.log);\n});\n\nmodule.exports = logObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/utils/log.js\n ** module id = 60\n ** module chunks = 0\n **/","'use strict';\n\nfunction Event(eventType) {\n  this.type = eventType;\n}\n\nEvent.prototype.initEvent = function(eventType, canBubble, cancelable) {\n  this.type = eventType;\n  this.bubbles = canBubble;\n  this.cancelable = cancelable;\n  this.timeStamp = +new Date();\n  return this;\n};\n\nEvent.prototype.stopPropagation = function() {};\nEvent.prototype.preventDefault = function() {};\n\nEvent.CAPTURING_PHASE = 1;\nEvent.AT_TARGET = 2;\nEvent.BUBBLING_PHASE = 3;\n\nmodule.exports = Event;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/event/event.js\n ** module id = 61\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = global.location || {\n  origin: 'http://localhost:80'\n, protocol: 'http'\n, host: 'localhost'\n, port: 80\n, href: 'http://localhost/'\n, hash: ''\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/location.js\n ** module id = 62\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , Event = require('./event')\n  ;\n\nfunction CloseEvent() {\n  Event.call(this);\n  this.initEvent('close', false, false);\n  this.wasClean = false;\n  this.code = 0;\n  this.reason = '';\n}\n\ninherits(CloseEvent, Event);\n\nmodule.exports = CloseEvent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/event/close.js\n ** module id = 63\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , Event = require('./event')\n  ;\n\nfunction TransportMessageEvent(data) {\n  Event.call(this);\n  this.initEvent('message', false, false);\n  this.data = data;\n}\n\ninherits(TransportMessageEvent, Event);\n\nmodule.exports = TransportMessageEvent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/event/trans-message.js\n ** module id = 64\n ** module chunks = 0\n **/","'use strict';\n\nvar EventEmitter = require('events').EventEmitter\n  , inherits = require('inherits')\n  , urlUtils = require('./utils/url')\n  , XDR = require('./transport/sender/xdr')\n  , XHRCors = require('./transport/sender/xhr-cors')\n  , XHRLocal = require('./transport/sender/xhr-local')\n  , XHRFake = require('./transport/sender/xhr-fake')\n  , InfoIframe = require('./info-iframe')\n  , InfoAjax = require('./info-ajax')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:info-receiver');\n}\n\nfunction InfoReceiver(baseUrl, urlInfo) {\n  debug(baseUrl);\n  var self = this;\n  EventEmitter.call(this);\n\n  setTimeout(function() {\n    self.doXhr(baseUrl, urlInfo);\n  }, 0);\n}\n\ninherits(InfoReceiver, EventEmitter);\n\n// TODO this is currently ignoring the list of available transports and the whitelist\n\nInfoReceiver._getReceiver = function(baseUrl, url, urlInfo) {\n  // determine method of CORS support (if needed)\n  if (urlInfo.sameOrigin) {\n    return new InfoAjax(url, XHRLocal);\n  }\n  if (XHRCors.enabled) {\n    return new InfoAjax(url, XHRCors);\n  }\n  if (XDR.enabled && urlInfo.sameScheme) {\n    return new InfoAjax(url, XDR);\n  }\n  if (InfoIframe.enabled()) {\n    return new InfoIframe(baseUrl, url);\n  }\n  return new InfoAjax(url, XHRFake);\n};\n\nInfoReceiver.prototype.doXhr = function(baseUrl, urlInfo) {\n  var self = this\n    , url = urlUtils.addPath(baseUrl, '/info')\n    ;\n  debug('doXhr', url);\n\n  this.xo = InfoReceiver._getReceiver(baseUrl, url, urlInfo);\n\n  this.timeoutRef = setTimeout(function() {\n    debug('timeout');\n    self._cleanup(false);\n    self.emit('finish');\n  }, InfoReceiver.timeout);\n\n  this.xo.once('finish', function(info, rtt) {\n    debug('finish', info, rtt);\n    self._cleanup(true);\n    self.emit('finish', info, rtt);\n  });\n};\n\nInfoReceiver.prototype._cleanup = function(wasClean) {\n  debug('_cleanup');\n  clearTimeout(this.timeoutRef);\n  this.timeoutRef = null;\n  if (!wasClean && this.xo) {\n    this.xo.close();\n  }\n  this.xo = null;\n};\n\nInfoReceiver.prototype.close = function() {\n  debug('close');\n  this.removeAllListeners();\n  this._cleanup(false);\n};\n\nInfoReceiver.timeout = 8000;\n\nmodule.exports = InfoReceiver;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/info-receiver.js\n ** module id = 65\n ** module chunks = 0\n **/","'use strict';\n\nvar EventEmitter = require('events').EventEmitter\n  , inherits = require('inherits')\n  ;\n\nfunction XHRFake(/* method, url, payload, opts */) {\n  var self = this;\n  EventEmitter.call(this);\n\n  this.to = setTimeout(function() {\n    self.emit('finish', 200, '{}');\n  }, XHRFake.timeout);\n}\n\ninherits(XHRFake, EventEmitter);\n\nXHRFake.prototype.close = function() {\n  clearTimeout(this.to);\n};\n\nXHRFake.timeout = 2000;\n\nmodule.exports = XHRFake;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/transport/sender/xhr-fake.js\n ** module id = 66\n ** module chunks = 0\n **/","'use strict';\n\nvar EventEmitter = require('events').EventEmitter\n  , inherits = require('inherits')\n  , JSON3 = require('json3')\n  , utils = require('./utils/event')\n  , IframeTransport = require('./transport/iframe')\n  , InfoReceiverIframe = require('./info-iframe-receiver')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:info-iframe');\n}\n\nfunction InfoIframe(baseUrl, url) {\n  var self = this;\n  EventEmitter.call(this);\n\n  var go = function() {\n    var ifr = self.ifr = new IframeTransport(InfoReceiverIframe.transportName, url, baseUrl);\n\n    ifr.once('message', function(msg) {\n      if (msg) {\n        var d;\n        try {\n          d = JSON3.parse(msg);\n        } catch (e) {\n          debug('bad json', msg);\n          self.emit('finish');\n          self.close();\n          return;\n        }\n\n        var info = d[0], rtt = d[1];\n        self.emit('finish', info, rtt);\n      }\n      self.close();\n    });\n\n    ifr.once('close', function() {\n      self.emit('finish');\n      self.close();\n    });\n  };\n\n  // TODO this seems the same as the 'needBody' from transports\n  if (!global.document.body) {\n    utils.attachEvent('load', go);\n  } else {\n    go();\n  }\n}\n\ninherits(InfoIframe, EventEmitter);\n\nInfoIframe.enabled = function() {\n  return IframeTransport.enabled();\n};\n\nInfoIframe.prototype.close = function() {\n  if (this.ifr) {\n    this.ifr.close();\n  }\n  this.removeAllListeners();\n  this.ifr = null;\n};\n\nmodule.exports = InfoIframe;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/info-iframe.js\n ** module id = 67\n ** module chunks = 0\n **/","'use strict';\n\nvar inherits = require('inherits')\n  , EventEmitter = require('events').EventEmitter\n  , JSON3 = require('json3')\n  , XHRLocalObject = require('./transport/sender/xhr-local')\n  , InfoAjax = require('./info-ajax')\n  ;\n\nfunction InfoReceiverIframe(transUrl) {\n  var self = this;\n  EventEmitter.call(this);\n\n  this.ir = new InfoAjax(transUrl, XHRLocalObject);\n  this.ir.once('finish', function(info, rtt) {\n    self.ir = null;\n    self.emit('message', JSON3.stringify([info, rtt]));\n  });\n}\n\ninherits(InfoReceiverIframe, EventEmitter);\n\nInfoReceiverIframe.transportName = 'iframe-info-receiver';\n\nInfoReceiverIframe.prototype.close = function() {\n  if (this.ir) {\n    this.ir.close();\n    this.ir = null;\n  }\n  this.removeAllListeners();\n};\n\nmodule.exports = InfoReceiverIframe;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/info-iframe-receiver.js\n ** module id = 68\n ** module chunks = 0\n **/","'use strict';\n\nvar EventEmitter = require('events').EventEmitter\n  , inherits = require('inherits')\n  , JSON3 = require('json3')\n  , objectUtils = require('./utils/object')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:info-ajax');\n}\n\nfunction InfoAjax(url, AjaxObject) {\n  EventEmitter.call(this);\n\n  var self = this;\n  var t0 = +new Date();\n  this.xo = new AjaxObject('GET', url);\n\n  this.xo.once('finish', function(status, text) {\n    var info, rtt;\n    if (status === 200) {\n      rtt = (+new Date()) - t0;\n      if (text) {\n        try {\n          info = JSON3.parse(text);\n        } catch (e) {\n          debug('bad json', text);\n        }\n      }\n\n      if (!objectUtils.isObject(info)) {\n        info = {};\n      }\n    }\n    self.emit('finish', info, rtt);\n    self.removeAllListeners();\n  });\n}\n\ninherits(InfoAjax, EventEmitter);\n\nInfoAjax.prototype.close = function() {\n  this.removeAllListeners();\n  this.xo.close();\n};\n\nmodule.exports = InfoAjax;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/info-ajax.js\n ** module id = 69\n ** module chunks = 0\n **/","'use strict';\n\nvar urlUtils = require('./utils/url')\n  , eventUtils = require('./utils/event')\n  , JSON3 = require('json3')\n  , FacadeJS = require('./facade')\n  , InfoIframeReceiver = require('./info-iframe-receiver')\n  , iframeUtils = require('./utils/iframe')\n  , loc = require('./location')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:iframe-bootstrap');\n}\n\nmodule.exports = function(SockJS, availableTransports) {\n  var transportMap = {};\n  availableTransports.forEach(function(at) {\n    if (at.facadeTransport) {\n      transportMap[at.facadeTransport.transportName] = at.facadeTransport;\n    }\n  });\n\n  // hard-coded for the info iframe\n  // TODO see if we can make this more dynamic\n  transportMap[InfoIframeReceiver.transportName] = InfoIframeReceiver;\n  var parentOrigin;\n\n  /* eslint-disable camelcase */\n  SockJS.bootstrap_iframe = function() {\n    /* eslint-enable camelcase */\n    var facade;\n    iframeUtils.currentWindowId = loc.hash.slice(1);\n    var onMessage = function(e) {\n      if (e.source !== parent) {\n        return;\n      }\n      if (typeof parentOrigin === 'undefined') {\n        parentOrigin = e.origin;\n      }\n      if (e.origin !== parentOrigin) {\n        return;\n      }\n\n      var iframeMessage;\n      try {\n        iframeMessage = JSON3.parse(e.data);\n      } catch (ignored) {\n        debug('bad json', e.data);\n        return;\n      }\n\n      if (iframeMessage.windowId !== iframeUtils.currentWindowId) {\n        return;\n      }\n      switch (iframeMessage.type) {\n      case 's':\n        var p;\n        try {\n          p = JSON3.parse(iframeMessage.data);\n        } catch (ignored) {\n          debug('bad json', iframeMessage.data);\n          break;\n        }\n        var version = p[0];\n        var transport = p[1];\n        var transUrl = p[2];\n        var baseUrl = p[3];\n        debug(version, transport, transUrl, baseUrl);\n        // change this to semver logic\n        if (version !== SockJS.version) {\n          throw new Error('Incompatible SockJS! Main site uses:' +\n                    ' \"' + version + '\", the iframe:' +\n                    ' \"' + SockJS.version + '\".');\n        }\n\n        if (!urlUtils.isOriginEqual(transUrl, loc.href) ||\n            !urlUtils.isOriginEqual(baseUrl, loc.href)) {\n          throw new Error('Can\\'t connect to different domain from within an ' +\n                    'iframe. (' + loc.href + ', ' + transUrl + ', ' + baseUrl + ')');\n        }\n        facade = new FacadeJS(new transportMap[transport](transUrl, baseUrl));\n        break;\n      case 'm':\n        facade._send(iframeMessage.data);\n        break;\n      case 'c':\n        if (facade) {\n          facade._close();\n        }\n        facade = null;\n        break;\n      }\n    };\n\n    eventUtils.attachEvent('message', onMessage);\n\n    // Start\n    iframeUtils.postMessage('s');\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/iframe-bootstrap.js\n ** module id = 70\n ** module chunks = 0\n **/","'use strict';\n\nvar JSON3 = require('json3')\n  , iframeUtils = require('./utils/iframe')\n  ;\n\nfunction FacadeJS(transport) {\n  this._transport = transport;\n  transport.on('message', this._transportMessage.bind(this));\n  transport.on('close', this._transportClose.bind(this));\n}\n\nFacadeJS.prototype._transportClose = function(code, reason) {\n  iframeUtils.postMessage('c', JSON3.stringify([code, reason]));\n};\nFacadeJS.prototype._transportMessage = function(frame) {\n  iframeUtils.postMessage('t', frame);\n};\nFacadeJS.prototype._send = function(data) {\n  this._transport.send(data);\n};\nFacadeJS.prototype._close = function() {\n  this._transport.close();\n  this._transport.removeAllListeners();\n};\n\nmodule.exports = FacadeJS;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/sockjs-client/lib/facade.js\n ** module id = 71\n ** module chunks = 0\n **/","'use strict';\nvar ansiRegex = require('ansi-regex')();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/strip-ansi/index.js\n ** module id = 72\n ** module chunks = 0\n **/","'use strict';\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-dev-server/~/strip-ansi/~/ansi-regex/index.js\n ** module id = 73\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n/*globals window __webpack_hash__ */\r\nif(module.hot) {\r\n\tvar lastData;\r\n\tvar upToDate = function upToDate() {\r\n\t\treturn lastData.indexOf(__webpack_hash__) >= 0;\r\n\t};\r\n\tvar check = function check() {\r\n\t\tmodule.hot.check(function(err, updatedModules) {\r\n\t\t\tif(err) {\r\n\t\t\t\tif(module.hot.status() in {\r\n\t\t\t\t\t\tabort: 1,\r\n\t\t\t\t\t\tfail: 1\r\n\t\t\t\t\t}) {\r\n\t\t\t\t\tconsole.warn(\"[HMR] Cannot check for update. Need to do a full reload!\");\r\n\t\t\t\t\tconsole.warn(\"[HMR] \" + err.stack || err.message);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn(\"[HMR] Update check failed: \" + err.stack || err.message);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(!updatedModules) {\r\n\t\t\t\tconsole.warn(\"[HMR] Cannot find update. Need to do a full reload!\");\r\n\t\t\t\tconsole.warn(\"[HMR] (Probably because of restarting the webpack-dev-server)\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tmodule.hot.apply({\r\n\t\t\t\tignoreUnaccepted: true\r\n\t\t\t}, function(err, renewedModules) {\r\n\t\t\t\tif(err) {\r\n\t\t\t\t\tif(module.hot.status() in {\r\n\t\t\t\t\t\t\tabort: 1,\r\n\t\t\t\t\t\t\tfail: 1\r\n\t\t\t\t\t\t}) {\r\n\t\t\t\t\t\tconsole.warn(\"[HMR] Cannot apply update. Need to do a full reload!\");\r\n\t\t\t\t\t\tconsole.warn(\"[HMR] \" + err.stack || err.message);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn(\"[HMR] Update failed: \" + err.stack || err.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!upToDate()) {\r\n\t\t\t\t\tcheck();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, renewedModules);\r\n\r\n\t\t\t\tif(upToDate()) {\r\n\t\t\t\t\tconsole.log(\"[HMR] App is up to date.\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\tvar addEventListener = window.addEventListener ? function(eventName, listener) {\r\n\t\twindow.addEventListener(eventName, listener, false);\r\n\t} : function(eventName, listener) {\r\n\t\twindow.attachEvent(\"on\" + eventName, listener);\r\n\t};\r\n\taddEventListener(\"message\", function(event) {\r\n\t\tif(typeof event.data === \"string\" && event.data.indexOf(\"webpackHotUpdate\") === 0) {\r\n\t\t\tlastData = event.data;\r\n\t\t\tif(!upToDate() && module.hot.status() === \"idle\") {\r\n\t\t\t\tconsole.log(\"[HMR] Checking for updates on the server...\");\r\n\t\t\t\tcheck();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tconsole.log(\"[HMR] Waiting for update signal from WDS...\");\r\n} else {\r\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/hot/only-dev-server.js\n ** module id = 74\n ** module chunks = 0\n **/","import * as logger from './src/logger';\r\nlogger.initialize();\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","import * as sender from './sender';\r\n\r\nlet data = {\r\n\tcodeview: \"\",\r\n\tcontext: document.URL,\r\n\tcountry: \"\",\r\n\tcreated: Date.now(),\r\n\tlanguage: navigator.language || navigator.userLanguage,\r\n\tlocation: {lon: \"\", lat: \"\"},\r\n\treferer: document.referrer,\r\n\ttimeOnPage: 0,\r\n\twaterclicked: 0\r\n};\r\n\r\nconst initialize = () => {\r\n\tfillgeolocation();\r\n\r\n\twindow.onbeforeunload = () => {\r\n\t\tdata.timeOnPage = Date.now() - data.created;\r\n\t    sender.sendactivity(data);\r\n\t}\r\n};\r\n\r\nconst fillgeolocation = () => {\r\n\tif(navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            data.location.lat = position.coords.latitude;\r\n            data.location.lon = position.coords.longitude;\r\n        });\r\n    }\r\n};\r\n\r\nconst addwaterclick = () => {\r\n\tdata.waterclicked++;\r\n};\r\n\r\nexport {\r\n\tinitialize,\r\n\taddwaterclick\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/logger.js\n **/","import constant from './constants';\r\nimport client from './client';\r\n\r\nconst sendactivity = (senddata) => {\r\n\tdebugger;\r\n\tclient.create({\r\n\t\tindex: constant.index,\r\n\t\ttype: constant.type,\r\n  \t\tbody: senddata\r\n\t}, (error, response) => {\r\n\t\tconsole.log(response);\r\n\t});\r\n};\r\n\r\nexport {\r\n\tsendactivity\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/sender.js\n **/","export default {\r\n\tindex: \"treelogger\",\r\n\ttype: \"activitylog\",\r\n\tserver: \"localhost\",\r\n\tport: \"9200\"\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants.js\n **/","import constant from './constants';\r\nimport elasticsearch from 'elasticsearch';\r\n\r\nconst client = new elasticsearch.Client({  \r\n\thost: `${constant.server}:${constant.port}`,\r\n\tlog: 'info'\r\n});\r\n\r\nexport default client;\n\n\n/** WEBPACK FOOTER **\n ** ./src/client.js\n **/","// In order to help people who were accidentally upgraded to this ES client,\n// throw an error when they try to instanciate the exported function.\n// previous \"elasticsearch\" module -> https://github.com/ncb000gt/node-es\nfunction es() {\n  throw new Error('Looks like you are expecting the previous \"elasticsearch\" module. ' +\n    'It is now the \"es\" module. To create a client with this module use ' +\n    '`new es.Client(params)`.');\n}\n\nes.Client = require('./lib/client');\nes.ConnectionPool = require('./lib/connection_pool');\nes.Transport = require('./lib/transport');\nes.errors = require('./lib/errors');\n\nmodule.exports = es;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/elasticsearch.js\n ** module id = 80\n ** module chunks = 0\n **/","/**\n * A client that makes requests to Elasticsearch via a {{#crossLink \"Transport\"}}Transport{{/crossLink}}\n *\n * Initializing a client might look something like:\n *\n * ```\n * var client = new es.Client({\n *   hosts: [\n *     'es1.net:9200',\n *     {\n *       host: 'es2.net',\n *       port: 9200\n *     }\n *   ],\n *   sniffOnStart: true,\n *   log: {\n *     type: 'file',\n *     level: 'warning'\n *   }\n * });\n * ```\n *\n * @class Client\n * @constructor\n */\n\nmodule.exports = Client;\n\nvar Transport = require('./transport');\nvar clientAction = require('./client_action');\nvar _ = require('./utils');\n\nfunction Client(config) {\n  config = config || {};\n\n  if (config.__reused) {\n    throw new Error('Do not reuse objects to configure the elasticsearch Client class: ' +\n      'https://github.com/elasticsearch/elasticsearch-js/issues/33');\n  } else {\n    config.__reused = true;\n  }\n\n  function EsApiClient() {\n    // our client will log minimally by default\n    if (!config.hasOwnProperty('log')) {\n      config.log = 'warning';\n    }\n\n    if (!config.hosts && !config.host) {\n      config.host = 'http://localhost:9200';\n    }\n\n    this.close = function () {\n      this.transport.close();\n    };\n\n    this.transport = new Transport(config);\n\n    _.each(EsApiClient.prototype, function (Fn, prop) {\n      if (Fn.prototype instanceof clientAction.ApiNamespace) {\n        this[prop] = new Fn(this.transport);\n      }\n    }, this);\n\n    delete this._namespaces;\n  }\n\n\n  EsApiClient.prototype = _.funcEnum(config, 'apiVersion', Client.apis, '_default');\n  if (!config.sniffEndpoint && EsApiClient.prototype === Client.apis['0.90']) {\n    config.sniffEndpoint = '/_cluster/nodes';\n  }\n\n  var Constructor = EsApiClient;\n\n  if (config.plugins) {\n    Constructor.prototype = _.cloneDeep(Constructor.prototype);\n\n    _.each(config.plugins, function (setup) {\n      Constructor = setup(Constructor, config, {\n        apis: require('./apis'),\n        connectors: require('./connectors'),\n        loggers: require('./loggers'),\n        selectors: require('./selectors'),\n        serializers: require('./serializers'),\n        Client: require('./client'),\n        clientAction: clientAction,\n        Connection: require('./connection'),\n        ConnectionPool: require('./connection_pool'),\n        Errors: require('./errors'),\n        Host: require('./host'),\n        Log: require('./log'),\n        Logger: require('./logger'),\n        NodesToHost: require('./nodes_to_host'),\n        Transport: require('./transport'),\n        utils: require('./utils')\n      }) || Constructor;\n    });\n  }\n\n  return new Constructor();\n}\n\nClient.apis = require('./apis');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/client.js\n ** module id = 81\n ** module chunks = 0\n **/","/**\n * Class that manages making request, called by all of the API methods.\n * @type {[type]}\n */\nmodule.exports = Transport;\n\nvar _ = require('./utils');\nvar errors = require('./errors');\nvar Host = require('./host');\nvar Promise = require('promise/lib/es6-extensions');\nvar patchSniffOnConnectionFault = require('./transport/sniff_on_connection_fault');\nvar findCommonProtocol = require('./transport/find_common_protocol');\n\nfunction Transport(config) {\n  var self = this;\n  config = self._config = config || {};\n\n  var LogClass = (typeof config.log === 'function') ? config.log : require('./log');\n  config.log = self.log = new LogClass(config);\n\n  // setup the connection pool\n  var ConnectionPool = _.funcEnum(config, 'connectionPool', Transport.connectionPools, 'main');\n  self.connectionPool = new ConnectionPool(config);\n\n  // setup the serializer\n  var Serializer = _.funcEnum(config, 'serializer', Transport.serializers, 'json');\n  self.serializer = new Serializer(config);\n\n  // setup the nodesToHostCallback\n  self.nodesToHostCallback = _.funcEnum(config, 'nodesToHostCallback', Transport.nodesToHostCallbacks, 'main');\n\n  // setup max retries\n  self.maxRetries = config.hasOwnProperty('maxRetries') ? config.maxRetries : 3;\n\n  // setup endpoint to use for sniffing\n  self.sniffEndpoint = config.hasOwnProperty('sniffEndpoint') ? config.sniffEndpoint : '/_nodes/_all/clear';\n\n  // setup requestTimeout default\n  self.requestTimeout = config.hasOwnProperty('requestTimeout') ? config.requestTimeout : 30000;\n\n  if (config.hasOwnProperty('defer')) {\n    self.defer = config.defer;\n  }\n\n  // randomizeHosts option\n  var randomizeHosts = config.hasOwnProperty('randomizeHosts') ? !!config.randomizeHosts : true;\n\n  if (config.host) {\n    config.hosts = config.host;\n  }\n\n  if (config.hosts) {\n    var hostsConfig = _.createArray(config.hosts, function (val) {\n      if (_.isPlainObject(val) || _.isString(val) || val instanceof Host) {\n        return val;\n      }\n    });\n\n    if (!hostsConfig) {\n      throw new TypeError('Invalid hosts config. Expected a URL, an array of urls, a host config object, ' +\n        'or an array of host config objects.');\n    }\n\n    if (randomizeHosts) {\n      hostsConfig = _.shuffle(hostsConfig);\n    }\n\n    self.setHosts(hostsConfig);\n  }\n\n  if (config.hasOwnProperty('sniffedNodesProtocol')) {\n    self.sniffedNodesProtocol = config.sniffedNodesProtocol || null;\n  } else {\n    self.sniffedNodesProtocol = findCommonProtocol(self.connectionPool.getAllHosts()) || null;\n  }\n\n  if (config.sniffOnStart) {\n    self.sniff();\n  }\n\n  if (config.sniffInterval) {\n    self._timeout(function doSniff() {\n      self.sniff();\n      self._timeout(doSniff, config.sniffInterval);\n    }, config.sniffInterval);\n  }\n\n  if (config.sniffOnConnectionFault) {\n    patchSniffOnConnectionFault(self);\n  }\n}\n\nTransport.connectionPools = {\n  main: require('./connection_pool')\n};\n\nTransport.serializers = require('./serializers');\n\nTransport.nodesToHostCallbacks = {\n  main: require('./nodes_to_host')\n};\n\nTransport.prototype.defer = function () {\n  var defer = {};\n  defer.promise = new Promise(function (resolve, reject) {\n    defer.resolve = resolve;\n    defer.reject = reject;\n  });\n  return defer;\n};\n\n/**\n * Perform a request with the client's transport\n *\n * @method request\n * @todo async body writing\n * @todo abort\n * @todo access to custom headers, modifying of request in general\n * @param {object} params\n * @param {Number} params.requestTimeout - timeout for the entire request (inculding all retries)\n * @param {Number} params.maxRetries - number of times to re-run request if the\n *   original node chosen can not be connected to.\n * @param {string} [params.path=\"/\"] - URL pathname. Do not include query string.\n * @param {string|object} [params.query] - Query string.\n * @param {String} params.method - The HTTP method for the request\n * @param {String} params.body - The body of the HTTP request\n * @param {Function} cb - A function to call back with (error, responseBody, responseStatus)\n */\nTransport.prototype.request = function (params, cb) {\n  var self = this;\n  var remainingRetries = this.maxRetries;\n  var requestTimeout = this.requestTimeout;\n\n  var connection; // set in sendReqWithConnection\n  var aborted = false; // several connector will respond with an error when the request is aborted\n  var requestAborter; // an abort function, returned by connection#request()\n  var requestTimeoutId; // the id of the ^timeout\n  var ret; // the object returned to the user, might be a promise\n  var defer; // the defer object, will be set when we are using promises.\n\n  var body = params.body;\n  var headers = !params.headers ? {} : _.transform(params.headers, function (headers, val, name) {\n    headers[String(name).toLowerCase()] = val;\n  });\n\n  self.log.debug('starting request', params);\n\n  // determine the response based on the presense of a callback\n  if (typeof cb === 'function') {\n    // handle callbacks within a domain\n    if (process.domain) {\n      cb = process.domain.bind(cb);\n    }\n    ret = {\n      abort: abortRequest\n    };\n  } else {\n    defer = this.defer();\n    ret = defer.promise;\n    ret.abort = abortRequest;\n  }\n\n  if (body && params.method === 'GET') {\n    _.nextTick(respond, new TypeError('Body can not be sent with method \"GET\"'));\n    return ret;\n  }\n\n  // serialize the body\n  if (body) {\n    var serializer = self.serializer;\n    var serializeFn = serializer[params.bulkBody ? 'bulkBody' : 'serialize'];\n\n    body = serializeFn.call(serializer, body);\n    if (!headers['content-type']) {\n      headers['content-type'] = serializeFn.contentType;\n    }\n  }\n\n  if (params.hasOwnProperty('maxRetries')) {\n    remainingRetries = params.maxRetries;\n  }\n\n  if (params.hasOwnProperty('requestTimeout')) {\n    requestTimeout = params.requestTimeout;\n  }\n\n  params.req = {\n    method: params.method,\n    path: params.path || '/',\n    query: params.query,\n    body: body,\n    headers: headers\n  };\n\n  function sendReqWithConnection(err, _connection) {\n    if (aborted) {\n      return;\n    }\n\n    if (err) {\n      respond(err);\n    } else if (_connection) {\n      connection = _connection;\n      requestAborter = connection.request(params.req, checkRespForFailure);\n    } else {\n      self.log.warning('No living connections');\n      respond(new errors.NoConnections());\n    }\n  }\n\n  function checkRespForFailure(err, body, status, headers) {\n    if (aborted) {\n      return;\n    }\n\n    requestAborter = void 0;\n\n    if (err instanceof errors.RequestTypeError) {\n      self.log.error('Connection refused to execute the request', err);\n      respond(err, body, status, headers);\n      return;\n    }\n\n    if (err) {\n      connection.setStatus('dead');\n\n      var errMsg = err.message || '';\n\n      errMsg =\n        \"\\n\" +\n        params.req.method +\n        ' ' +\n        connection.host.makeUrl(params.req) +\n        (errMsg.length ? ' => ' : '') +\n        errMsg\n      ;\n\n      if (remainingRetries) {\n        remainingRetries--;\n        self.log.error('Request error, retrying' + errMsg);\n        self.connectionPool.select(sendReqWithConnection);\n      } else {\n        self.log.error('Request complete with error' + errMsg);\n        respond(new errors.ConnectionFault(err));\n      }\n    } else {\n      self.log.debug('Request complete');\n      respond(void 0, body, status, headers);\n    }\n  }\n\n  function respond(err, body, status, headers) {\n    if (aborted) {\n      return;\n    }\n\n    self._timeout(requestTimeoutId);\n    var parsedBody;\n    var isJson = !headers || (headers['content-type'] && ~headers['content-type'].indexOf('application/json'));\n\n    if (!err && body) {\n      if (isJson) {\n        parsedBody = self.serializer.deserialize(body);\n        if (parsedBody == null) {\n          err = new errors.Serialization();\n          parsedBody = body;\n        }\n      } else {\n        parsedBody = body;\n      }\n    }\n\n    // does the response represent an error?\n    if (\n      (!err || err instanceof errors.Serialization)\n      && (status < 200 || status >= 300)\n      && (!params.ignore || !_.contains(params.ignore, status))\n    ) {\n\n      var errorMetadata = _.pick(params.req, ['path', 'query', 'body']);\n      errorMetadata.statusCode = status;\n      errorMetadata.response = body;\n\n      if (status === 401 && headers && headers['www-authenticate']) {\n        errorMetadata.wwwAuthenticateDirective = headers['www-authenticate'];\n      }\n\n      if (errors[status]) {\n        err = new errors[status](parsedBody && parsedBody.error, errorMetadata);\n      } else {\n        err = new errors.Generic('unknown error', errorMetadata);\n      }\n    }\n\n    // can we cast notfound to false?\n    if (params.castExists) {\n      if (err && err instanceof errors.NotFound) {\n        parsedBody = false;\n        err = void 0;\n      } else {\n        parsedBody = !err;\n      }\n    }\n\n    // how do we send the response?\n    if (typeof cb === 'function') {\n      if (err) {\n        cb(err, parsedBody, status);\n      } else {\n        cb(void 0, parsedBody, status);\n      }\n    } else if (err) {\n      err.body = parsedBody;\n      err.status = status;\n      defer.reject(err);\n    } else {\n      defer.resolve(parsedBody);\n    }\n  }\n\n  function abortRequest() {\n    if (aborted) {\n      return;\n    }\n\n    aborted = true;\n    remainingRetries = 0;\n    self._timeout(requestTimeoutId);\n    if (typeof requestAborter === 'function') {\n      requestAborter();\n    }\n  }\n\n  if (requestTimeout && requestTimeout !== Infinity) {\n    requestTimeoutId = this._timeout(function () {\n      respond(new errors.RequestTimeout('Request Timeout after ' + requestTimeout + 'ms'));\n      abortRequest();\n    }, requestTimeout);\n  }\n\n  if (connection) {\n    sendReqWithConnection(void 0, connection);\n  } else {\n    self.connectionPool.select(sendReqWithConnection);\n  }\n\n  return ret;\n};\n\nTransport.prototype._timeout = function (cb, delay) {\n  if (this.closed) return;\n\n  var id;\n  var timers = this._timers || (this._timers = []);\n\n  if ('function' !== typeof cb) {\n    id = cb;\n    cb = void 0;\n  }\n\n  if (cb) {\n    // set the timer\n    id = setTimeout(function () {\n      _.pull(timers, id);\n      cb();\n    }, delay);\n\n    timers.push(id);\n    return id;\n  }\n\n  if (id) {\n    clearTimeout(id);\n\n    var i = this._timers.indexOf(id);\n    if (i !== -1) {\n      this._timers.splice(i, 1);\n    }\n  }\n};\n\n/**\n * Ask an ES node for a list of all the nodes, add/remove nodes from the connection\n * pool as appropriate\n *\n * @param  {Function} cb - Function to call back once complete\n */\nTransport.prototype.sniff = function (cb) {\n  var self = this;\n  var nodesToHostCallback = this.nodesToHostCallback;\n  var log = this.log;\n  var sniffedNodesProtocol = this.sniffedNodesProtocol;\n\n  // make cb a function if it isn't\n  cb = typeof cb === 'function' ? cb : _.noop;\n\n  this.request({\n    path: this.sniffEndpoint,\n    method: 'GET'\n  }, function (err, resp, status) {\n    if (!err && resp && resp.nodes) {\n      var hostsConfigs;\n\n      try {\n        hostsConfigs = nodesToHostCallback(resp.nodes);\n      } catch (e) {\n        log.error(new Error('Unable to convert node list from ' + this.sniffEndpoint +\n          ' to hosts durring sniff. Encountered error:\\n' + (e.stack || e.message)));\n        return;\n      }\n\n      _.forEach(hostsConfigs, function (hostConfig) {\n        if (sniffedNodesProtocol) hostConfig.protocol = sniffedNodesProtocol;\n      });\n\n      self.setHosts(hostsConfigs);\n    }\n    cb(err, resp, status);\n  });\n};\n\n/**\n * Set the host list that the transport should use.\n *\n * @param {Array<HostConfig>} hostsConfigs - an array of Hosts, or configuration objects\n *                                         that will be used to create Host objects.\n */\nTransport.prototype.setHosts = function (hostsConfigs) {\n  var globalConfig = this._config;\n  this.connectionPool.setHosts(_.map(hostsConfigs, function (conf) {\n    return (conf instanceof Host) ? conf : new Host(conf, globalConfig);\n  }));\n};\n\n/**\n * Close the Transport, which closes the logs and connection pool\n * @return {[type]} [description]\n */\nTransport.prototype.close = function () {\n  this.log.close();\n  this.closed = true;\n  _.each(this._timers, clearTimeout);\n  this._timers = null;\n  this.connectionPool.close();\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/transport.js\n ** module id = 82\n ** module chunks = 0\n **/","var path = require('path');\nvar _ = require('lodash');\nvar nodeUtils = require('util');\n\n/**\n * Custom utils library, basically a modified version of [lodash](http://lodash.com/docs) +\n * [node.utils](http://nodejs.org/api/util.html#util_util) that doesn't use mixins to prevent\n * confusion when requiring lodash itself.\n *\n * @class utils\n * @static\n */\nvar utils = _.extend({}, _, nodeUtils);\n_ = utils;\n\n/**\n * Link to [path.join](http://nodejs.org/api/path.html#path_path_join_path1_path2)\n *\n * @method utils.joinPath\n * @type {function}\n */\nutils.joinPath = path.join;\n\n/**\n * Recursively merge two objects, walking into each object and concating arrays. If both to and from have a value at a\n * key, but the values' types don't match to's value is left unmodified. Only Array and Object values are merged - that\n * it to say values with a typeof \"object\"\n *\n * @param  {Object} to - Object to merge into (no cloning, the original object\n *   is modified)\n * @param  {Object} from - Object to pull changed from\n * @return {Object} - returns the modified to value\n */\nutils.deepMerge = function (to, from) {\n  _.each(from, function (fromVal, key) {\n    switch (typeof to[key]) {\n    case 'undefined':\n      to[key] = from[key];\n      break;\n    case 'object':\n      if (_.isArray(to[key]) && _.isArray(from[key])) {\n        to[key] = to[key].concat(from[key]);\n      }\n      else if (_.isPlainObject(to[key]) && _.isPlainObject(from[key])) {\n        utils.deepMerge(to[key], from[key]);\n      }\n    }\n  });\n  return to;\n};\n\n/**\n * Test if a value is an array and it's contents are of a specific type\n *\n * @method isArrayOf<Strings|Object|Array|Finite|Function|RegExp>s\n * @param  {Array} arr - An array to check\n * @return {Boolean}\n */\n_.each([\n  'String',\n  'Object',\n  'PlainObject',\n  'Array',\n  'Finite',\n  'Function',\n  'RegExp'\n], function (type) {\n  var check = _['is' + type];\n\n  utils['isArrayOf' + type + 's'] = function (arr) {\n    // quick shallow check of arrays\n    return _.isArray(arr) && _.every(arr.slice(0, 10), check);\n  };\n});\n\n\n/**\n * Capitalize the first letter of a word\n *\n * @method  ucfirst\n * @param  {string} word - The word to transform\n * @return {string}\n */\nutils.ucfirst = function (word) {\n  return word[0].toUpperCase() + word.substring(1).toLowerCase();\n};\n\n/**\n * Base algo for studlyCase and camelCase\n * @param  {boolean} firstWordCap - Should the first character of the first word be capitalized\n * @return {Function}\n */\nfunction adjustWordCase(firstWordCap, otherWordsCap, sep) {\n  return function (string) {\n    var i = 0;\n    var words = [];\n    var word = '';\n    var code, c, upper, lower;\n\n    for (; i < string.length; i++) {\n      code = string.charCodeAt(i);\n      c = string.charAt(i);\n      lower = (code >= 97 && code <= 122) || (code >= 48 && code <= 57);\n      upper = code >= 65 && code <= 90;\n\n      if (upper || !lower) {\n        // new word\n        if (word.length) {\n          words.push(word);\n        }\n        word = '';\n      }\n\n      if (upper || lower) {\n        if (lower && word.length) {\n          word += c;\n        } else {\n          if ((!words.length && firstWordCap) || (words.length && otherWordsCap)) {\n            word = c.toUpperCase();\n          }\n          else {\n            word = c.toLowerCase();\n          }\n        }\n      }\n    }\n    if (word.length) {\n      words.push(word);\n    }\n    // add the leading underscore back to strings the had it originally\n    if (words.length && string.charAt(0) === '_') {\n      words[0] = '_' + words[0];\n    }\n    return words.join(sep);\n  };\n}\n\n/**\n * Transform a string into StudlyCase\n *\n * @method studlyCase\n * @param  {String} string\n * @return {String}\n */\nutils.studlyCase = adjustWordCase(true, true, '');\n\n/**\n * Transform a string into camelCase\n *\n * @method camelCase\n * @param  {String} string\n * @return {String}\n */\nutils.camelCase = adjustWordCase(false, true, '');\n\n/**\n * Transform a string into snakeCase\n *\n * @method snakeCase\n * @param  {String} string\n * @return {String}\n */\nutils.snakeCase = adjustWordCase(false, false, '_');\n\n/**\n * Lower-case a string, and return an empty string if any is not a string\n *\n * @param any {*} - Something or nothing\n * @returns {string}\n */\nutils.toLowerString = function (any) {\n  if (any) {\n    if (typeof any !== 'string') {\n      any = any.toString();\n    }\n  } else {\n    any = '';\n  }\n  return any.toLowerCase();\n};\n\n/**\n * Upper-case the string, return an empty string if any is not a string\n *\n * @param any {*} - Something or nothing\n * @returns {string}\n */\nutils.toUpperString = function (any) {\n  if (any) {\n    if (typeof any !== 'string') {\n      any = any.toString();\n    }\n  } else {\n    any = '';\n  }\n  return any.toUpperCase();\n};\n\n/**\n * Test if a value is \"numeric\" meaning that it can be transformed into something besides NaN\n *\n * @method isNumeric\n * @param  {*} val\n * @return {Boolean}\n */\nutils.isNumeric = function (val) {\n  return typeof val !== 'object' && val - parseFloat(val) >= 0;\n};\n\n// regexp to test for intervals\nvar intervalRE = /^(\\d+(?:\\.\\d+)?)(M|w|d|h|m|s|y|ms)$/;\n\n/**\n * Test if a string represents an interval (eg. 1m, 2Y)\n *\n * @method isInterval\n * @param {String} val\n * @return {Boolean}\n */\nutils.isInterval = function (val) {\n  return !!(val.match && val.match(intervalRE));\n};\n\n/**\n * Repeat a string n times\n *\n * @todo TestPerformance\n * @method repeat\n * @param {String} what - The string to repeat\n * @param {Number} times - Times the string should be repeated\n * @return {String}\n */\nutils.repeat = function (what, times) {\n  return (new Array(times + 1)).join(what);\n};\n\n/**\n * Call a function, applying the arguments object to it in an optimized way, rather than always turning it into an array\n *\n * @param func {Function} - The function to execute\n * @param context {*} - The context the function will be executed with\n * @param args {Arguments} - The arguments to send to func\n * @param [sliceIndex=0] {Integer} - The index that args should be sliced at, before feeding args to func\n * @returns {*} - the return value of func\n */\nutils.applyArgs = function (func, context, args, sliceIndex) {\n  sliceIndex = sliceIndex || 0;\n  switch (args.length - sliceIndex) {\n  case 0:\n    return func.call(context);\n  case 1:\n    return func.call(context, args[0 + sliceIndex]);\n  case 2:\n    return func.call(context, args[0 + sliceIndex], args[1 + sliceIndex]);\n  case 3:\n    return func.call(context, args[0 + sliceIndex], args[1 + sliceIndex], args[2 + sliceIndex]);\n  case 4:\n    return func.call(context, args[0 + sliceIndex], args[1 + sliceIndex], args[2 + sliceIndex], args[3 + sliceIndex]);\n  case 5:\n    return func.call(context, args[0 + sliceIndex], args[1 + sliceIndex],\n      args[2 + sliceIndex], args[3 + sliceIndex], args[4 + sliceIndex]);\n  default:\n    return func.apply(context, Array.prototype.slice.call(args, sliceIndex));\n  }\n};\n\n/**\n * Schedule a function to be called on the next tick, and supply it with these arguments\n * when it is called.\n * @return {[type]} [description]\n */\n_.nextTick = function (cb) {\n  // bind the function and schedule it\n  process.nextTick(_.bindKey(_, 'applyArgs', cb, null, arguments, 1));\n};\n\n/**\n * Marks a method as a handler. Currently this just makes a property on the method\n * flagging it to be bound to the object at object creation when \"makeBoundMethods\" is called\n *\n * ```\n * ClassName.prototype.methodName = _.handler(function () {\n *   // this will always be bound when called via classInstance.bound.methodName\n *   this === classInstance\n * });\n * ```\n *\n * @alias _.scheduled\n * @param  {Function} func - The method that is being defined\n * @return {Function}\n */\n_.handler = function (func) {\n  func._provideBound = true;\n  return func;\n};\n_.scheduled = _.handler;\n\n/**\n * Creates an \"bound\" property on an object, which all or a subset of methods from\n * the object which are bound to the original object.\n *\n * ```\n * var obj = {\n *   onEvent: function () {}\n * };\n *\n * _.makeBoundMethods(obj);\n *\n * obj.bound.onEvent() // is bound to obj, and can safely be used as an event handler.\n * ```\n *\n * @param {Object} obj - The object to bind the methods to\n */\n_.makeBoundMethods = function (obj) {\n  obj.bound = {};\n  for (var prop in obj) {\n    // dearest maintainer, we want to look through the prototype\n    if (typeof obj[prop] === 'function' && obj[prop]._provideBound === true) {\n      obj.bound[prop] = _.bind(obj[prop], obj);\n    }\n  }\n};\n\n_.noop = function () {};\n\n/**\n * Implements the standard \"string or constructor\" check that I was copy/pasting everywhere\n * @param  {String|Function} val - the value that the user passed in\n * @param  {Object} opts - a map of the options\n * @return {Function|undefined} - If a valid option was specified, then the constructor is returned\n */\n_.funcEnum = function (config, name, opts, def) {\n  var val = config[name];\n  switch (typeof val) {\n  case 'undefined':\n    return opts[def];\n  case 'function':\n    return val;\n  case 'string':\n    if (opts.hasOwnProperty(val)) {\n      return opts[val];\n    }\n    /* falls through */\n  default:\n    var err = 'Invalid ' + name + ' \"' + val + '\", expected a function';\n    switch (_.size(opts)) {\n    case 0:\n      break;\n    case 1:\n      err += ' or ' + _.keys(opts)[0];\n      break;\n    default:\n      err += ' or one of ' + _.keys(opts).join(', ');\n      break;\n    }\n    throw new TypeError(err);\n  }\n};\n\n/**\n * Accepts any object and attempts to convert it into an array. If the object passed in is not\n * an array it will be wrapped in one. Then the transform/map function will be called for each element\n * and create a new array that is returned. If the map function fails to return something, the loop is\n * halted and false is returned instead of an array.\n *\n * @param  {*} input - The value to convert\n * @param  {Function} transform - A function called for each element of the resulting array\n * @return {Array|false} - an array on success, or false on failure.\n */\n_.createArray = function (input, transform) {\n  transform = typeof transform === 'function' ? transform : _.identity;\n  var output = [];\n  var item;\n  var i;\n\n  if (!_.isArray(input)) {\n    input = [input];\n  }\n\n  for (i = 0; i < input.length; i++) {\n    item = transform(input[i]);\n    if (item === void 0) {\n      return false;\n    } else {\n      output.push(item);\n    }\n  }\n  return output;\n};\n\n/**\n * Takes a WritableStream, and returns the chunks that have not successfully written, returning them as a string.\n *\n * ONLY WORKS FOR TEXT STREAMS\n *\n * @param  {WritableStream} stream - an instance of stream.Writable\n * @return {string} - the remaining test to be written to the stream\n */\n_.getUnwrittenFromStream = function (stream) {\n  var writeBuffer = _.getStreamWriteBuffer(stream);\n  if (!writeBuffer) return;\n\n  // flush the write buffer\n  var out = '';\n  if (!writeBuffer.length) return out;\n\n  _.each(writeBuffer, function (writeReq) {\n    if (writeReq.chunk) {\n      // 0.9.12+ uses WriteReq objects with a chunk prop\n      out += '' + writeReq.chunk;\n    } else if (_.isArray(writeReq) && (typeof writeReq[0] === 'string' || Buffer.isBuffer(writeReq[0]))) {\n      // 0.9.4 - 0.9.9 buffers are arrays of arrays like [[chunk, cb], [chunk, undef], ...].\n      out += '' + writeReq[0];\n    } else {\n      return false;\n    }\n  });\n  return out;\n};\n\n_.getStreamWriteBuffer = function (stream) {\n  if (!stream || !stream._writableState) return;\n\n  var writeState = stream._writableState;\n\n  if (writeState.getBuffer) {\n    return writeState.getBuffer();\n  } else if (writeState.buffer) {\n    return writeState.buffer;\n  }\n};\n\n_.clearWriteStreamBuffer = function (stream) {\n  var buffer = _.getStreamWriteBuffer(stream);\n  return buffer && buffer.splice(0);\n};\n\n/**\n * return the current time in milliseconds since epoch\n */\n_.now = function () {\n  return (typeof Date.now === 'function') ? Date.now() : (new Date()).getTime();\n};\n\nmodule.exports = utils;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/utils.js\n ** module id = 83\n ** module chunks = 0\n **/","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n *     on objects.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  function Bar () {}\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    arr.constructor = Bar\n    return arr.foo() === 42 && // typed array instances can be augmented\n        arr.constructor === Bar && // constructor can be set\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    this.length = 0\n    this.parent = undefined\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    array.byteLength\n    that = Buffer._augment(new Uint8Array(array))\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n} else {\n  // pre-set for values that may exist in the future\n  Buffer.prototype.length = undefined\n  Buffer.prototype.parent = undefined\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length))\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n    that._isBuffer = true\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` is deprecated\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` is deprecated\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/index.js\n ** module id = 84\n ** module chunks = 0\n **/","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/~/base64-js/lib/b64.js\n ** module id = 85\n ** module chunks = 0\n **/","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/~/ieee754/index.js\n ** module id = 86\n ** module chunks = 0\n **/","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/~/isarray/index.js\n ** module id = 87\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/path-browserify/index.js\n ** module id = 88\n ** module chunks = 0\n **/","/**\n * @license\n * lodash 3.10.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash compat -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.2';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to fix the JScript `[[DontEnum]]` bug. */\n  var shadowProps = [\n    'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n    'toLocaleString', 'toString', 'valueOf'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  var isHostObject = (function() {\n    try {\n      Object({ 'toString': 0 } + '');\n    } catch(e) {\n      return function() { return false; };\n    }\n    return function(value) {\n      // IE < 9 presents many host objects as `Object` objects that can coerce\n      // to strings despite having improperly defined `toString` methods.\n      return typeof value.toString != 'function' && typeof (value + '') == 'string';\n    };\n  }());\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        errorProto = Error.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to lookup a type array constructors by `toStringTag`. */\n    var ctorByTag = {};\n    ctorByTag[float32Tag] = context.Float32Array;\n    ctorByTag[float64Tag] = context.Float64Array;\n    ctorByTag[int8Tag] = context.Int8Array;\n    ctorByTag[int16Tag] = context.Int16Array;\n    ctorByTag[int32Tag] = context.Int32Array;\n    ctorByTag[uint8Tag] = Uint8Array;\n    ctorByTag[uint8ClampedTag] = context.Uint8ClampedArray;\n    ctorByTag[uint16Tag] = context.Uint16Array;\n    ctorByTag[uint32Tag] = context.Uint32Array;\n\n    /** Used to avoid iterating over non-enumerable properties in IE < 9. */\n    var nonEnumProps = {};\n    nonEnumProps[arrayTag] = nonEnumProps[dateTag] = nonEnumProps[numberTag] = { 'constructor': true, 'toLocaleString': true, 'toString': true, 'valueOf': true };\n    nonEnumProps[boolTag] = nonEnumProps[stringTag] = { 'constructor': true, 'toString': true, 'valueOf': true };\n    nonEnumProps[errorTag] = nonEnumProps[funcTag] = nonEnumProps[regexpTag] = { 'constructor': true, 'toString': true };\n    nonEnumProps[objectTag] = { 'constructor': true };\n\n    arrayEach(shadowProps, function(key) {\n      for (var tag in nonEnumProps) {\n        if (hasOwnProperty.call(nonEnumProps, tag)) {\n          var props = nonEnumProps[tag];\n          props[key] = hasOwnProperty.call(props, key);\n        }\n      }\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    (function(x) {\n      var Ctor = function() { this.x = x; },\n          object = { '0': x, 'length': x },\n          props = [];\n\n      Ctor.prototype = { 'valueOf': x, 'y': x };\n      for (var key in new Ctor) { props.push(key); }\n\n      /**\n       * Detect if `name` or `message` properties of `Error.prototype` are\n       * enumerable by default (IE < 9, Safari < 5.1).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.enumErrorProps = propertyIsEnumerable.call(errorProto, 'message') ||\n        propertyIsEnumerable.call(errorProto, 'name');\n\n      /**\n       * Detect if `prototype` properties are enumerable by default.\n       *\n       * Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1\n       * (if the prototype or a property on the prototype has been set)\n       * incorrectly set the `[[Enumerable]]` value of a function's `prototype`\n       * property to `true`.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.enumPrototypes = propertyIsEnumerable.call(Ctor, 'prototype');\n\n      /**\n       * Detect if properties shadowing those on `Object.prototype` are non-enumerable.\n       *\n       * In IE < 9 an object's own properties, shadowing non-enumerable ones,\n       * are made non-enumerable as well (a.k.a the JScript `[[DontEnum]]` bug).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.nonEnumShadows = !/valueOf/.test(props);\n\n      /**\n       * Detect if own properties are iterated after inherited properties (IE < 9).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.ownLast = props[0] != 'x';\n\n      /**\n       * Detect if `Array#shift` and `Array#splice` augment array-like objects\n       * correctly.\n       *\n       * Firefox < 10, compatibility modes of IE 8, and IE < 9 have buggy Array\n       * `shift()` and `splice()` functions that fail to remove the last element,\n       * `value[0]`, of array-like objects even though the \"length\" property is\n       * set to `0`. The `shift()` method is buggy in compatibility modes of IE 8,\n       * while `splice()` is buggy regardless of mode in IE < 9.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.spliceObjects = (splice.call(object, 0, 1), !object[0]);\n\n      /**\n       * Detect lack of support for accessing string characters by index.\n       *\n       * IE < 8 can't access characters by index. IE 8 can only access characters\n       * by index on string literals, not string objects.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.unindexedChars = ('x'[0] + Object('x')[0]) != 'xx';\n    }(1, 0));\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          if (isHostObject(value)) {\n            return object ? value : {};\n          }\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf === baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      object = toObject(object);\n      if (pathKey !== undefined && pathKey in object) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = toObject(object)[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          object = toObject(object);\n          return object[key] === value && (value !== undefined || (key in object));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : toObject(object)[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf === baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          // Safari 5 mobile incorrectly has `Object` as the constructor of typed arrays.\n          if (Ctor instanceof Ctor) {\n            Ctor = ctorByTag[tag];\n          }\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object) || isString(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      if (lodash.support.unindexedChars && isString(value)) {\n        return value.split('');\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      if (lodash.support.unindexedChars && isString(value)) {\n        var index = -1,\n            length = value.length,\n            result = Object(value);\n\n        while (++index < length) {\n          result[index] = value.charAt(index);\n        }\n        return result;\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it's only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf === baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it's invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it's invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() === baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      if (isArrayLike(collection)) {\n        collection = toIterable(collection);\n      }\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `target` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it's\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it's invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it's\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with up to three argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 3))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it's invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with up to three argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 3))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it's an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it's invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with up to\n     * three arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 which returns 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it's invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isHostObject(value) && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      if (lodash.support.ownLast) {\n        baseForIn(value, function(subValue, key, object) {\n          result = hasOwnProperty.call(object, key);\n          return false;\n        });\n        return result !== false;\n      }\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return (lodash.support.unindexedChars && isString(value))\n        ? value.split('')\n        : arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it's invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it's invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), (path + ''));\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object) || isString(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object == 'function' ? lodash.support.enumPrototypes : isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length,\n          support = lodash.support;\n\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object) || isString(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          proto = (isFunction(Ctor) && Ctor.prototype) || objectProto,\n          isProto = proto === object,\n          result = Array(length),\n          skipIndexes = length > 0,\n          skipErrorProps = support.enumErrorProps && (object === errorProto || object instanceof Error),\n          skipProto = support.enumPrototypes && isFunction(object);\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      // lodash skips the `constructor` property when it infers it's iterating\n      // over a `prototype` object because IE < 9 can't set the `[[Enumerable]]`\n      // attribute of an existing property and the `constructor` property of a\n      // prototype defaults to non-enumerable.\n      for (var key in object) {\n        if (!(skipProto && key == 'prototype') &&\n            !(skipErrorProps && (key == 'message' || key == 'name')) &&\n            !(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      if (support.nonEnumShadows && object !== objectProto) {\n        var tag = object === stringProto ? stringTag : (object === errorProto ? errorTag : objToString.call(object)),\n            nonEnums = nonEnumProps[tag] || nonEnumProps[objectTag];\n\n        if (tag == objectTag) {\n          proto = objectProto;\n        }\n        length = shadowProps.length;\n        while (length--) {\n          key = shadowProps[length];\n          var nonEnum = nonEnums[key];\n          if (!(isProto && nonEnum) &&\n              (nonEnum ? hasOwnProperty.call(object, key) : object[key] !== proto[key])) {\n            result.push(key);\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it's invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it's invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : toObject(object)[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : toObject(object)[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it's created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it's set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), (path + ''));\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it's\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it's invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it's invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var protoFunc = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          fixObjects = !support.spliceObjects && /^(?:pop|shift|splice)$/.test(methodName),\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      // Avoid array-like object bugs with `Array#shift` and `Array#splice` in\n      // IE < 9, Firefox < 10, and RingoJS.\n      var func = !fixObjects ? protoFunc : function() {\n        var result = protoFunc.apply(this, arguments);\n        if (this.length === 0) {\n          delete this[0];\n        }\n        return result;\n      };\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/~/lodash-compat/index.js\n ** module id = 89\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/util/util.js\n ** module id = 90\n ** module chunks = 0\n **/","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/util/support/isBufferBrowser.js\n ** module id = 91\n ** module chunks = 0\n **/","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/util/~/inherits/inherits_browser.js\n ** module id = 92\n ** module chunks = 0\n **/","var _ = require('./utils');\nvar qs = require('querystring');\nvar errors = module.exports;\n\nvar canCapture = (typeof Error.captureStackTrace === 'function');\nvar canStack = !!(new Error()).stack;\n\nfunction ErrorAbstract(msg, constructor, metadata) {\n  this.message = msg;\n\n  Error.call(this, this.message);\n\n  if (canCapture) {\n    Error.captureStackTrace(this, constructor);\n  }\n  else if (canStack) {\n    this.stack = (new Error()).stack;\n  }\n  else {\n    this.stack = '';\n  }\n\n  if (metadata) {\n    _.assign(this, metadata);\n\n    this.toString = function () {\n      return msg + ' :: ' + JSON.stringify(metadata);\n    };\n\n    this.toJSON = function () {\n      return _.assign({\n        msg: msg\n      }, metadata);\n    };\n  }\n}\nerrors._Abstract = ErrorAbstract;\n_.inherits(ErrorAbstract, Error);\n\n/**\n * Connection Error\n * @param {String} [msg] - An error message that will probably end up in a log.\n */\nerrors.ConnectionFault = function ConnectionFault(msg) {\n  ErrorAbstract.call(this, msg || 'Connection Failure', errors.ConnectionFault);\n};\n_.inherits(errors.ConnectionFault, ErrorAbstract);\n\n/**\n * No Living Connections\n * @param {String} [msg] - An error message that will probably end up in a log.\n */\nerrors.NoConnections = function NoConnections(msg) {\n  ErrorAbstract.call(this, msg || 'No Living connections', errors.NoConnections);\n};\n_.inherits(errors.NoConnections, ErrorAbstract);\n\n/**\n * Generic Error\n * @param {String} [msg] - An error message that will probably end up in a log.\n */\nerrors.Generic = function Generic(msg, metadata) {\n  ErrorAbstract.call(this, msg || 'Generic Error', errors.Generic, metadata);\n};\n_.inherits(errors.Generic, ErrorAbstract);\n\n/**\n * Request Timeout Error\n * @param {String} [msg] - An error message that will probably end up in a log.\n */\nerrors.RequestTimeout = function RequestTimeout(msg) {\n  ErrorAbstract.call(this, msg || 'Request Timeout', errors.RequestTimeout);\n};\n_.inherits(errors.RequestTimeout, ErrorAbstract);\n\n\n/**\n * Request Body could not be parsed\n * @param {String} [msg] - An error message that will probably end up in a log.\n */\nerrors.Serialization = function Serialization(msg) {\n  ErrorAbstract.call(this, msg || 'Unable to parse/serialize body', errors.Serialization);\n};\n_.inherits(errors.Serialization, ErrorAbstract);\n\n\n/**\n * Thrown when a browser compatability issue is detected (cough, IE, cough)\n */\nerrors.RequestTypeError = function RequestTypeError(feature) {\n  ErrorAbstract.call(this, 'Cross-domain AJAX requests ' + feature + ' are not supported', errors.RequestTypeError);\n};\n_.inherits(errors.RequestTypeError, ErrorAbstract);\n\nvar statusCodes = [\n  [ 300, 'Multiple Choices' ],\n  [ 301, 'Moved Permanently' ],\n  [ 302, 'Found' ],\n  [ 303, 'See Other' ],\n  [ 304, 'Not Modified' ],\n  [ 305, 'Use Proxy' ],\n  [ 307, 'Temporary Redirect' ],\n  [ 308, 'Permanent Redirect' ],\n  [ 400, 'Bad Request' ],\n  [ 401, 'Authentication Exception' ],\n  [ 402, 'Payment Required' ],\n  [ 403, ['Authorization Exception', 'Forbidden'] ],\n  [ 404, 'Not Found' ],\n  [ 405, 'Method Not Allowed' ],\n  [ 406, 'Not Acceptable' ],\n  [ 407, 'Proxy Authentication Required' ],\n  [ 408, 'Request Timeout' ],\n  [ 409, 'Conflict' ],\n  [ 410, 'Gone' ],\n  [ 411, 'Length Required' ],\n  [ 412, 'Precondition Failed' ],\n  [ 413, 'Request Entity Too Large' ],\n  [ 414, 'Request URIToo Long' ],\n  [ 415, 'Unsupported Media Type' ],\n  [ 416, 'Requested Range Not Satisfiable' ],\n  [ 417, 'Expectation Failed' ],\n  [ 418, 'Im ATeapot' ],\n  [ 421, 'Too Many Connections From This IP' ],\n  [ 426, 'Upgrade Required' ],\n  [ 429, 'Too Many Requests' ],\n  [ 450, 'Blocked By Windows Parental Controls' ],\n  [ 494, 'Request Header Too Large' ],\n  [ 497, 'HTTPTo HTTPS' ],\n  [ 499, 'Client Closed Request' ],\n  [ 500, 'Internal Server Error' ],\n  [ 501, 'Not Implemented' ],\n  [ 502, 'Bad Gateway' ],\n  [ 503, 'Service Unavailable' ],\n  [ 504, 'Gateway Timeout' ],\n  [ 505, 'HTTPVersion Not Supported' ],\n  [ 506, 'Variant Also Negotiates' ],\n  [ 510, 'Not Extended' ]\n];\n\n_.each(statusCodes, function createStatusCodeError(tuple) {\n  var status = tuple[0];\n  var names = tuple[1];\n  var allNames = [].concat(names, status);\n  var primaryName = allNames[0];\n  var className = _.studlyCase(primaryName);\n  allNames = _.uniq(allNames.concat(className));\n\n  function StatusCodeError(msg, metadata) {\n    this.status = status;\n    this.displayName = className;\n\n    var esErrObject = null;\n    if (_.isPlainObject(msg)) {\n      esErrObject = msg;\n      msg = null;\n    }\n\n    if (!esErrObject) {\n      // errors from es now come in two forms, an error string < 2.0 and\n      // an object >= 2.0\n      // TODO: remove after dropping support for < 2.0\n      ErrorAbstract.call(this, msg || primaryName, StatusCodeError);\n      return this;\n    }\n\n    msg = [].concat(esErrObject.root_cause || []).reduce(function (memo, cause) {\n      if (memo) memo += ' (and) ';\n\n      memo += '[' + cause.type + '] ' + cause.reason;\n\n      var extraData = _.omit(cause, ['type', 'reason']);\n      if (_.size(extraData)) {\n        memo += ', with { ' + qs.stringify(extraData, ' ', '=', {\n          encodeURIComponent: function (v) {\n            return String(v).split('\\n').join('\\\\n');\n          }\n        }) + ' }';\n      }\n\n      return memo;\n    }, '');\n\n    if (!msg) {\n      if (esErrObject.type) msg += '[' + esErrObject.type + '] ';\n      if (esErrObject.reason) msg += esErrObject.reason;\n    }\n\n    ErrorAbstract.call(this, msg || primaryName, StatusCodeError, metadata);\n    return this;\n  }\n  _.inherits(StatusCodeError, ErrorAbstract);\n\n  allNames.forEach(function (name) {\n    errors[name] = StatusCodeError;\n  });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/errors.js\n ** module id = 93\n ** module chunks = 0\n **/","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/querystring-es3/index.js\n ** module id = 94\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/querystring-es3/decode.js\n ** module id = 95\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/querystring-es3/encode.js\n ** module id = 96\n ** module chunks = 0\n **/","/**\n * Class to wrap URLS, formatting them and maintaining their separate details\n * @type {[type]}\n */\nmodule.exports = Host;\n\nvar url = require('url');\nvar qs = require('querystring');\nvar _ = require('./utils');\n\nvar startsWithProtocolRE = /^([a-z]+:)?\\/\\//;\nvar defaultProto = 'http:';\nvar btoa;\n\nif (typeof window !== 'undefined' && typeof window.location !== 'undefined') {\n  defaultProto = window.location.protocol;\n  btoa = window.btoa;\n}\n\nbtoa = btoa || function (data) {\n  return (new Buffer(data, 'utf8')).toString('base64');\n};\n\nvar urlParseFields = [\n  'protocol', 'hostname', 'pathname', 'port', 'auth', 'query'\n];\n\nvar simplify = ['host', 'path'];\n\nvar sslDefaults = {\n  pfx: null,\n  key: null,\n  passphrase: null,\n  cert: null,\n  ca: null,\n  ciphers: null,\n  rejectUnauthorized: false,\n  secureProtocol: null\n};\n\n// simple reference used when formatting as a url\n// and defines when parsing from a string\nHost.defaultPorts = {\n  http: 80,\n  https: 443\n};\n\nfunction Host(config, globalConfig) {\n  config = _.clone(config || {});\n  globalConfig = globalConfig || {};\n\n  // defaults\n  this.protocol = 'http';\n  this.host = 'localhost';\n  this.path = '';\n  this.port = 9200;\n  this.query = null;\n  this.headers = null;\n  this.suggestCompression = !!globalConfig.suggestCompression;\n\n  this.ssl = _.defaults({}, config.ssl || {}, globalConfig.ssl || {}, sslDefaults);\n\n  if (typeof config === 'string') {\n    var firstColon = config.indexOf(':');\n    var firstSlash = config.indexOf('/');\n    var noSlash = firstSlash === -1;\n    var portNoPath = firstColon > -1 && noSlash;\n    var portWithPath = !portNoPath && firstColon < firstSlash;\n    if ((noSlash || portNoPath || portWithPath) && !startsWithProtocolRE.test(config)) {\n      config = defaultProto + '//' + config;\n    }\n    config = _.pick(url.parse(config, false, true), urlParseFields);\n    // default logic for the port is to use 9200 for the default. When a string is specified though,\n    // we will use the default from the protocol of the string.\n    if (!config.port) {\n      var proto = config.protocol || 'http';\n      if (proto.charAt(proto.length - 1) === ':') {\n        proto = proto.substring(0, proto.length - 1);\n      }\n      if (Host.defaultPorts[proto]) {\n        config.port = Host.defaultPorts[proto];\n      }\n    }\n  }\n\n  if (_.isObject(config)) {\n    // move hostname/portname to host/port semi-intelligently.\n    _.each(simplify, function (to) {\n      var from = to + 'name';\n      if (config[from] && config[to]) {\n        if (config[to].indexOf(config[from]) === 0) {\n          config[to] = config[from];\n        }\n      } else if (config[from]) {\n        config[to] = config[from];\n      }\n      delete config[from];\n    });\n  } else {\n    config = {};\n  }\n\n  if (config.auth) {\n    config.headers = config.headers || {};\n    config.headers.Authorization = 'Basic ' + btoa(config.auth);\n    delete config.auth;\n  }\n\n  _.forOwn(config, function (val, prop) {\n    if (val != null) this[prop] = _.clone(val);\n  }, this);\n\n  // make sure the query string is parsed\n  if (this.query === null) {\n    // majority case\n    this.query = {};\n  } else if (!_.isPlainObject(this.query)) {\n    this.query = qs.parse(this.query);\n  }\n\n  // make sure that the port is a number\n  if (_.isNumeric(this.port)) {\n    this.port = parseInt(this.port, 10);\n  } else {\n    this.port = 9200;\n  }\n\n  // make sure the path starts with a leading slash\n  if (this.path === '/') {\n    this.path = '';\n  } else if (this.path && this.path.charAt(0) !== '/') {\n    this.path = '/' + (this.path || '');\n  }\n\n  // strip trailing ':' on the protocol (when config comes from url.parse)\n  if (this.protocol.substr(-1) === ':') {\n    this.protocol = this.protocol.substring(0, this.protocol.length - 1);\n  }\n}\n\nHost.prototype.makeUrl = function (params) {\n  params = params || {};\n  // build the port\n  var port = '';\n  if (this.port !== Host.defaultPorts[this.protocol]) {\n    // add an actual port\n    port = ':' + this.port;\n  }\n\n  // build the path\n  var path = '' + (this.path || '') + (params.path || '');\n\n  // if path doesn't start with '/' add it.\n  if (path.charAt(0) !== '/') {\n    path = '/' + path;\n  }\n\n  // build the query string\n  var query = qs.stringify(this.getQuery(params.query));\n\n  if (this.host) {\n    return this.protocol + '://' + this.host + port + path + (query ? '?' + query : '');\n  } else {\n    return path + (query ? '?' + query : '');\n  }\n};\n\nfunction objectPropertyGetter(prop, preOverride) {\n  return function (overrides) {\n    if (preOverride) {\n      overrides = preOverride.call(this, overrides);\n    }\n\n    var obj = this[prop];\n    if (!obj && !overrides) {\n      return null;\n    }\n\n    if (overrides) {\n      obj = _.assign({}, obj, overrides);\n    }\n\n    return _.size(obj) ? obj : null;\n  };\n}\n\nHost.prototype.getHeaders = objectPropertyGetter('headers', function (overrides) {\n  if (!this.suggestCompression) {\n    return overrides;\n  }\n\n  return _.defaults(overrides || {}, {\n    'Accept-Encoding': 'gzip,deflate'\n  });\n});\n\nHost.prototype.getQuery = objectPropertyGetter('query', function (query) {\n  return typeof query === 'string' ? qs.parse(query) : query;\n});\n\nHost.prototype.toString = function () {\n  return this.makeUrl();\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/host.js\n ** module id = 97\n ** module chunks = 0\n **/","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/~/promise/lib/es6-extensions.js\n ** module id = 98\n ** module chunks = 0\n **/","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/~/promise/lib/core.js\n ** module id = 99\n ** module chunks = 0\n **/","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\nvar BrowserMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/~/promise/~/asap/browser-raw.js\n ** module id = 100\n ** module chunks = 0\n **/","var _ = require('../utils');\n\n\n/**\n * Patch the transport's connection pool to schedule a sniff after a connection fails.\n * When a connection fails for the first time it will schedule a sniff 1 second in the\n * future, and increase the timeout based on the deadTimeout algorithm chosen by the\n * connectionPool, and the number of times the sniff has failed.\n *\n * @param  {Transport} transport - the transport that will be using this behavior\n * @return {undefined}\n */\nmodule.exports = function setupSniffOnConnectionFault(transport) {\n  var failures = 0;\n  var pool = transport.connectionPool;\n  var originalOnDied = pool._onConnectionDied;\n\n  // do the actual sniff, if the sniff is unable to\n  // connect to a node this function will be called again by the connectionPool\n  var work = function () {\n    work.timerId = transport._timeout(work.timerId);\n    transport.sniff();\n  };\n\n  // create a function that will count down to a\n  // point n milliseconds into the future\n  var countdownTo = function (ms) {\n    var start = _.now();\n    return function () {\n      return start - ms;\n    };\n  };\n\n  // overwrite the function, but still call it\n  pool._onConnectionDied = function (connection, wasAlreadyDead) {\n    var ret = originalOnDied.call(pool, connection, wasAlreadyDead);\n\n    // clear the failures if this is the first failure we have seen\n    failures = work.timerId ? failures + 1 : 0;\n\n    var ms = pool.calcDeadTimeout(failures, 1000);\n\n    if (work.timerId && ms < work.timerId && work.countdown()) {\n      // clear the timer\n      work.timerId = transport._timeout(work.timerId);\n    }\n\n    if (!work.timerId) {\n      work.timerId = transport._timeout(work, ms);\n      work.countdown = countdownTo(ms);\n    }\n\n    return ret;\n  };\n\n  pool._onConnectionDied.restore = function () {\n    pool._onConnectionDied = originalOnDied;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/transport/sniff_on_connection_fault.js\n ** module id = 101\n ** module chunks = 0\n **/","var isEmpty = require('lodash').isEmpty;\n\nmodule.exports = function (hosts) {\n  if (isEmpty(hosts)) return false;\n\n  var commonProtocol = hosts.shift().protocol;\n  for (var i = 0; i < hosts.length; i++) {\n    if (commonProtocol !== hosts[i].protocol) {\n      return false;\n    }\n  }\n\n  return commonProtocol;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/transport/find_common_protocol.js\n ** module id = 102\n ** module chunks = 0\n **/","var _ = require('./utils');\nvar url = require('url');\nvar EventEmitter = require('events').EventEmitter;\n\n/**\n * Log bridge, which is an [EventEmitter](http://nodejs.org/api/events.html#events_class_events_eventemitter)\n * that sends events to one or more outputs/loggers. Setup these loggers by\n * specifying their config as the first argument, or by passing it to addOutput().\n *\n * @class Log\n * @uses Loggers.Stdio\n * @constructor\n * @param {object} config\n * @param {string|Object|ArrayOfStrings|ArrayOfObjects} config.log - Either the level\n *  to setup a single logger, a full config object for a logger, or an array of\n *  config objects to use for creating log outputs.\n * @param {string|array} config.log.level|config.log.levels - One or more keys in Log.levels (error, warning, etc.)\n * @param {string} config.log.type - The name of the logger to use for this output\n */\nfunction Log(config) {\n  config = config || {};\n  if (!config.log) return;\n\n  var i;\n  var outputs;\n\n  if (_.isArrayOfStrings(config.log)) {\n    outputs = [{\n      levels: config.log\n    }];\n  } else {\n    outputs = _.createArray(config.log, function (val) {\n      if (_.isPlainObject(val)) {\n        return val;\n      }\n      if (typeof val === 'string') {\n        return {\n          level: val\n        };\n      }\n    });\n  }\n\n  if (!outputs) {\n    throw new TypeError('Invalid logging output config. Expected either a log level, array of log levels, ' +\n      'a logger config object, or an array of logger config objects.');\n  }\n\n  for (i = 0; i < outputs.length; i++) {\n    this.addOutput(outputs[i]);\n  }\n}\n_.inherits(Log, EventEmitter);\n\nLog.loggers = require('./loggers');\n\nLog.prototype.close = function () {\n  this.emit('closing');\n  if (this.listenerCount()) {\n    console.error('Something is still listening for log events, but the logger is closing.'); // eslint-disable-line no-console\n    this.clearAllListeners();\n  }\n};\n\nif (EventEmitter.prototype.listenerCount) {\n  // If the event emitter implements it's own listenerCount method\n  // we don't need to (newer nodes do this).\n  Log.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n}\nelse if (EventEmitter.listenerCount) {\n  // some versions of node expose EventEmitter::listenerCount\n  // which is more efficient the getting all listeners of a\n  // specific type\n  Log.prototype.listenerCount = function (event) {\n    return EventEmitter.listenerCount(this, event);\n  };\n}\nelse {\n  // all other versions of node expose a #listeners() method, which returns\n  // and array we have to count\n  Log.prototype.listenerCount = function (event) {\n    return this.listeners(event).length;\n  };\n}\n\n/**\n * Levels observed by the loggers, ordered by rank\n *\n * @property levels\n * @type Array\n * @static\n */\nLog.levels = [\n  /**\n   * Event fired for error level log entries\n   * @event error\n   * @param {Error} error - The error object to log\n   */\n  'error',\n  /**\n   * Event fired for \"warning\" level log entries, which usually represent things\n   * like correctly formatted error responses from ES (400, ...) and recoverable\n   * errors (one node unresponsive)\n   *\n   * @event warning\n   * @param {String} message - A message to be logged\n   */\n  'warning',\n  /**\n   * Event fired for \"info\" level log entries, which usually describe what a\n   * client is doing (sniffing etc)\n   *\n   * @event info\n   * @param {String} message - A message to be logged\n   */\n  'info',\n  /**\n   * Event fired for \"debug\" level log entries, which will describe requests sent,\n   * including their url (no data, response codes, or exec times)\n   *\n   * @event debug\n   * @param {String} message - A message to be logged\n   */\n  'debug',\n  /**\n   * Event fired for \"trace\" level log entries, which provide detailed information\n   * about each request made from a client, including reponse codes, execution times,\n   * and a full curl command that can be copied and pasted into a terminal\n   *\n   * @event trace\n   * @param {String} method method, , body, responseStatus, responseBody\n   * @param {String} url - The url the request was made to\n   * @param {String} body - The body of the request\n   * @param {Integer} responseStatus - The status code returned from the response\n   * @param {String} responseBody - The body of the response\n   */\n  'trace'\n];\n\n/**\n * Converts a log config value (string or array) to an array of level names which\n * it represents\n *\n * @method parseLevels\n * @static\n * @private\n * @param  {String|ArrayOfStrings} input - Cound be a string to specify the max\n *   level, or an array of exact levels\n * @return {Array} -\n */\nLog.parseLevels = function (input) {\n  switch (typeof input) {\n  case 'string':\n    var i = _.indexOf(Log.levels, input);\n    if (i >= 0) {\n      return Log.levels.slice(0, i + 1);\n    }\n    /* fall through */\n  case 'object':\n    if (_.isArray(input)) {\n      var valid = _.intersection(input, Log.levels);\n      if (valid.length === input.length) {\n        return valid;\n      }\n    }\n    /* fall through */\n  default:\n    throw new TypeError('invalid logging level ' + input + '. Expected zero or more of these options: ' +\n      Log.levels.join(', '));\n  }\n};\n\n/**\n * Combine the array-like param into a simple string\n *\n * @method join\n * @static\n * @private\n * @param  {*} arrayish - An array like object that can be itterated by _.each\n * @return {String} - The final string.\n */\nLog.join = function (arrayish) {\n  return _.map(arrayish, function (item) {\n    if (_.isPlainObject(item)) {\n      return _.inspect(item) + '\\n';\n    } else {\n      return item.toString();\n    }\n  }).join(' ');\n};\n\n/**\n * Create a new logger, based on the config.\n *\n * @method addOutput\n * @param {object} config - An object with config options for the logger.\n * @param {String} [config.type=stdio] - The name of an output/logger. Options\n *   can be found in the `src/loggers` directory.\n * @param {String|ArrayOfStrings} [config.level|config.levels=warning] - The levels to output\n *   to this logger, when an array is specified no levels other than the ones\n *   specified will be listened to. When a string is specified, that and all lower\n *   levels will be logged.\n * @return {Logger}\n */\nLog.prototype.addOutput = function (config) {\n  config = config || {};\n\n  // force \"levels\" key\n  config.levels = Log.parseLevels(config.levels || config.level || 'warning');\n  delete config.level;\n\n  var Logger = _.funcEnum(config, 'type', Log.loggers, process.browser ? 'console' : 'stdio');\n  return new Logger(this, config);\n};\n\n/**\n * Log an error\n *\n * @method error\n * @param  {Error|String} error  The Error to log\n * @return {Boolean} - True if any outputs accepted the message\n */\nLog.prototype.error = function (e) {\n  if (this.listenerCount('error')) {\n    return this.emit('error', e instanceof Error ? e : new Error(e));\n  }\n};\n\n\n/**\n * Log a warning message\n *\n * @method warning\n * @param  {*} msg* - Any amount of messages that will be joined before logged\n * @return {Boolean} - True if any outputs accepted the message\n */\nLog.prototype.warning = function (/* ...msg */) {\n  if (this.listenerCount('warning')) {\n    return this.emit('warning', Log.join(arguments));\n  }\n};\n\n\n/**\n * Log useful info about what's going on\n *\n * @method info\n * @param  {*} msg* - Any amount of messages that will be joined before logged\n * @return {Boolean} - True if any outputs accepted the message\n */\nLog.prototype.info = function (/* ...msg */) {\n  if (this.listenerCount('info')) {\n    return this.emit('info', Log.join(arguments));\n  }\n};\n\n/**\n * Log a debug level message\n *\n * @method debug\n * @param  {*} msg* - Any amount of messages that will be joined before logged\n * @return {Boolean} - True if any outputs accepted the message\n */\nLog.prototype.debug = function (/* ...msg */) {\n  if (this.listenerCount('debug')) {\n    return this.emit('debug', Log.join(arguments));\n  }\n};\n\n/**\n * Log a trace level message\n *\n * @method trace\n * @param {String} method - HTTP request method\n * @param {String|Object} requestUrl - URL requested. If the value is an object,\n *   it is expected to be the return value of Node's url.parse()\n * @param {String} body - The request's body\n * @param {String} responseBody - body returned from ES\n * @param {String} responseStatus - HTTP status code\n * @return {Boolean} - True if any outputs accepted the message\n */\nLog.prototype.trace = function (method, requestUrl, body, responseBody, responseStatus) {\n  if (this.listenerCount('trace')) {\n    return this.emit('trace', Log.normalizeTraceArgs(method, requestUrl, body, responseBody, responseStatus));\n  }\n};\n\nLog.normalizeTraceArgs = function (method, requestUrl, body, responseBody, responseStatus) {\n  if (typeof requestUrl === 'string') {\n    requestUrl = url.parse(requestUrl, true, true);\n  } else {\n    requestUrl = _.clone(requestUrl);\n    if (requestUrl.path) {\n      requestUrl.query = url.parse(requestUrl.path, true, false).query;\n    }\n    if (!requestUrl.pathname && requestUrl.path) {\n      requestUrl.pathname = requestUrl.path.split('?').shift();\n    }\n  }\n\n  delete requestUrl.auth;\n\n  return {\n    method: method,\n    url: url.format(requestUrl),\n    body: body,\n    status: responseStatus,\n    response: responseBody\n  };\n};\n\nmodule.exports = Log;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/log.js\n ** module id = 103\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/events/events.js\n ** module id = 104\n ** module chunks = 0\n **/","module.exports = {\n  console: require('./console')\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/loggers/browser_index.js\n ** module id = 105\n ** module chunks = 0\n **/","/**\n * Special version of the Stream logger, which logs errors and warnings to stderr and all other\n * levels to stdout.\n *\n * @class Loggers.Console\n * @extends LoggerAbstract\n * @constructor\n * @param {Object} config - The configuration for the Logger\n * @param {string} config.level - The highest log level for this logger to output.\n * @param {Log} bridge - The object that triggers logging events, which we will record\n */\n\nmodule.exports = Console;\n\nvar LoggerAbstract = require('../logger');\nvar _ = require('../utils');\n\nfunction Console(log, config) {\n  LoggerAbstract.call(this, log, config);\n\n  // config/state\n  this.color = _.has(config, 'color') ? !!config.color : true;\n}\n_.inherits(Console, LoggerAbstract);\n\n/**\n * Override the LoggerAbstract's setup listeners to do a little extra setup\n *\n * @param  {Array} levels - The levels that we should be listeneing for\n */\nConsole.prototype.setupListeners = function (levels) {\n  // call the super method\n  LoggerAbstract.prototype.setupListeners.call(this, levels);\n};\n\nConsole.prototype.write = function (label, message, to) {\n  if (console[to]) {\n    console[to](this.format(label, message));\n  }\n};\n\n/**\n * Handler for the bridges \"error\" event\n *\n * @method onError\n * @private\n * @param  {Error} e - The Error object to log\n * @return {undefined}\n */\nConsole.prototype.onError = _.handler(function (e) {\n  var to = console.error ? 'error' : 'log';\n  this.write(e.name === 'Error' ? 'ERROR' : e.name, e.stack || e.message, to);\n});\n\n/**\n * Handler for the bridges \"warning\" event\n *\n * @method onWarning\n * @private\n * @param  {String} msg - The message to be logged\n * @return {undefined}\n */\nConsole.prototype.onWarning = _.handler(function (msg) {\n  this.write('WARNING', msg, console.warn ? 'warn' : 'log');\n});\n\n/**\n * Handler for the bridges \"info\" event\n *\n * @method onInfo\n * @private\n * @param  {String} msg - The message to be logged\n * @return {undefined}\n */\nConsole.prototype.onInfo = _.handler(function (msg) {\n  this.write('INFO', msg, console.info ? 'info' : 'log');\n});\n\n/**\n * Handler for the bridges \"debug\" event\n *\n * @method onDebug\n * @private\n * @param  {String} msg - The message to be logged\n * @return {undefined}\n */\nConsole.prototype.onDebug = _.handler(function (msg) {\n  this.write('DEBUG', msg, console.debug ? 'debug' : 'log');\n});\n/**\n * Handler for the bridges \"trace\" event\n *\n * @method onTrace\n * @private\n * @return {undefined}\n */\nConsole.prototype.onTrace = _.handler(function (msg) {\n  this.write('TRACE', this._formatTraceMessage(msg), 'log');\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/loggers/console.js\n ** module id = 106\n ** module chunks = 0\n **/","var _ = require('./utils');\n\n/**\n * Abstract class providing common functionality to loggers\n * @param {[type]} log [description]\n * @param {[type]} config [description]\n */\nfunction LoggerAbstract(log, config) {\n  this.log = log;\n  this.listeningLevels = [];\n\n  _.makeBoundMethods(this);\n\n  // when the log closes, remove our event listeners\n  this.log.once('closing', this.bound.cleanUpListeners);\n\n  this.setupListeners(config.levels);\n}\n\nfunction padNumToTen(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n/**\n * Create a timestamp string used in the format function. Defers to Log.timestamp if it is defined,\n * Also, feel free to override this at the logger level.\n * @return {String} - Timestamp in ISO 8601 UTC\n */\nLoggerAbstract.prototype.timestamp = function () {\n  var d = new Date();\n  return d.getUTCFullYear() + '-' +\n    padNumToTen(d.getUTCMonth() + 1) + '-' +\n    padNumToTen(d.getUTCDate()) + 'T' +\n    padNumToTen(d.getUTCHours()) + ':' +\n    padNumToTen(d.getUTCMinutes()) + ':' +\n    padNumToTen(d.getUTCSeconds()) + 'Z';\n};\n\nfunction indent(text, spaces) {\n  var space = _.repeat(' ', spaces || 2);\n  return (text || '').split(/\\r?\\n/).map(function (line) {\n    return space + line;\n  }).join('\\n');\n}\n\nLoggerAbstract.prototype.format = function (label, message) {\n  return label + ': ' + this.timestamp() + '\\n' + indent(message) + '\\n\\n';\n};\n\nLoggerAbstract.prototype.write = function () {\n  throw new Error('This should be overwritten by the logger');\n};\n\n/**\n * Clear the current event listeners and then re-listen for events based on the level specified\n *\n * @method setupListeners\n * @private\n * @param  {Integer} level - The max log level that this logger should listen to\n * @return {undefined}\n */\nLoggerAbstract.prototype.setupListeners = function (levels) {\n  this.cleanUpListeners();\n\n  this.listeningLevels = [];\n\n  _.each(levels, function (level) {\n    var fnName = 'on' + _.ucfirst(level);\n    if (this.bound[fnName]) {\n      this.listeningLevels.push(level);\n      this.log.on(level, this.bound[fnName]);\n    } else {\n      throw new Error('Unable to listen for level \"' + level + '\"');\n    }\n  }, this);\n};\n\n/**\n * Clear the current event listeners\n *\n * @method cleanUpListeners\n * @private\n * @return {undefined}\n */\nLoggerAbstract.prototype.cleanUpListeners = _.handler(function () {\n  _.each(this.listeningLevels, function (level) {\n    this.log.removeListener(level, this.bound['on' + _.ucfirst(level)]);\n  }, this);\n});\n\n/**\n * Handler for the logs \"error\" event\n *\n * @method onError\n * @private\n * @param  {Error} e - The Error object to log\n * @return {undefined}\n */\nLoggerAbstract.prototype.onError = _.handler(function (e) {\n  this.write((e.name === 'Error' ? 'ERROR' : e.name), e.stack);\n});\n\n/**\n * Handler for the logs \"warning\" event\n *\n * @method onWarning\n * @private\n * @param  {String} msg - The message to be logged\n * @return {undefined}\n */\nLoggerAbstract.prototype.onWarning = _.handler(function (msg) {\n  this.write('WARNING', msg);\n});\n\n/**\n * Handler for the logs \"info\" event\n *\n * @method onInfo\n * @private\n * @param  {String} msg - The message to be logged\n * @return {undefined}\n */\nLoggerAbstract.prototype.onInfo = _.handler(function (msg) {\n  this.write('INFO', msg);\n});\n\n/**\n * Handler for the logs \"debug\" event\n *\n * @method onDebug\n * @private\n * @param  {String} msg - The message to be logged\n * @return {undefined}\n */\nLoggerAbstract.prototype.onDebug = _.handler(function (msg) {\n  this.write('DEBUG', msg);\n});\n\n/**\n * Handler for the logs \"trace\" event\n *\n * @method onTrace\n * @private\n * @param  {String} msg - The message to be logged\n * @return {undefined}\n */\nLoggerAbstract.prototype.onTrace = _.handler(function (requestDetails) {\n  this.write('TRACE', this._formatTraceMessage(requestDetails));\n});\n\nLoggerAbstract.prototype._formatTraceMessage = function (req) {\n  return '-> ' + req.method + ' ' + req.url + '\\n' +\n    this._prettyJson(req.body) + '\\n' +\n    '<- ' + req.status + '\\n' +\n    this._prettyJson(req.response);\n/*\n-> GET https://sldfkjsdlfksjdf:9200/slsdkfjlxckvxhclks?sdlkj=sdlfkje\n{\n  asdflksjdf\n}\n\n<- 502\n{\n  sldfksjdlf\n}\n*/\n};\n\nLoggerAbstract.prototype._prettyJson = function (body) {\n  try {\n    if (typeof body === 'string') {\n      body = JSON.parse(body);\n    }\n    return JSON.stringify(body, null, '  ').replace(/'/g, '\\\\u0027');\n  } catch (e) {\n    return typeof body === 'string' ? body : '';\n  }\n};\n\nmodule.exports = LoggerAbstract;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/logger.js\n ** module id = 107\n ** module chunks = 0\n **/","/**\n * Manager of connections to a node(s), capable of ensuring that connections are clear and living\n * before providing them to the application\n *\n * @class ConnectionPool\n * @constructor\n * @param {Object} config - The config object passed to the transport.\n */\n\nmodule.exports = ConnectionPool;\n\nvar _ = require('./utils');\nvar Log = require('./log');\n\nfunction ConnectionPool(config) {\n  config = config || {};\n  _.makeBoundMethods(this);\n\n  if (!config.log) {\n    this.log = new Log();\n    config.log = this.log;\n  } else {\n    this.log = config.log;\n  }\n\n  // we will need this when we create connections down the road\n  this._config = config;\n\n  // get the selector config var\n  this.selector = _.funcEnum(config, 'selector', ConnectionPool.selectors, ConnectionPool.defaultSelector);\n\n  // get the connection class\n  this.Connection = _.funcEnum(config, 'connectionClass', ConnectionPool.connectionClasses,\n    ConnectionPool.defaultConnectionClass);\n\n  // time that connections will wait before being revived\n  this.deadTimeout = config.hasOwnProperty('deadTimeout') ? config.deadTimeout : 60000;\n  this.maxDeadTimeout = config.hasOwnProperty('maxDeadTimeout') ? config.maxDeadTimeout : 18e5;\n  this.calcDeadTimeout = _.funcEnum(config, 'calcDeadTimeout', ConnectionPool.calcDeadTimeoutOptions, 'exponential');\n\n  // a map of connections to their \"id\" property, used when sniffing\n  this.index = {};\n\n  this._conns = {\n    alive: [],\n    dead: []\n  };\n\n  // information about timeouts for dead connections\n  this._timeouts = [];\n}\n\n// selector options\nConnectionPool.selectors = require('./selectors');\nConnectionPool.defaultSelector = 'roundRobin';\n\n// get the connection options\nConnectionPool.connectionClasses = require('./connectors');\nConnectionPool.defaultConnectionClass = ConnectionPool.connectionClasses._default;\ndelete ConnectionPool.connectionClasses._default;\n\n// the function that calculates timeouts based on attempts\nConnectionPool.calcDeadTimeoutOptions = {\n  flat: function (attempt, baseTimeout) {\n    return baseTimeout;\n  },\n  exponential: function (attempt, baseTimeout) {\n    return Math.min(baseTimeout * 2 * Math.pow(2, (attempt * 0.5 - 1)), this.maxDeadTimeout);\n  }\n};\n\n/**\n * Selects a connection from the list using the this.selector\n * Features:\n *  - detects if the selector is async or not\n *  - sync selectors should still return asynchronously\n *  - catches errors in sync selectors\n *  - automatically selects the first dead connection when there no living connections\n *\n * @param  {Function} cb [description]\n * @return {[type]}      [description]\n */\nConnectionPool.prototype.select = function (cb) {\n  if (this._conns.alive.length) {\n    if (this.selector.length > 1) {\n      this.selector(this._conns.alive, cb);\n    } else {\n      try {\n        _.nextTick(cb, void 0, this.selector(this._conns.alive));\n      } catch (e) {\n        cb(e);\n      }\n    }\n  } else if (this._timeouts.length) {\n    this._selectDeadConnection(cb);\n  } else {\n    _.nextTick(cb, void 0);\n  }\n};\n\n/**\n * Handler for the \"set status\" event emitted but the connections. It will move\n * the connection to it's proper connection list (unless it was closed).\n *\n * @param  {String} status - the connection's new status\n * @param  {String} oldStatus - the connection's old status\n * @param  {ConnectionAbstract} connection - the connection object itself\n */\nConnectionPool.prototype.onStatusSet = _.handler(function (status, oldStatus, connection) {\n  var index;\n\n  var died = (status === 'dead');\n  var wasAlreadyDead = (died && oldStatus === 'dead');\n  var revived = (!died && oldStatus === 'dead');\n  var noChange = (oldStatus === status);\n  var from = this._conns[oldStatus];\n  var to = this._conns[status];\n\n  if (noChange && !died) {\n    return true;\n  }\n\n  if (from !== to) {\n    if (_.isArray(from)) {\n      index = from.indexOf(connection);\n      if (index !== -1) {\n        from.splice(index, 1);\n      }\n    }\n\n    if (_.isArray(to)) {\n      index = to.indexOf(connection);\n      if (index === -1) {\n        to.push(connection);\n      }\n    }\n  }\n\n  if (died) {\n    this._onConnectionDied(connection, wasAlreadyDead);\n  }\n\n  if (revived) {\n    this._onConnectionRevived(connection);\n  }\n});\n\n/**\n * Handler used to clear the times created when a connection dies\n * @param  {ConnectionAbstract} connection\n */\nConnectionPool.prototype._onConnectionRevived = function (connection) {\n  var timeout;\n  for (var i = 0; i < this._timeouts.length; i++)  {\n    if (this._timeouts[i].conn === connection) {\n      timeout = this._timeouts[i];\n      if (timeout.id) {\n        clearTimeout(timeout.id);\n      }\n      this._timeouts.splice(i, 1);\n      break;\n    }\n  }\n};\n\n/**\n * Handler used to update or create a timeout for the connection which has died\n * @param  {ConnectionAbstract} connection\n * @param  {Boolean} alreadyWasDead - If the connection was preivously dead this must be set to true\n */\nConnectionPool.prototype._onConnectionDied = function (connection, alreadyWasDead) {\n  var timeout;\n  if (alreadyWasDead) {\n    for (var i = 0; i < this._timeouts.length; i++)  {\n      if (this._timeouts[i].conn === connection) {\n        timeout = this._timeouts[i];\n        break;\n      }\n    }\n  } else {\n    timeout = {\n      conn: connection,\n      attempt: 0,\n      revive: function (cb) {\n        timeout.attempt++;\n        connection.ping(function (err) {\n          connection.setStatus(err ? 'dead' : 'alive');\n          if (cb && typeof cb === 'function') {\n            cb(err);\n          }\n        });\n      }\n    };\n    this._timeouts.push(timeout);\n  }\n\n  if (timeout.id) {\n    clearTimeout(timeout.id);\n  }\n\n  var ms = this.calcDeadTimeout(timeout.attempt, this.deadTimeout);\n  timeout.id = setTimeout(timeout.revive, ms);\n  timeout.runAt = _.now() + ms;\n};\n\nConnectionPool.prototype._selectDeadConnection = function (cb) {\n  var orderedTimeouts = _.sortBy(this._timeouts, 'runAt');\n  var log = this.log;\n\n  process.nextTick(function next() {\n    var timeout = orderedTimeouts.shift();\n    if (!timeout) {\n      cb(void 0);\n      return;\n    }\n\n    if (!timeout.conn) {\n      next();\n      return;\n    }\n\n    if (timeout.conn.status === 'dead') {\n      timeout.revive(function (err) {\n        if (err) {\n          log.warning('Unable to revive connection: ' + timeout.conn.id);\n          process.nextTick(next);\n        } else {\n          cb(void 0, timeout.conn);\n        }\n      });\n    } else {\n      cb(void 0, timeout.conn);\n    }\n  });\n};\n\n/**\n * Returns a random list of nodes from the living connections up to the limit.\n * If there are no living connections it will fall back to the dead connections.\n * If there are no dead connections it will return nothing.\n *\n * This is used for testing (when we just want the one existing node)\n * and sniffing, where using the selector to get all of the living connections\n * is not reasonable.\n *\n * @param {string} [status] - optional status of the connection to fetch\n * @param {Number} [limit] - optional limit on the number of connections to return\n */\nConnectionPool.prototype.getConnections = function (status, limit) {\n  var list;\n  if (status) {\n    list = this._conns[status];\n  } else {\n    list = this._conns[this._conns.alive.length ? 'alive' : 'dead'];\n  }\n\n  if (limit == null) {\n    return list.slice(0);\n  } else {\n    return _.shuffle(list).slice(0, limit);\n  }\n};\n\n/**\n * Add a single connection to the pool and change it's status to \"alive\".\n * The connection should inherit from ConnectionAbstract\n *\n * @param {ConnectionAbstract} connection - The connection to add\n */\nConnectionPool.prototype.addConnection = function (connection) {\n  if (!connection.id) {\n    connection.id = connection.host.toString();\n  }\n\n  if (!this.index[connection.id]) {\n    this.log.info('Adding connection to', connection.id);\n    this.index[connection.id] = connection;\n    connection.on('status set', this.bound.onStatusSet);\n    connection.setStatus('alive');\n  }\n};\n\n/**\n * Remove a connection from the pool, and set it's status to \"closed\".\n *\n * @param  {ConnectionAbstract} connection - The connection to remove/close\n */\nConnectionPool.prototype.removeConnection = function (connection) {\n  if (!connection.id) {\n    connection.id = connection.host.toString();\n  }\n\n  if (this.index[connection.id]) {\n    delete this.index[connection.id];\n    connection.setStatus('closed');\n    connection.removeListener('status set', this.bound.onStatusSet);\n  }\n};\n\n/**\n * Override the internal node list. All connections that are not in the new host\n * list are closed and removed. Non-unique hosts are ignored.\n *\n * @param {Host[]} hosts - An array of Host instances.\n */\nConnectionPool.prototype.setHosts = function (hosts) {\n  var connection;\n  var i;\n  var id;\n  var host;\n  var toRemove = _.clone(this.index);\n\n  for (i = 0; i < hosts.length; i++) {\n    host = hosts[i];\n    id = host.toString();\n    if (this.index[id]) {\n      delete toRemove[id];\n    } else {\n      connection = new this.Connection(host, this._config);\n      connection.id = id;\n      this.addConnection(connection);\n    }\n  }\n\n  var removeIds = _.keys(toRemove);\n  for (i = 0; i < removeIds.length; i++) {\n    this.removeConnection(this.index[removeIds[i]]);\n  }\n};\n\nConnectionPool.prototype.getAllHosts = function () {\n  return _.values(this.index).map(function (connection) {\n    return connection.host;\n  });\n};\n\n/**\n * Close the conncetion pool, as well as all of it's connections\n */\nConnectionPool.prototype.close = function () {\n  this.setHosts([]);\n};\nConnectionPool.prototype.empty = ConnectionPool.prototype.close;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/connection_pool.js\n ** module id = 108\n ** module chunks = 0\n **/","module.exports = {\n  random: require('./random'),\n  roundRobin: require('./round_robin')\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/selectors/index.js\n ** module id = 109\n ** module chunks = 0\n **/","/**\n * Selects a connection randomly\n *\n * @module selectors\n * @type {Function}\n * @param {Array} connection - The list of connections to choose from\n * @return {Connection} - The selected connection\n */\nmodule.exports = function RandomSelector(connections) {\n  return connections[Math.floor(Math.random() * connections.length)];\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/selectors/random.js\n ** module id = 110\n ** module chunks = 0\n **/","/**\n * Selects a connection the simplest way possible, Round Robin\n *\n * @module selectors\n * @type {Function}\n * @param {Array} connections - The list of connections that this selector needs to choose from\n * @return {Connection} - The selected connection\n */\nmodule.exports = function (connections) {\n  var connection = connections[0];\n  connections.push(connections.shift());\n  return connection;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/selectors/round_robin.js\n ** module id = 111\n ** module chunks = 0\n **/","var opts = {\n  xhr: require('./xhr'),\n  jquery: require('./jquery'),\n  angular: require('./angular')\n};\nvar _ = require('../utils');\n\n// remove modules that have been ignored by browserify\n_.each(opts, function (conn, name) {\n  if (typeof conn !== 'function') {\n    delete opts[name];\n  }\n});\n\n// custom _default specification\nif (opts.xhr) {\n  opts._default = 'xhr';\n} else if (opts.angular) {\n  opts._default = 'angular';\n} else {\n  opts._default = 'jquery';\n}\n\nmodule.exports = opts;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/connectors/browser_index.js\n ** module id = 112\n ** module chunks = 0\n **/","/**\n * Generic Transport for the browser, using the XmlHttpRequest object\n *\n * @class  connections.Xhr\n */\nmodule.exports = XhrConnector;\n\n/* jshint browser:true */\n\nvar _ = require('../utils');\nvar ConnectionAbstract = require('../connection');\nvar ConnectionFault = require('../errors').ConnectionFault;\nvar asyncDefault = !(navigator && /PhantomJS/i.test(navigator.userAgent));\n\nfunction XhrConnector(host, config) {\n  ConnectionAbstract.call(this, host, config);\n}\n_.inherits(XhrConnector, ConnectionAbstract);\n\n/**\n * Simply returns an XHR object cross browser\n * @type {Function}\n */\nvar getXhr = _.noop;\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  // rewrite the getXhr method to always return the native implementation\n  getXhr = function () {\n    return new XMLHttpRequest();\n  };\n} else {\n  // find the first MS implementation available\n  getXhr = _(['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'])\n  .map(function (appName) {\n    /* jshint unused: false */\n    try {\n      var test = new window.ActiveXObject(appName);\n      return function () {\n        return new window.ActiveXObject(appName);\n      };\n    } catch (e) {\n      return false;\n    }\n  })\n  .compact()\n  .first();\n}\n\nif (!getXhr) {\n  throw new Error('getXhr(): XMLHttpRequest not available');\n}\n\nXhrConnector.prototype.request = function (params, cb) {\n  var xhr = getXhr();\n  var timeoutId;\n  var host = this.host;\n  var log = this.log;\n\n  var url = host.makeUrl(params);\n  var headers = host.getHeaders(params.headers);\n  var async = params.async === false ? false : asyncDefault;\n\n  xhr.open(params.method || 'GET', url, async);\n\n  if (headers) {\n    for (var key in headers) {\n      if (headers[key] !== void 0) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  }\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      clearTimeout(timeoutId);\n      log.trace(params.method, url, params.body, xhr.responseText, xhr.status);\n      var err = xhr.status ? void 0 : new ConnectionFault(xhr.statusText || 'Request failed to complete.');\n      cb(err, xhr.responseText, xhr.status);\n    }\n  };\n\n  xhr.send(params.body || void 0);\n\n  return function () {\n    xhr.abort();\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/connectors/xhr.js\n ** module id = 113\n ** module chunks = 0\n **/","module.exports = ConnectionAbstract;\n\nvar _ = require('./utils');\nvar EventEmitter = require('events').EventEmitter;\nvar Log = require('./log');\nvar Host = require('./host');\nvar errors = require('./errors');\n\n/**\n * Abstract class used for Connection classes\n * @class ConnectionAbstract\n * @constructor\n */\nfunction ConnectionAbstract(host, config) {\n  config = config || {};\n  EventEmitter.call(this);\n\n  this.log = config.log || new Log();\n  this.pingTimeout = config.pingTimeout || 3000;\n\n  if (!host) {\n    throw new TypeError('Missing host');\n  } else if (host instanceof Host) {\n    this.host = host;\n  } else {\n    throw new TypeError('Invalid host');\n  }\n\n  _.makeBoundMethods(this);\n}\n_.inherits(ConnectionAbstract, EventEmitter);\n\n/**\n * Make a request using this connection. Must be overridden by Connection classes, which can add whatever keys to\n * params that they like. These are just the basics.\n *\n * @param [params] {Object} - The parameters for the request\n * @param params.path {String} - The path for which you are requesting\n * @param params.method {String} - The HTTP method for the request (GET, HEAD, etc.)\n * @param params.requestTimeout {Integer} - The amount of time in milliseconds that this request should be allowed to run for.\n * @param cb {Function} - A callback to be called once with `cb(err, responseBody, responseStatus)`\n */\nConnectionAbstract.prototype.request = function () {\n  throw new Error('Connection#request must be overwritten by the Connector');\n};\n\nConnectionAbstract.prototype.ping = function (params, cb) {\n  if (typeof params === 'function') {\n    cb = params;\n    params = null;\n  } else {\n    cb = typeof cb === 'function' ? cb : null;\n  }\n\n  var requestTimeout = this.pingTimeout;\n  var requestTimeoutId;\n  var aborted;\n  var abort;\n\n  if (params && params.hasOwnProperty('requestTimeout')) {\n    requestTimeout = params.requestTimeout;\n  }\n\n  abort = this.request(_.defaults(params || {}, {\n    path: '/',\n    method: 'HEAD'\n  }), function (err) {\n    if (aborted) {\n      return;\n    }\n    clearTimeout(requestTimeoutId);\n    if (cb) {\n      cb(err);\n    }\n  });\n\n  if (requestTimeout) {\n    requestTimeoutId = setTimeout(function () {\n      if (abort) {\n        abort();\n      }\n      aborted = true;\n      if (cb) {\n        cb(new errors.RequestTimeout('Ping Timeout after ' + requestTimeout + 'ms'));\n      }\n    }, requestTimeout);\n  }\n};\n\nConnectionAbstract.prototype.setStatus = function (status) {\n  var origStatus = this.status;\n  this.status = status;\n\n  this.emit('status set', status, origStatus, this);\n\n  if (status === 'closed') {\n    this.removeAllListeners();\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/connection.js\n ** module id = 114\n ** module chunks = 0\n **/","/**\n * Simple connection class for using the XHR object in browsers\n *\n * @class {XhrConnection}\n */\nmodule.exports = JqueryConnector;\n\nvar _ = require('../utils');\nvar ConnectionAbstract = require('../connection');\nvar ConnectionFault = require('../errors').ConnectionFault;\n\nfunction JqueryConnector(host, config) {\n  ConnectionAbstract.call(this, host, config);\n}\n_.inherits(JqueryConnector, ConnectionAbstract);\n\nJqueryConnector.prototype.request = function (params, cb) {\n  var ajax = {\n    url: this.host.makeUrl(params),\n    data: params.body,\n    type: params.method,\n    dataType: 'text',\n    headers: this.host.getHeaders(params.headers),\n    done: cb\n  };\n\n  var jqXHR = jQuery.ajax(ajax)\n    .done(function (data, textStatus, jqXHR) {\n      cb(null, data, jqXHR.statusCode(), {\n        'content-type': jqXHR.getResponseHeader('content-type')\n      });\n    })\n    .fail(function (jqXHR, textStatus, err) {\n      cb(new ConnectionFault(err && err.message));\n    });\n\n  return function () {\n    jqXHR.abort();\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/connectors/jquery.js\n ** module id = 115\n ** module chunks = 0\n **/","/**\n * Connection that registers a module with angular, using angular's $http service\n * to communicate with ES.\n *\n * @class connections.Angular\n */\nmodule.exports = AngularConnector;\n\nvar _ = require('../utils');\nvar ConnectionAbstract = require('../connection');\nvar ConnectionFault = require('../errors').ConnectionFault;\n\nfunction AngularConnector(host, config) {\n  ConnectionAbstract.call(this, host, config);\n\n  var self = this;\n  config.$injector.invoke(['$http', '$q', function ($http, $q) {\n    self.$q = $q;\n    self.$http = $http;\n  }]);\n\n}\n_.inherits(AngularConnector, ConnectionAbstract);\n\nAngularConnector.prototype.request = function (params, cb) {\n  var abort = this.$q.defer();\n\n  this.$http({\n    method: params.method,\n    url: this.host.makeUrl(params),\n    data: params.body,\n    cache: false,\n    headers: this.host.getHeaders(params.headers),\n    transformRequest: [],\n    transformResponse: [],\n    // not actually for timing out, that's handled by the transport\n    timeout: abort.promise\n  }).then(function (response) {\n    cb(null, response.data, response.status, response.headers());\n  }, function (err) {\n    if (err.status) {\n      cb(null, err.data, err.status, err.headers());\n    } else {\n      cb(new ConnectionFault(err.message));\n    }\n  });\n\n  return function () {\n    abort.resolve();\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/connectors/angular.js\n ** module id = 116\n ** module chunks = 0\n **/","module.exports = {\n  angular: require('./angular'),\n  json: require('./json')\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/serializers/index.js\n ** module id = 117\n ** module chunks = 0\n **/","/* global angular */\nvar _ = require('../utils');\nvar JsonSerializer = require('../serializers/json');\n\nfunction AngularSerializer() {}\n_.inherits(AngularSerializer, JsonSerializer);\n\n// mimic the JsonSerializer's encode method, but use angular's toJson instead\nAngularSerializer.prototype.encode = function (val) {\n  switch (typeof val) {\n  case 'string':\n    return val;\n  case 'object':\n    if (val) return angular.toJson(val);\n    /* falls through */\n  default:\n    return;\n  }\n};\n\nmodule.exports = AngularSerializer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/serializers/angular.js\n ** module id = 118\n ** module chunks = 0\n **/","/**\n * Simple JSON serializer\n * @type {[type]}\n */\nmodule.exports = Json;\n\nvar _ = require('../utils');\n\nfunction Json() {}\n\n/**\n * Converts a value into a string, or an error\n * @param  {*} val - Any value, methods are stripped and\n * see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify about other params\n * @return {String|Error} - A string is always returned, unless an error occured. then it will be that error.\n */\nJson.prototype.serialize = function (val, replacer, spaces) {\n  switch (typeof val) {\n  case 'string':\n    return val;\n  case 'object':\n    if (val) {\n      return JSON.stringify(val, replacer, spaces);\n    }\n    /* falls through */\n  default:\n    return;\n  }\n};\n\nJson.prototype.serialize.contentType = 'application/json';\n\n/**\n * Parse a JSON string, if it is already parsed it is ignored\n * @param  {String} str - the string to parse\n * @return {[type]}\n */\nJson.prototype.deserialize = function (str) {\n  if (typeof str === 'string') {\n    try {\n      return JSON.parse(str);\n    } catch (e) {}\n  }\n};\n\nJson.prototype.bulkBody = function (val) {\n  var body = '', i;\n\n  if (_.isArray(val)) {\n    for (i = 0; i < val.length; i++) {\n      body += this.serialize(val[i]) + '\\n';\n    }\n  } else if (typeof val === 'string') {\n    // make sure the string ends in a new line\n    body = val + (val[val.length - 1] === '\\n' ? '' : '\\n');\n  } else {\n    throw new TypeError('Bulk body should either be an Array of commands/string, or a String');\n  }\n\n  return body;\n};\n\nJson.prototype.bulkBody.contentType = 'application/x-ldjson';\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/serializers/json.js\n ** module id = 119\n ** module chunks = 0\n **/","var _ = require('./utils');\n\nvar extractHostPartsRE1x = /\\[\\/*([^:]+):(\\d+)\\]/;\n\nfunction makeNodeParser(hostProp) {\n  return function (nodes) {\n    return _.transform(nodes, function (hosts, node, id) {\n      var address = node[hostProp]\n      if (!address) return;\n\n      var host = {\n        host: undefined,\n        port: undefined,\n        _meta: {\n          id: id,\n          name: node.name,\n          hostname: node.hostname,\n          version: node.version\n        }\n      };\n\n      var malformedError = new Error(\n        'Malformed ' + hostProp + '.' +\n        ' Got ' + JSON.stringify(node[hostProp]) +\n        ' and expected it to match \"{hostname?}/{ip}:{port}\".'\n      );\n\n      var matches1x = extractHostPartsRE1x.exec(address);\n      if (matches1x) {\n        host.host = matches1x[1];\n        host.port = parseInt(matches1x[2], 10);\n        hosts.push(host);\n        return;\n      }\n\n      if (address.indexOf('/') > -1) {\n        var withHostParts = address.split('/');\n        if (withHostParts.length !== 2) throw malformedError;\n\n        host.host = withHostParts.shift();\n        address = withHostParts.shift();\n      }\n\n      if (address.indexOf(':') < 0) {\n        throw malformedError;\n      }\n\n      var addressParts = address.split(':');\n      if (addressParts.length !== 2) {\n        throw malformedError;\n      }\n\n      host.host = host.host || addressParts[0];\n      host.port = parseInt(addressParts[1], 10);\n      hosts.push(host);\n    }, []);\n  };\n}\n\nmodule.exports = makeNodeParser('http_address');\nmodule.exports.thrift = makeNodeParser('transport_address');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/nodes_to_host.js\n ** module id = 120\n ** module chunks = 0\n **/","\nvar _ = require('./utils');\n\n/**\n * Constructs a client action factory that uses specific defaults\n * @type {Function}\n */\nexports.makeFactoryWithModifier = makeFactoryWithModifier;\n\n/**\n * Constructs a function that can be called to make a request to ES\n * @type {Function}\n */\nexports.factory = makeFactoryWithModifier();\n\n/**\n * Constructs a proxy to another api method\n * @type {Function}\n */\nexports.proxyFactory = exports.factory.proxy;\n\n// export so that we can test this\nexports._resolveUrl = resolveUrl;\n\nexports.ApiNamespace = function() {};\nexports.namespaceFactory = function () {\n  function ClientNamespace(transport) {\n    this.transport = transport;\n  }\n\n  ClientNamespace.prototype = new exports.ApiNamespace();\n\n  return ClientNamespace;\n};\n\nfunction makeFactoryWithModifier(modifier) {\n  modifier = modifier || _.identity;\n\n  var factory = function (spec) {\n    spec = modifier(spec);\n\n    if (!_.isPlainObject(spec.params)) {\n      spec.params = {};\n    }\n\n    if (!spec.method) {\n      spec.method = 'GET';\n    }\n\n    function action(params, cb) {\n      if (typeof params === 'function') {\n        cb = params;\n        params = {};\n      } else {\n        params = params || {};\n        cb = typeof cb === 'function' ? cb : null;\n      }\n\n      try {\n        return exec(this.transport, spec, _.clone(params), cb);\n      } catch (e) {\n        if (typeof cb === 'function') {\n          _.nextTick(cb, e);\n        } else {\n          var def = this.transport.defer();\n          def.reject(e);\n          return def.promise;\n        }\n      }\n    }\n\n    action.spec = spec;\n\n    return action;\n  };\n\n  factory.proxy = function (fn, spec) {\n    return function (params, cb) {\n      if (typeof params === 'function') {\n        cb = params;\n        params = {};\n      } else {\n        params = params || {};\n        cb = typeof cb === 'function' ? cb : null;\n      }\n\n      if (spec.transform) {\n        spec.transform(params);\n      }\n\n      return fn.call(this, params, cb);\n    };\n  };\n\n  return factory;\n}\n\nvar castType = {\n  'enum': function validSelection(param, val, name) {\n    if (_.isString(val) && val.indexOf(',') > -1) {\n      val = commaSepList(val);\n    }\n\n    if (_.isArray(val)) {\n      return val.map(function (v) {\n        return validSelection(param, v, name);\n      }).join(',');\n    }\n\n    /* jshint eqeqeq: false */\n    for (var i = 0; i < param.options.length; i++) {\n      if (param.options[i] == val) {\n        return param.options[i];\n      }\n    }\n    throw new TypeError('Invalid ' + name + ': expected ' + (\n      param.options.length > 1\n      ? 'one of ' + param.options.join(',')\n      : param.options[0]\n    ));\n  },\n  duration: function (param, val, name) {\n    if (_.isNumeric(val) || _.isInterval(val)) {\n      return val;\n    } else {\n      throw new TypeError(\n        'Invalid ' + name + ': expected a number or interval ' +\n        '(an integer followed by one of M, w, d, h, m, s, y or ms).'\n      );\n    }\n  },\n  list: function (param, val, name) {\n    switch (typeof val) {\n    case 'number':\n    case 'boolean':\n      return '' + val;\n    case 'string':\n      val = commaSepList(val);\n      /* falls through */\n    case 'object':\n      if (_.isArray(val)) {\n        return val.join(',');\n      }\n      /* falls through */\n    default:\n      throw new TypeError('Invalid ' + name + ': expected be a comma separated list, array, number or string.');\n    }\n  },\n  'boolean': function (param, val) {\n    val = _.isString(val) ? val.toLowerCase() : val;\n    return (val === 'no' || val === 'off') ? false : !!val;\n  },\n  number: function (param, val, name) {\n    if (_.isNumeric(val)) {\n      return val * 1;\n    } else {\n      throw new TypeError('Invalid ' + name + ': expected a number.');\n    }\n  },\n  string: function (param, val, name) {\n    switch (typeof val) {\n    case 'number':\n    case 'string':\n      return '' + val;\n    default:\n      throw new TypeError('Invalid ' + name + ': expected a string.');\n    }\n  },\n  time: function (param, val, name) {\n    if (typeof val === 'string') {\n      return val;\n    }\n    else if (_.isNumeric(val)) {\n      return '' + val;\n    }\n    else if (val instanceof Date) {\n      return '' + val.getTime();\n    }\n    else {\n      throw new TypeError('Invalid ' + name + ': expected some sort of time.');\n    }\n  }\n};\n\nfunction resolveUrl(url, params) {\n  var vars = {}, i, key;\n\n  if (url.req) {\n    // url has required params\n    if (!url.reqParamKeys) {\n      // create cached key list on demand\n      url.reqParamKeys = _.keys(url.req);\n    }\n\n    for (i = 0; i < url.reqParamKeys.length; i ++) {\n      key = url.reqParamKeys[i];\n      if (!params.hasOwnProperty(key) || params[key] == null) {\n        // missing a required param\n        return false;\n      } else {\n        // cast of copy required param\n        if (castType[url.req[key].type]) {\n          vars[key] = castType[url.req[key].type](url.req[key], params[key], key);\n        } else {\n          vars[key] = params[key];\n        }\n      }\n    }\n  }\n\n  if (url.opt) {\n    // url has optional params\n    if (!url.optParamKeys) {\n      url.optParamKeys = _.keys(url.opt);\n    }\n\n    for (i = 0; i < url.optParamKeys.length; i ++) {\n      key = url.optParamKeys[i];\n      if (params[key]) {\n        if (castType[url.opt[key].type] || params[key] == null) {\n          vars[key] = castType[url.opt[key].type](url.opt[key], params[key], key);\n        } else {\n          vars[key] = params[key];\n        }\n      } else {\n        vars[key] = url.opt[key]['default'];\n      }\n    }\n  }\n\n  if (!url.template) {\n    // compile the template on demand\n    url.template = _.template(url.fmt);\n  }\n\n  return url.template(_.transform(vars, function (note, val, name) {\n    // encode each value\n    note[name] = encodeURIComponent(val);\n    // remove it from the params so that it isn't sent to the final request\n    delete params[name];\n  }, {}));\n}\n\n\nfunction exec(transport, spec, params, cb) {\n  var request = {\n    method: spec.method\n  };\n  var query = {};\n  var i;\n\n  // pass the timeout from the spec\n  if (spec.requestTimeout) {\n    request.requestTimeout = spec.requestTimeout;\n  }\n\n  if (!params.body && spec.paramAsBody) {\n    params.body = params[spec.paramAsBody];\n    delete params[spec.paramAsBody];\n  }\n\n  // verify that we have the body if needed\n  if (spec.needsBody && !params.body) {\n    throw new TypeError('A request body is required.');\n  }\n\n  // control params\n  if (spec.bulkBody) {\n    request.bulkBody = true;\n  }\n\n  if (spec.method === 'HEAD') {\n    request.castExists = true;\n  }\n\n  // pick the url\n  if (spec.url) {\n    // only one url option\n    request.path = resolveUrl(spec.url, params);\n  } else {\n    for (i = 0; i < spec.urls.length; i++) {\n      if (request.path = resolveUrl(spec.urls[i], params)) {\n        break;\n      }\n    }\n  }\n\n  if (!request.path) {\n    // there must have been some mimimun requirements that were not met\n    var minUrl = spec.url || spec.urls[spec.urls.length - 1];\n    throw new TypeError('Unable to build a path with those params. Supply at least ' + _.keys(minUrl.req).join(', '));\n  }\n\n  // build the query string\n  if (!spec.paramKeys) {\n    // build a key list on demand\n    spec.paramKeys = _.keys(spec.params);\n    spec.requireParamKeys = _.transform(spec.params, function (req, param, key) {\n      if (param.required) {\n        req.push(key);\n      }\n    }, []);\n  }\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key) && params[key] != null) {\n      switch (key) {\n      case 'body':\n      case 'headers':\n      case 'requestTimeout':\n      case 'maxRetries':\n        request[key] = params[key];\n        break;\n      case 'ignore':\n        request.ignore = _.isArray(params[key]) ? params[key] : [params[key]];\n        break;\n      case 'method':\n        request.method = _.toUpperString(params[key]);\n        break;\n      default:\n        var paramSpec = spec.params[key];\n        if (paramSpec) {\n          // param keys don't always match the param name, in those cases it's stored in the param def as \"name\"\n          paramSpec.name = paramSpec.name || key;\n          if (params[key] != null) {\n            if (castType[paramSpec.type]) {\n              query[paramSpec.name] = castType[paramSpec.type](paramSpec, params[key], key);\n            } else {\n              query[paramSpec.name] = params[key];\n            }\n\n            if (paramSpec['default'] && query[paramSpec.name] === paramSpec['default']) {\n              delete query[paramSpec.name];\n            }\n          }\n        } else {\n          query[key] = params[key];\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < spec.requireParamKeys.length; i ++) {\n    if (!query.hasOwnProperty(spec.requireParamKeys[i])) {\n      throw new TypeError('Missing required parameter ' + spec.requireParamKeys[i]);\n    }\n  }\n\n  request.query = query;\n\n  return transport.request(request, cb);\n}\n\nfunction commaSepList(str) {\n  return str.split(',').map(function (i) {\n    return i.trim();\n  });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/client_action.js\n ** module id = 121\n ** module chunks = 0\n **/","module.exports = {\n  '_default': require('./2_3'),\n  '2.3': require('./2_3'),\n  '2.2': require('./2_2'),\n  '2.1': require('./2_1'),\n  '2.0': require('./2_0'),\n  '1.7': require('./1_7'),\n  '2.x': require('./2_x'),\n  'master': require('./master')\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/apis/browser_index.js\n ** module id = 122\n ** module chunks = 0\n **/","var ca = require('../client_action').makeFactoryWithModifier(function (spec) {\n  return require('../utils').merge(spec, {\n    params: {\n      filterPath: {\n        type: 'list',\n        name: 'filter_path'\n      }\n    }\n  });\n});\nvar namespace = require('../client_action').namespaceFactory;\nvar api = module.exports = {};\n\napi._namespaces = ['cat', 'cluster', 'indices', 'nodes', 'snapshot', 'tasks'];\n\n/**\n * Perform a [bulk](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.type - Default document type for items which don't provide one\n * @param {String, String[], Boolean} params.fields - Default comma-separated list of fields to return in the response for updates\n * @param {String} params.index - Default index for items which don't provide one\n */\napi.bulk = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    type: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_bulk'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\napi.cat = namespace();\n\n/**\n * Perform a [cat.aliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.cat.prototype.aliases = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.allocation](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information\n */\napi.cat.prototype.allocation = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/allocation/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/allocation'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.count](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.count = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/count/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/count'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.fielddata](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return the fielddata size\n */\napi.cat.prototype.fielddata = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/fielddata/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/fielddata'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.health](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} [params.ts=true] - Set to false to disable timestamping\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.health = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    ts: {\n      type: 'boolean',\n      'default': true\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/health'\n  }\n});\n\n/**\n * Perform a [cat.help](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.help - Return help information\n */\napi.cat.prototype.help = ca({\n  params: {\n    help: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat'\n  }\n});\n\n/**\n * Perform a [cat.indices](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.pri - Set to true to return stats only for primary shards\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.indices = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    pri: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/indices/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/indices'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.master](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.master = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/master'\n  }\n});\n\n/**\n * Perform a [cat.nodeattrs](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodeattrs = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodeattrs'\n  }\n});\n\n/**\n * Perform a [cat.nodes](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodes = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodes'\n  }\n});\n\n/**\n * Perform a [cat.pendingTasks](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cat.plugins](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.plugins = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/plugins'\n  }\n});\n\n/**\n * Perform a [cat.recovery](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.recovery = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/recovery/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.repositories](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.repositories = ca({\n  params: {\n    local: {\n      type: 'boolean',\n      'default': false\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/repositories'\n  }\n});\n\n/**\n * Perform a [cat.segments](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.segments = ca({\n  params: {\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/segments/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/segments'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.shards](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.shards = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/shards/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/shards'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.snapshots](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Set to true to ignore unavailable snapshots\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.repository - Name of repository from which to fetch the snapshot information\n */\napi.cat.prototype.snapshots = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      'default': false,\n      name: 'ignore_unavailable'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/snapshots/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [cat.threadPool](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {Boolean} params.fullId - Enables displaying the complete node ids\n */\napi.cat.prototype.threadPool = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fullId: {\n      type: 'boolean',\n      'default': false,\n      name: 'full_id'\n    }\n  },\n  url: {\n    fmt: '/_cat/thread_pool'\n  }\n});\n\n/**\n * Perform a [clearScroll](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.scrollId - A comma-separated list of scroll IDs to clear\n */\napi.clearScroll = ca({\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  method: 'DELETE'\n});\n\napi.cluster = namespace();\n\n/**\n * Perform a [cluster.getSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.getSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  }\n});\n\n/**\n * Perform a [cluster.health](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.level=cluster] - Specify the level of detail for returned information\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.waitForActiveShards - Wait until the specified number of shards is active\n * @param {String} params.waitForNodes - Wait until the specified number of nodes is available\n * @param {Number} params.waitForRelocatingShards - Wait until the specified number of relocating shards is finished\n * @param {String} params.waitForStatus - Wait until cluster is in a specific state\n * @param {String, String[], Boolean} params.index - Limit the information returned to a specific index\n */\napi.cluster.prototype.health = ca({\n  params: {\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    waitForActiveShards: {\n      type: 'number',\n      name: 'wait_for_active_shards'\n    },\n    waitForNodes: {\n      type: 'string',\n      name: 'wait_for_nodes'\n    },\n    waitForRelocatingShards: {\n      type: 'number',\n      name: 'wait_for_relocating_shards'\n    },\n    waitForStatus: {\n      type: 'enum',\n      'default': null,\n      options: [\n        'green',\n        'yellow',\n        'red'\n      ],\n      name: 'wait_for_status'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/health/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/health'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.pendingTasks](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.cluster.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_cluster/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cluster.putSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.putSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [cluster.reroute](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.dryRun - Simulate the operation only and return the resulting state\n * @param {Boolean} params.explain - Return an explanation of why the commands can or cannot be executed\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics. Defaults to all but metadata\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.reroute = ca({\n  params: {\n    dryRun: {\n      type: 'boolean',\n      name: 'dry_run'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    metric: {\n      type: 'list',\n      options: [\n        '_all',\n        'blocks',\n        'metadata',\n        'nodes',\n        'routing_table',\n        'master_node',\n        'version'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/reroute'\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [cluster.state](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n */\napi.cluster.prototype.state = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/state/<%=metric%>/<%=index%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'routing_nodes',\n            'master_node',\n            'version'\n          ]\n        },\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'routing_nodes',\n            'master_node',\n            'version'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.stats](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.cluster.prototype.stats = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/stats/nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [count](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.count = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_count'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [countPercolate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to count percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to count percolate document into. Defaults to type.\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being count percolated.\n * @param {String} params.type - The type of the document being count percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.countPercolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [delete](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Specific write consistency setting for the operation\n * @param {String} params.parent - ID of parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi['delete'] = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteScript](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.deleteScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.deleteTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [exists](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.exists = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [explain](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)\n * @param {String} params.analyzer - The analyzer for the query string query\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The default field for query string query (default: _all)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.explain = ca({\n  params: {\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_explain',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [fieldStats](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for to get field statistics for (min value, max value, and more)\n * @param {String} [params.level=cluster] - Defines if field stats should be returned on a per index level or on a cluster wide level\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.fieldStats = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'indices',\n        'cluster'\n      ]\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_field_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_field_stats'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [get](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.get = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getScript](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.getScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getSource](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document; use `_all` to fetch the first document matching the ID across all types\n */\napi.getSource = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_source',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.getTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [index](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.index = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\napi.indices = namespace();\n\n/**\n * Perform a [indices.analyze](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The name of the analyzer to use\n * @param {String, String[], Boolean} params.charFilters - A comma-separated list of character filters to use for the analysis\n * @param {String} params.field - Use the analyzer configured for this field (instead of passing the analyzer name)\n * @param {String, String[], Boolean} params.filters - A comma-separated list of filters to use for the analysis\n * @param {String} params.index - The name of the index to scope the operation\n * @param {Boolean} params.preferLocal - With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)\n * @param {String, String[], Boolean} params.text - The text on which the analysis should be performed (when request body is not used)\n * @param {String} params.tokenizer - The name of the tokenizer to use for the analysis\n * @param {Boolean} params.explain - With `true`, outputs more advanced details. (default: false)\n * @param {String, String[], Boolean} params.attributes - A comma-separated list of token attributes to output, this parameter works only with `explain=true`\n * @param {String} [params.format=detailed] - Format of the output\n */\napi.indices.prototype.analyze = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    charFilters: {\n      type: 'list',\n      name: 'char_filters'\n    },\n    field: {\n      type: 'string'\n    },\n    filters: {\n      type: 'list'\n    },\n    index: {\n      type: 'string'\n    },\n    preferLocal: {\n      type: 'boolean',\n      name: 'prefer_local'\n    },\n    text: {\n      type: 'list'\n    },\n    tokenizer: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    attributes: {\n      type: 'list'\n    },\n    format: {\n      type: 'enum',\n      'default': 'detailed',\n      options: [\n        'detailed',\n        'text'\n      ]\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_analyze',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_analyze'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.clearCache](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.fieldData - Clear field data\n * @param {Boolean} params.fielddata - Clear field data\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to clear when using the `field_data` parameter (default: all)\n * @param {Boolean} params.query - Clear query caches\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index name to limit the operation\n * @param {Boolean} params.recycler - Clear the recycler cache\n * @param {Boolean} params.request - Clear request cache\n */\napi.indices.prototype.clearCache = ca({\n  params: {\n    fieldData: {\n      type: 'boolean',\n      name: 'field_data'\n    },\n    fielddata: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    query: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    index: {\n      type: 'list'\n    },\n    recycler: {\n      type: 'boolean'\n    },\n    request: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_cache/clear',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cache/clear'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.close](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma separated list of indices to close\n */\napi.indices.prototype.close = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_close',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.create](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.updateAllTypes - Whether to update the mapping for all fields with the same name across all types or not\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.create = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    updateAllTypes: {\n      type: 'boolean',\n      name: 'update_all_types'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.delete](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices\n */\napi.indices.prototype['delete'] = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names (supports wildcards); use `_all` for all indices\n * @param {String, String[], Boolean} params.name - A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.\n */\napi.indices.prototype.deleteAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.deleteTemplate = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.name - A comma-separated list of warmer names to delete (supports wildcards); use `_all` to delete all warmers in the specified indices. You must specify a name either in the uri or in the parameters.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to delete warmers from (supports wildcards); use `_all` to perform the operation on all indices.\n */\napi.indices.prototype.deleteWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    name: {\n      type: 'list'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_warmer/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.exists](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to check\n */\napi.indices.prototype.exists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.existsAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.existsTemplate = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsType](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` to check the types across all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to check\n */\napi.indices.prototype.existsType = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      type: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.flush](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.force - Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)\n * @param {Boolean} params.waitIfOngoing - If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is false and will cause an exception to be thrown on the shard level if another flush operation is already running.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flush = ca({\n  params: {\n    force: {\n      type: 'boolean'\n    },\n    waitIfOngoing: {\n      type: 'boolean',\n      name: 'wait_if_ongoing'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.flushSynced](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flushSynced = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush/synced',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush/synced'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.forcemerge](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flush - Specify whether the index should be flushed after performing the operation (default: true)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.maxNumSegments - The number of segments the index should be merged into (default: dynamic)\n * @param {Boolean} params.onlyExpungeDeletes - Specify whether the operation should only expunge deleted documents\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.waitForMerge - Specify whether the request should block until the merge process is finished (default: true)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.forcemerge = ca({\n  params: {\n    flush: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    maxNumSegments: {\n      type: 'number',\n      name: 'max_num_segments'\n    },\n    onlyExpungeDeletes: {\n      type: 'boolean',\n      name: 'only_expunge_deletes'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    waitForMerge: {\n      type: 'boolean',\n      name: 'wait_for_merge'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_forcemerge',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_forcemerge'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.get](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Ignore unavailable indexes (default: false)\n * @param {Boolean} params.allowNoIndices - Ignore if a wildcard expression resolves to no concrete indices (default: false)\n * @param {String} [params.expandWildcards=open] - Whether wildcard expressions should get expanded to open or closed indices (default: open)\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return version and creation date values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.feature - A comma-separated list of features\n */\napi.indices.prototype.get = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=feature%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        feature: {\n          type: 'list',\n          options: [\n            '_settings',\n            '_mappings',\n            '_warmers',\n            '_aliases'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.getAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAliases](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to filter\n */\napi.indices.prototype.getAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_aliases/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_aliases',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getFieldMapping](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.includeDefaults - Whether the default mapping values should be returned as well\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields\n */\napi.indices.prototype.getFieldMapping = ca({\n  params: {\n    includeDefaults: {\n      type: 'boolean',\n      name: 'include_defaults'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>/field/<%=fields%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping/field/<%=fields%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>/field/<%=fields%>',\n      req: {\n        type: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/field/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getMapping](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n */\napi.indices.prototype.getMapping = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.human - Whether to return version and creation date values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the settings that should be included\n */\napi.indices.prototype.getSettings = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    local: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.name - The comma separated names of the index templates\n */\napi.indices.prototype.getTemplate = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_template/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_template'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getUpgrade](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.getUpgrade = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the warmer (supports wildcards); leave empty to get all warmers\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.getWarmer = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.open](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma separated list of indices to open\n */\napi.indices.prototype.open = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'closed',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_open',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.optimize](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-optimize.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flush - Specify whether the index should be flushed after performing the operation (default: true)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.maxNumSegments - The number of segments the index should be merged into (default: dynamic)\n * @param {Boolean} params.onlyExpungeDeletes - Specify whether the operation should only expunge deleted documents\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.waitForMerge - Specify whether the request should block until the merge process is finished (default: true)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.optimize = ca({\n  params: {\n    flush: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    maxNumSegments: {\n      type: 'number',\n      name: 'max_num_segments'\n    },\n    onlyExpungeDeletes: {\n      type: 'boolean',\n      name: 'only_expunge_deletes'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    waitForMerge: {\n      type: 'boolean',\n      name: 'wait_for_merge'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_optimize',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_optimize'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.putAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.\n * @param {String} params.name - The name of the alias to be created or updated\n */\napi.indices.prototype.putAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putMapping](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.updateAllTypes - Whether to update the mapping for all fields with the same name across all types or not\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.\n * @param {String} params.type - The name of the document type\n */\napi.indices.prototype.putMapping = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    updateAllTypes: {\n      type: 'boolean',\n      name: 'update_all_types'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.putSettings = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.order - The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)\n * @param {Boolean} params.create - Whether the index template should only be added if new or can also replace an existing one\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.putTemplate = ca({\n  params: {\n    order: {\n      type: 'number'\n    },\n    create: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed) in the search request to warm\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices in the search request to warm. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both, in the search request to warm.\n * @param {Boolean} params.requestCache - Specify whether the request to be warmed should use the request cache, defaults to index level setting\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to register the warmer for; use `_all` or omit to perform the operation on all indices\n * @param {String} params.name - The name of the warmer\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types\n */\napi.indices.prototype.putWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    requestCache: {\n      type: 'boolean',\n      name: 'request_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.recovery](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.detailed - Whether to display detailed information about shard recovery\n * @param {Boolean} params.activeOnly - Display only those recoveries that are currently on-going\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.recovery = ca({\n  params: {\n    detailed: {\n      type: 'boolean',\n      'default': false\n    },\n    activeOnly: {\n      type: 'boolean',\n      'default': false,\n      name: 'active_only'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_recovery',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.refresh](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.force - Force a refresh even if not required\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.refresh = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    force: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_refresh',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_refresh'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.segments](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.verbose - Includes detailed memory usage by Lucene.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.segments = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    verbose: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_segments',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_segments'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.shardStores](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.status - A comma-separated list of statuses used to filter on shards to get store information for\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.shardStores = ca({\n  params: {\n    status: {\n      type: 'list',\n      options: [\n        'green',\n        'yellow',\n        'red',\n        'all'\n      ]\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_shard_stores',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_shard_stores'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.stats](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=indices] - Return stats aggregated at cluster, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned the specific metrics.\n */\napi.indices.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'list'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'indices',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_stats/<%=metric%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_stats'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.updateAliases](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Request timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.indices.prototype.updateAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_aliases'\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.upgrade](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.waitForCompletion - Specify whether the request should block until the all segments are upgraded (default: false)\n * @param {Boolean} params.onlyAncientSegments - If true, only ancient (an older Lucene major release) segments will be upgraded\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.upgrade = ca({\n  params: {\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      name: 'wait_for_completion'\n    },\n    onlyAncientSegments: {\n      type: 'boolean',\n      name: 'only_ancient_segments'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.validateQuery](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.explain - Return detailed information about the error\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {Boolean} params.rewrite - Provide a more detailed explanation showing the actual Lucene query that will be executed.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.validateQuery = ca({\n  params: {\n    explain: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    rewrite: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_validate/query'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [info](http://www.elastic.co/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.info = ca({\n  url: {\n    fmt: '/'\n  }\n});\n\n/**\n * Perform a [mget](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.mget = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mget'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mpercolate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The index of the document being count percolated to use as default\n * @param {String} params.type - The type of the document being percolated to use as default.\n */\napi.mpercolate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mpercolate'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [msearch](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to use as default\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to use as default\n */\napi.msearch = ca({\n  params: {\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_msearch'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mtermvectors](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.ids - A comma-separated list of documents ids. You must define ids as parameter or set \"ids\" or \"docs\" in the request body\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.routing - Specific routing value. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.parent - Parent id of documents. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} params.realtime - Specifies if requests are real-time as opposed to near-real-time (default: true).\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n */\napi.mtermvectors = ca({\n  params: {\n    ids: {\n      type: 'list',\n      required: false\n    },\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    },\n    realtime: {\n      type: 'boolean',\n      required: false\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mtermvectors'\n    }\n  ],\n  method: 'POST'\n});\n\napi.nodes = namespace();\n\n/**\n * Perform a [nodes.hotThreads](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.interval - The interval for the second sampling of threads\n * @param {Number} params.snapshots - Number of samples of thread stacktrace (default: 10)\n * @param {Number} params.threads - Specify the number of threads to provide information for (default: 3)\n * @param {Boolean} params.ignoreIdleThreads - Don't show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)\n * @param {String} params.type - The type to sample (default: cpu)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.hotThreads = ca({\n  params: {\n    interval: {\n      type: 'time'\n    },\n    snapshots: {\n      type: 'number'\n    },\n    threads: {\n      type: 'number'\n    },\n    ignoreIdleThreads: {\n      type: 'boolean',\n      name: 'ignore_idle_threads'\n    },\n    type: {\n      type: 'enum',\n      options: [\n        'cpu',\n        'wait',\n        'block'\n      ]\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/hotthreads',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/hotthreads'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.info](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.metric - A comma-separated list of metrics you wish returned. Leave empty to return all.\n */\napi.nodes.prototype.info = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.stats](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=node] - Return indices stats aggregated at node, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n * @param {String, String[], Boolean} params.indexMetric - Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'node',\n      options: [\n        'node',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [percolate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to percolate document into. Defaults to type.\n * @param {String} params.percolateRouting - The routing value to use when percolating the existing document.\n * @param {String} params.percolatePreference - Which shard to prefer when executing the percolate request.\n * @param {String} params.percolateFormat - Return an array of matching query IDs instead of objects\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being percolated.\n * @param {String} params.type - The type of the document being percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.percolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    percolateRouting: {\n      type: 'string',\n      name: 'percolate_routing'\n    },\n    percolatePreference: {\n      type: 'string',\n      name: 'percolate_preference'\n    },\n    percolateFormat: {\n      type: 'enum',\n      options: [\n        'ids'\n      ],\n      name: 'percolate_format'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [ping](http://www.elastic.co/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.ping = ca({\n  url: {\n    fmt: '/'\n  },\n  requestTimeout: 3000,\n  method: 'HEAD'\n});\n\n/**\n * Perform a [putScript](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.putScript = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [putTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.putTemplate = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [reindex](https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-reindex.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.refresh - Should the effected indexes be refreshed?\n * @param {Date, Number} [params.timeout=1m] - Time each individual bulk request should wait for shards that are unavailable.\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Boolean} params.waitForCompletion - Should the request should block until the reindex is complete.\n */\napi.reindex = ca({\n  params: {\n    refresh: {\n      type: 'boolean'\n    },\n    timeout: {\n      type: 'time',\n      'default': '1m'\n    },\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_reindex'\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [renderSearchTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.id - The id of the stored search template\n */\napi.renderSearchTemplate = ca({\n  urls: [\n    {\n      fmt: '/_render/template/<%=id%>',\n      req: {\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_render/template'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [scroll](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.scrollId - The scroll ID\n */\napi.scroll = ca({\n  params: {\n    scroll: {\n      type: 'duration'\n    },\n    scrollId: {\n      type: 'string',\n      name: 'scroll_id'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  paramAsBody: 'scrollId',\n  method: 'POST'\n});\n\n/**\n * Perform a [search](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.explain - Specify whether to return detailed information about score computation as part of a hit\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return as part of a hit\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields to return as the field data representation of a field for each hit\n * @param {Number} params.from - Starting offset (default: 0)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {Number} params.size - Number of hits to return (default: 10)\n * @param {String, String[], Boolean} params.sort - A comma-separated list of <field>:<direction> pairs\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.terminateAfter - The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.\n * @param {String, String[], Boolean} params.stats - Specific 'tag' of the request for logging and statistical purposes\n * @param {String} params.suggestField - Specify which field to use for suggestions\n * @param {String} [params.suggestMode=missing] - Specify suggest mode\n * @param {Number} params.suggestSize - How many suggestions to return in response\n * @param {Text} params.suggestText - The source text for which the suggestions should be returned\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.trackScores - Whether to calculate and return scores even if they are not used for sorting\n * @param {Boolean} params.version - Specify whether to return document version as part of a hit\n * @param {Boolean} params.requestCache - Specify if request cache should be used for this request or not, defaults to index level setting\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.search = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    from: {\n      type: 'number'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'dfs_query_then_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    },\n    size: {\n      type: 'number'\n    },\n    sort: {\n      type: 'list'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    terminateAfter: {\n      type: 'number',\n      name: 'terminate_after'\n    },\n    stats: {\n      type: 'list'\n    },\n    suggestField: {\n      type: 'string',\n      name: 'suggest_field'\n    },\n    suggestMode: {\n      type: 'enum',\n      'default': 'missing',\n      options: [\n        'missing',\n        'popular',\n        'always'\n      ],\n      name: 'suggest_mode'\n    },\n    suggestSize: {\n      type: 'number',\n      name: 'suggest_size'\n    },\n    suggestText: {\n      type: 'text',\n      name: 'suggest_text'\n    },\n    timeout: {\n      type: 'time'\n    },\n    trackScores: {\n      type: 'boolean',\n      name: 'track_scores'\n    },\n    version: {\n      type: 'boolean'\n    },\n    requestCache: {\n      type: 'boolean',\n      name: 'request_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchExists](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.searchExists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/exists',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/exists',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/exists'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchShards](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchShards = ca({\n  params: {\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search_shards',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search_shards',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search_shards'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchTemplate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/template'\n    }\n  ],\n  method: 'POST'\n});\n\napi.snapshot = namespace();\n\n/**\n * Perform a [snapshot.create](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.create = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.createRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.verify - Whether to verify the repository after creation\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.createRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    verify: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.delete](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype['delete'] = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.deleteRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.deleteRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.get](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.get = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [snapshot.getRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.getRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>',\n      req: {\n        repository: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.restore](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.restore = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_restore',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.status](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.status = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        },\n        snapshot: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/<%=repository%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/_status'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.verifyRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.verifyRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/_verify',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [suggest](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-suggesters.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n */\napi.suggest = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_suggest',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_suggest'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\napi.tasks = namespace();\n\n/**\n * Perform a [tasks.cancel](http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks-cancel.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.actions - A comma-separated list of actions that should be cancelled. Leave empty to cancel all.\n * @param {String} params.parentNode - Cancel tasks with specified parent node.\n * @param {String} params.parentTask - Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.\n * @param {Number} params.taskId - Cancel the task with specified task id (node_id:task_number)\n */\napi.tasks.prototype.cancel = ca({\n  params: {\n    nodeId: {\n      type: 'list',\n      name: 'node_id'\n    },\n    actions: {\n      type: 'list'\n    },\n    parentNode: {\n      type: 'string',\n      name: 'parent_node'\n    },\n    parentTask: {\n      type: 'string',\n      name: 'parent_task'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_tasks/<%=taskId%>/_cancel',\n      req: {\n        taskId: {\n          type: 'number'\n        }\n      }\n    },\n    {\n      fmt: '/_tasks/_cancel'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [tasks.list](http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks-list.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.actions - A comma-separated list of actions that should be returned. Leave empty to return all.\n * @param {Boolean} params.detailed - Return detailed task information (default: false)\n * @param {String} params.parentNode - Return tasks with specified parent node.\n * @param {String} params.parentTask - Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all.\n * @param {Boolean} params.waitForCompletion - Wait for the matching tasks to complete (default: false)\n * @param {String} params.taskId - Return the task with specified id (node_id:task_number)\n */\napi.tasks.prototype.list = ca({\n  params: {\n    nodeId: {\n      type: 'list',\n      name: 'node_id'\n    },\n    actions: {\n      type: 'list'\n    },\n    detailed: {\n      type: 'boolean'\n    },\n    parentNode: {\n      type: 'string',\n      name: 'parent_node'\n    },\n    parentTask: {\n      type: 'string',\n      name: 'parent_task'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      name: 'wait_for_completion'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_tasks/<%=taskId%>',\n      req: {\n        taskId: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_tasks'\n    }\n  ]\n});\n\n/**\n * Perform a [termvectors](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned.\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.\n * @param {Boolean} params.dfs - Specifies if distributed frequencies should be returned instead shard frequencies.\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return.\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned.\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned.\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random).\n * @param {String} params.routing - Specific routing value.\n * @param {String} params.parent - Parent id of documents.\n * @param {Boolean} params.realtime - Specifies if request is real-time as opposed to near-real-time (default: true).\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n * @param {String} params.id - The id of the document, when not specified a doc param should be supplied.\n */\napi.termvectors = ca({\n  params: {\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    dfs: {\n      type: 'boolean',\n      'default': false,\n      required: false\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    },\n    realtime: {\n      type: 'boolean',\n      required: false\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_termvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_termvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [update](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.lang - The script language (default: groovy)\n * @param {String} params.parent - ID of the parent document. Is is only used for routing and when for the upsert request\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {Number} params.retryOnConflict - Specify how many times should the operation be retried when a conflict occurs (default: 0)\n * @param {String} params.routing - Specific routing value\n * @param {Anything} params.script - The URL-encoded script definition (instead of using request body)\n * @param {Anything} params.scriptId - The id of a stored script\n * @param {Boolean} params.scriptedUpsert - True if the script referenced in script or script_id should be called to perform inserts - defaults to false\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.update = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    fields: {\n      type: 'list'\n    },\n    lang: {\n      type: 'string'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    retryOnConflict: {\n      type: 'number',\n      name: 'retry_on_conflict'\n    },\n    routing: {\n      type: 'string'\n    },\n    script: {},\n    scriptId: {\n      name: 'script_id'\n    },\n    scriptedUpsert: {\n      type: 'boolean',\n      name: 'scripted_upsert'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_update',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [updateByQuery](https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-reindex.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.explain - Specify whether to return detailed information about score computation as part of a hit\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return as part of a hit\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields to return as the field data representation of a field for each hit\n * @param {Number} params.from - Starting offset (default: 0)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.conflicts=abort] - What to do when the reindex hits version conflicts?\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {Date, Number} params.searchTimeout - Explicit timeout for each search request. Defaults to no timeout.\n * @param {Number} params.size - Number of hits to return (default: 10)\n * @param {String, String[], Boolean} params.sort - A comma-separated list of <field>:<direction> pairs\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.terminateAfter - The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.\n * @param {String, String[], Boolean} params.stats - Specific 'tag' of the request for logging and statistical purposes\n * @param {String} params.suggestField - Specify which field to use for suggestions\n * @param {String} [params.suggestMode=missing] - Specify suggest mode\n * @param {Number} params.suggestSize - How many suggestions to return in response\n * @param {Text} params.suggestText - The source text for which the suggestions should be returned\n * @param {Date, Number} [params.timeout=1m] - Time each individual bulk request should wait for shards that are unavailable.\n * @param {Boolean} params.trackScores - Whether to calculate and return scores even if they are not used for sorting\n * @param {Boolean} params.version - Specify whether to return document version as part of a hit\n * @param {Boolean} params.versionType - Should the document increment the version number (internal) on hit or not (reindex)\n * @param {Boolean} params.requestCache - Specify if request cache should be used for this request or not, defaults to index level setting\n * @param {Boolean} params.refresh - Should the effected indexes be refreshed?\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Integer} params.scrollSize - Size on the scroll request powering the update_by_query\n * @param {Boolean} params.waitForCompletion - Should the request should block until the reindex is complete.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.updateByQuery = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    from: {\n      type: 'number'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    conflicts: {\n      type: 'enum',\n      'default': 'abort',\n      options: [\n        'abort',\n        'proceed'\n      ]\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'dfs_query_then_fetch'\n      ],\n      name: 'search_type'\n    },\n    searchTimeout: {\n      type: 'time',\n      name: 'search_timeout'\n    },\n    size: {\n      type: 'number'\n    },\n    sort: {\n      type: 'list'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    terminateAfter: {\n      type: 'number',\n      name: 'terminate_after'\n    },\n    stats: {\n      type: 'list'\n    },\n    suggestField: {\n      type: 'string',\n      name: 'suggest_field'\n    },\n    suggestMode: {\n      type: 'enum',\n      'default': 'missing',\n      options: [\n        'missing',\n        'popular',\n        'always'\n      ],\n      name: 'suggest_mode'\n    },\n    suggestSize: {\n      type: 'number',\n      name: 'suggest_size'\n    },\n    suggestText: {\n      type: 'text',\n      name: 'suggest_text'\n    },\n    timeout: {\n      type: 'time',\n      'default': '1m'\n    },\n    trackScores: {\n      type: 'boolean',\n      name: 'track_scores'\n    },\n    version: {\n      type: 'boolean'\n    },\n    versionType: {\n      type: 'boolean',\n      name: 'version_type'\n    },\n    requestCache: {\n      type: 'boolean',\n      name: 'request_cache'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    scrollSize: {\n      type: 'integer',\n      name: 'scroll_size'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_update_by_query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_update_by_query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [create](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.create = ca.proxy(api.index, {\n  transform: function (params) {\n    params.op_type = 'create';\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/apis/2_3.js\n ** module id = 123\n ** module chunks = 0\n **/","var ca = require('../client_action').makeFactoryWithModifier(function (spec) {\n  return require('../utils').merge(spec, {\n    params: {\n      filterPath: {\n        type: 'list',\n        name: 'filter_path'\n      }\n    }\n  });\n});\nvar namespace = require('../client_action').namespaceFactory;\nvar api = module.exports = {};\n\napi._namespaces = ['cat', 'cluster', 'indices', 'nodes', 'snapshot'];\n\n/**\n * Perform a [bulk](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.type - Default document type for items which don't provide one\n * @param {String, String[], Boolean} params.fields - Default comma-separated list of fields to return in the response for updates\n * @param {String} params.index - Default index for items which don't provide one\n */\napi.bulk = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    type: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_bulk'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\napi.cat = namespace();\n\n/**\n * Perform a [cat.aliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.cat.prototype.aliases = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.allocation](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information\n */\napi.cat.prototype.allocation = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/allocation/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/allocation'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.count](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.count = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/count/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/count'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.fielddata](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return the fielddata size\n */\napi.cat.prototype.fielddata = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/fielddata/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/fielddata'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.health](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} [params.ts=true] - Set to false to disable timestamping\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.health = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    ts: {\n      type: 'boolean',\n      'default': true\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/health'\n  }\n});\n\n/**\n * Perform a [cat.help](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.help - Return help information\n */\napi.cat.prototype.help = ca({\n  params: {\n    help: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat'\n  }\n});\n\n/**\n * Perform a [cat.indices](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.pri - Set to true to return stats only for primary shards\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.indices = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    pri: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/indices/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/indices'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.master](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.master = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/master'\n  }\n});\n\n/**\n * Perform a [cat.nodeattrs](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodeattrs = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodeattrs'\n  }\n});\n\n/**\n * Perform a [cat.nodes](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodes = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodes'\n  }\n});\n\n/**\n * Perform a [cat.pendingTasks](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cat.plugins](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.plugins = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/plugins'\n  }\n});\n\n/**\n * Perform a [cat.recovery](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.recovery = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/recovery/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.repositories](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.repositories = ca({\n  params: {\n    local: {\n      type: 'boolean',\n      'default': false\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/repositories'\n  }\n});\n\n/**\n * Perform a [cat.segments](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.segments = ca({\n  params: {\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/segments/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/segments'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.shards](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.shards = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/shards/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/shards'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.snapshots](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Set to true to ignore unavailable snapshots\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.repository - Name of repository from which to fetch the snapshot information\n */\napi.cat.prototype.snapshots = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      'default': false,\n      name: 'ignore_unavailable'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/snapshots/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [cat.threadPool](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {Boolean} params.fullId - Enables displaying the complete node ids\n */\napi.cat.prototype.threadPool = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fullId: {\n      type: 'boolean',\n      'default': false,\n      name: 'full_id'\n    }\n  },\n  url: {\n    fmt: '/_cat/thread_pool'\n  }\n});\n\n/**\n * Perform a [clearScroll](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.scrollId - A comma-separated list of scroll IDs to clear\n */\napi.clearScroll = ca({\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  method: 'DELETE'\n});\n\napi.cluster = namespace();\n\n/**\n * Perform a [cluster.getSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.getSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  }\n});\n\n/**\n * Perform a [cluster.health](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.level=cluster] - Specify the level of detail for returned information\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.waitForActiveShards - Wait until the specified number of shards is active\n * @param {String} params.waitForNodes - Wait until the specified number of nodes is available\n * @param {Number} params.waitForRelocatingShards - Wait until the specified number of relocating shards is finished\n * @param {String} params.waitForStatus - Wait until cluster is in a specific state\n * @param {String, String[], Boolean} params.index - Limit the information returned to a specific index\n */\napi.cluster.prototype.health = ca({\n  params: {\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    waitForActiveShards: {\n      type: 'number',\n      name: 'wait_for_active_shards'\n    },\n    waitForNodes: {\n      type: 'string',\n      name: 'wait_for_nodes'\n    },\n    waitForRelocatingShards: {\n      type: 'number',\n      name: 'wait_for_relocating_shards'\n    },\n    waitForStatus: {\n      type: 'enum',\n      'default': null,\n      options: [\n        'green',\n        'yellow',\n        'red'\n      ],\n      name: 'wait_for_status'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/health/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/health'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.pendingTasks](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.cluster.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_cluster/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cluster.putSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.putSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [cluster.reroute](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.dryRun - Simulate the operation only and return the resulting state\n * @param {Boolean} params.explain - Return an explanation of why the commands can or cannot be executed\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics. Defaults to all but metadata\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.reroute = ca({\n  params: {\n    dryRun: {\n      type: 'boolean',\n      name: 'dry_run'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    metric: {\n      type: 'list',\n      options: [\n        '_all',\n        'blocks',\n        'metadata',\n        'nodes',\n        'routing_table',\n        'master_node',\n        'version'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/reroute'\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [cluster.state](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n */\napi.cluster.prototype.state = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/state/<%=metric%>/<%=index%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'routing_nodes',\n            'master_node',\n            'version'\n          ]\n        },\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'routing_nodes',\n            'master_node',\n            'version'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.stats](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.cluster.prototype.stats = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/stats/nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [count](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.count = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_count'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [countPercolate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to count percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to count percolate document into. Defaults to type.\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being count percolated.\n * @param {String} params.type - The type of the document being count percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.countPercolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [delete](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Specific write consistency setting for the operation\n * @param {String} params.parent - ID of parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi['delete'] = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteScript](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.deleteScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.deleteTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [exists](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.exists = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [explain](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)\n * @param {String} params.analyzer - The analyzer for the query string query\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The default field for query string query (default: _all)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.explain = ca({\n  params: {\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_explain',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [fieldStats](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for to get field statistics for (min value, max value, and more)\n * @param {String} [params.level=cluster] - Defines if field stats should be returned on a per index level or on a cluster wide level\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.fieldStats = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'indices',\n        'cluster'\n      ]\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_field_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_field_stats'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [get](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.get = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getScript](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.getScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getSource](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document; use `_all` to fetch the first document matching the ID across all types\n */\napi.getSource = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_source',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.getTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [index](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.index = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\napi.indices = namespace();\n\n/**\n * Perform a [indices.analyze](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The name of the analyzer to use\n * @param {String, String[], Boolean} params.charFilters - A comma-separated list of character filters to use for the analysis\n * @param {String} params.field - Use the analyzer configured for this field (instead of passing the analyzer name)\n * @param {String, String[], Boolean} params.filters - A comma-separated list of filters to use for the analysis\n * @param {String} params.index - The name of the index to scope the operation\n * @param {Boolean} params.preferLocal - With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)\n * @param {String, String[], Boolean} params.text - The text on which the analysis should be performed (when request body is not used)\n * @param {String} params.tokenizer - The name of the tokenizer to use for the analysis\n * @param {Boolean} params.detail - With `true`, outputs more advanced details. (default: false)\n * @param {String, String[], Boolean} params.attributes - A comma-separated list of token attributes to output, this parameter works only with `detail=true`\n * @param {String} [params.format=detailed] - Format of the output\n */\napi.indices.prototype.analyze = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    charFilters: {\n      type: 'list',\n      name: 'char_filters'\n    },\n    field: {\n      type: 'string'\n    },\n    filters: {\n      type: 'list'\n    },\n    index: {\n      type: 'string'\n    },\n    preferLocal: {\n      type: 'boolean',\n      name: 'prefer_local'\n    },\n    text: {\n      type: 'list'\n    },\n    tokenizer: {\n      type: 'string'\n    },\n    detail: {\n      type: 'boolean'\n    },\n    attributes: {\n      type: 'list'\n    },\n    format: {\n      type: 'enum',\n      'default': 'detailed',\n      options: [\n        'detailed',\n        'text'\n      ]\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_analyze',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_analyze'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.clearCache](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.fieldData - Clear field data\n * @param {Boolean} params.fielddata - Clear field data\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to clear when using the `field_data` parameter (default: all)\n * @param {Boolean} params.query - Clear query caches\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index name to limit the operation\n * @param {Boolean} params.recycler - Clear the recycler cache\n * @param {Boolean} params.request - Clear request cache\n */\napi.indices.prototype.clearCache = ca({\n  params: {\n    fieldData: {\n      type: 'boolean',\n      name: 'field_data'\n    },\n    fielddata: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    query: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    index: {\n      type: 'list'\n    },\n    recycler: {\n      type: 'boolean'\n    },\n    request: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_cache/clear',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cache/clear'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.close](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma separated list of indices to close\n */\napi.indices.prototype.close = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_close',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.create](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.updateAllTypes - Whether to update the mapping for all fields with the same name across all types or not\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.create = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    updateAllTypes: {\n      type: 'boolean',\n      name: 'update_all_types'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.delete](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices\n */\napi.indices.prototype['delete'] = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names (supports wildcards); use `_all` for all indices\n * @param {String, String[], Boolean} params.name - A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.\n */\napi.indices.prototype.deleteAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.deleteTemplate = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.name - A comma-separated list of warmer names to delete (supports wildcards); use `_all` to delete all warmers in the specified indices. You must specify a name either in the uri or in the parameters.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to delete warmers from (supports wildcards); use `_all` to perform the operation on all indices.\n */\napi.indices.prototype.deleteWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    name: {\n      type: 'list'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_warmer/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.exists](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to check\n */\napi.indices.prototype.exists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.existsAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.existsTemplate = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsType](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` to check the types across all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to check\n */\napi.indices.prototype.existsType = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      type: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.flush](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.force - Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)\n * @param {Boolean} params.waitIfOngoing - If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is false and will cause an exception to be thrown on the shard level if another flush operation is already running.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flush = ca({\n  params: {\n    force: {\n      type: 'boolean'\n    },\n    waitIfOngoing: {\n      type: 'boolean',\n      name: 'wait_if_ongoing'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.flushSynced](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flushSynced = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush/synced',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush/synced'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.forcemerge](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flush - Specify whether the index should be flushed after performing the operation (default: true)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.maxNumSegments - The number of segments the index should be merged into (default: dynamic)\n * @param {Boolean} params.onlyExpungeDeletes - Specify whether the operation should only expunge deleted documents\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.waitForMerge - Specify whether the request should block until the merge process is finished (default: true)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.forcemerge = ca({\n  params: {\n    flush: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    maxNumSegments: {\n      type: 'number',\n      name: 'max_num_segments'\n    },\n    onlyExpungeDeletes: {\n      type: 'boolean',\n      name: 'only_expunge_deletes'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    waitForMerge: {\n      type: 'boolean',\n      name: 'wait_for_merge'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_forcemerge',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_forcemerge'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.get](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Ignore unavailable indexes (default: false)\n * @param {Boolean} params.allowNoIndices - Ignore if a wildcard expression resolves to no concrete indices (default: false)\n * @param {String} [params.expandWildcards=open] - Whether wildcard expressions should get expanded to open or closed indices (default: open)\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return version and creation date values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.feature - A comma-separated list of features\n */\napi.indices.prototype.get = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=feature%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        feature: {\n          type: 'list',\n          options: [\n            '_settings',\n            '_mappings',\n            '_warmers',\n            '_aliases'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.getAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAliases](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to filter\n */\napi.indices.prototype.getAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_aliases/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_aliases',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getFieldMapping](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.includeDefaults - Whether the default mapping values should be returned as well\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields\n */\napi.indices.prototype.getFieldMapping = ca({\n  params: {\n    includeDefaults: {\n      type: 'boolean',\n      name: 'include_defaults'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>/field/<%=fields%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping/field/<%=fields%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>/field/<%=fields%>',\n      req: {\n        type: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/field/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getMapping](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n */\napi.indices.prototype.getMapping = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.human - Whether to return version and creation date values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the settings that should be included\n */\napi.indices.prototype.getSettings = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    local: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.name - The comma separated names of the index templates\n */\napi.indices.prototype.getTemplate = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_template/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_template'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getUpgrade](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.getUpgrade = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the warmer (supports wildcards); leave empty to get all warmers\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.getWarmer = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.open](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma separated list of indices to open\n */\napi.indices.prototype.open = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'closed',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_open',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.optimize](https://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-optimize.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flush - Specify whether the index should be flushed after performing the operation (default: true)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.maxNumSegments - The number of segments the index should be merged into (default: dynamic)\n * @param {Boolean} params.onlyExpungeDeletes - Specify whether the operation should only expunge deleted documents\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.waitForMerge - Specify whether the request should block until the merge process is finished (default: true)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.optimize = ca({\n  params: {\n    flush: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    maxNumSegments: {\n      type: 'number',\n      name: 'max_num_segments'\n    },\n    onlyExpungeDeletes: {\n      type: 'boolean',\n      name: 'only_expunge_deletes'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    waitForMerge: {\n      type: 'boolean',\n      name: 'wait_for_merge'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_optimize',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_optimize'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.putAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.\n * @param {String} params.name - The name of the alias to be created or updated\n */\napi.indices.prototype.putAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putMapping](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.updateAllTypes - Whether to update the mapping for all fields with the same name across all types or not\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.\n * @param {String} params.type - The name of the document type\n */\napi.indices.prototype.putMapping = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    updateAllTypes: {\n      type: 'boolean',\n      name: 'update_all_types'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.putSettings = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.order - The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)\n * @param {Boolean} params.create - Whether the index template should only be added if new or can also replace an existing one\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.putTemplate = ca({\n  params: {\n    order: {\n      type: 'number'\n    },\n    create: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed) in the search request to warm\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices in the search request to warm. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both, in the search request to warm.\n * @param {Boolean} params.requestCache - Specify whether the request to be warmed should use the request cache, defaults to index level setting\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to register the warmer for; use `_all` or omit to perform the operation on all indices\n * @param {String} params.name - The name of the warmer\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types\n */\napi.indices.prototype.putWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    requestCache: {\n      type: 'boolean',\n      name: 'request_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.recovery](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.detailed - Whether to display detailed information about shard recovery\n * @param {Boolean} params.activeOnly - Display only those recoveries that are currently on-going\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.recovery = ca({\n  params: {\n    detailed: {\n      type: 'boolean',\n      'default': false\n    },\n    activeOnly: {\n      type: 'boolean',\n      'default': false,\n      name: 'active_only'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_recovery',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.refresh](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.force - Force a refresh even if not required\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.refresh = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    force: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_refresh',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_refresh'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.segments](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.verbose - Includes detailed memory usage by Lucene.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.segments = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    verbose: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_segments',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_segments'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.shardStores](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.status - A comma-separated list of statuses used to filter on shards to get store information for\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.shardStores = ca({\n  params: {\n    status: {\n      type: 'list',\n      options: [\n        'green',\n        'yellow',\n        'red',\n        'all'\n      ]\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_shard_stores',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_shard_stores'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.stats](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=indices] - Return stats aggregated at cluster, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned the specific metrics.\n */\napi.indices.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'list'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'indices',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_stats/<%=metric%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_stats'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.updateAliases](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Request timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.indices.prototype.updateAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_aliases'\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.upgrade](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.waitForCompletion - Specify whether the request should block until the all segments are upgraded (default: false)\n * @param {Boolean} params.onlyAncientSegments - If true, only ancient (an older Lucene major release) segments will be upgraded\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.upgrade = ca({\n  params: {\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      name: 'wait_for_completion'\n    },\n    onlyAncientSegments: {\n      type: 'boolean',\n      name: 'only_ancient_segments'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.validateQuery](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.explain - Return detailed information about the error\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {Boolean} params.rewrite - Provide a more detailed explanation showing the actual Lucene query that will be executed.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.validateQuery = ca({\n  params: {\n    explain: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    rewrite: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_validate/query'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [info](http://www.elastic.co/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.info = ca({\n  url: {\n    fmt: '/'\n  }\n});\n\n/**\n * Perform a [mget](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.mget = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mget'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mpercolate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The index of the document being count percolated to use as default\n * @param {String} params.type - The type of the document being percolated to use as default.\n */\napi.mpercolate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mpercolate'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [msearch](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to use as default\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to use as default\n */\napi.msearch = ca({\n  params: {\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_msearch'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mtermvectors](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.ids - A comma-separated list of documents ids. You must define ids as parameter or set \"ids\" or \"docs\" in the request body\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.routing - Specific routing value. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.parent - Parent id of documents. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} params.realtime - Specifies if requests are real-time as opposed to near-real-time (default: true).\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n */\napi.mtermvectors = ca({\n  params: {\n    ids: {\n      type: 'list',\n      required: false\n    },\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    },\n    realtime: {\n      type: 'boolean',\n      required: false\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mtermvectors'\n    }\n  ],\n  method: 'POST'\n});\n\napi.nodes = namespace();\n\n/**\n * Perform a [nodes.hotThreads](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.interval - The interval for the second sampling of threads\n * @param {Number} params.snapshots - Number of samples of thread stacktrace (default: 10)\n * @param {Number} params.threads - Specify the number of threads to provide information for (default: 3)\n * @param {Boolean} params.ignoreIdleThreads - Don't show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)\n * @param {String} params.type - The type to sample (default: cpu)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.hotThreads = ca({\n  params: {\n    interval: {\n      type: 'time'\n    },\n    snapshots: {\n      type: 'number'\n    },\n    threads: {\n      type: 'number'\n    },\n    ignoreIdleThreads: {\n      type: 'boolean',\n      name: 'ignore_idle_threads'\n    },\n    type: {\n      type: 'enum',\n      options: [\n        'cpu',\n        'wait',\n        'block'\n      ]\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/hotthreads',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/hotthreads'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.info](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.metric - A comma-separated list of metrics you wish returned. Leave empty to return all.\n */\napi.nodes.prototype.info = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.stats](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=node] - Return indices stats aggregated at node, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n * @param {String, String[], Boolean} params.indexMetric - Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'node',\n      options: [\n        'node',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [percolate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to percolate document into. Defaults to type.\n * @param {String} params.percolateRouting - The routing value to use when percolating the existing document.\n * @param {String} params.percolatePreference - Which shard to prefer when executing the percolate request.\n * @param {String} params.percolateFormat - Return an array of matching query IDs instead of objects\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being percolated.\n * @param {String} params.type - The type of the document being percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.percolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    percolateRouting: {\n      type: 'string',\n      name: 'percolate_routing'\n    },\n    percolatePreference: {\n      type: 'string',\n      name: 'percolate_preference'\n    },\n    percolateFormat: {\n      type: 'enum',\n      options: [\n        'ids'\n      ],\n      name: 'percolate_format'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [ping](http://www.elastic.co/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.ping = ca({\n  url: {\n    fmt: '/'\n  },\n  requestTimeout: 3000,\n  method: 'HEAD'\n});\n\n/**\n * Perform a [putScript](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.putScript = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [putTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.putTemplate = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [renderSearchTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.id - The id of the stored search template\n */\napi.renderSearchTemplate = ca({\n  urls: [\n    {\n      fmt: '/_render/template/<%=id%>',\n      req: {\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_render/template'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [scroll](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.scrollId - The scroll ID\n */\napi.scroll = ca({\n  params: {\n    scroll: {\n      type: 'duration'\n    },\n    scrollId: {\n      type: 'string',\n      name: 'scroll_id'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  paramAsBody: 'scrollId',\n  method: 'POST'\n});\n\n/**\n * Perform a [search](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.explain - Specify whether to return detailed information about score computation as part of a hit\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return as part of a hit\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields to return as the field data representation of a field for each hit\n * @param {Number} params.from - Starting offset (default: 0)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {Number} params.size - Number of hits to return (default: 10)\n * @param {String, String[], Boolean} params.sort - A comma-separated list of <field>:<direction> pairs\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.terminateAfter - The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.\n * @param {String, String[], Boolean} params.stats - Specific 'tag' of the request for logging and statistical purposes\n * @param {String} params.suggestField - Specify which field to use for suggestions\n * @param {String} [params.suggestMode=missing] - Specify suggest mode\n * @param {Number} params.suggestSize - How many suggestions to return in response\n * @param {Text} params.suggestText - The source text for which the suggestions should be returned\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.trackScores - Whether to calculate and return scores even if they are not used for sorting\n * @param {Boolean} params.version - Specify whether to return document version as part of a hit\n * @param {Boolean} params.requestCache - Specify if request cache should be used for this request or not, defaults to index level setting\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.search = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    from: {\n      type: 'number'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'dfs_query_then_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    },\n    size: {\n      type: 'number'\n    },\n    sort: {\n      type: 'list'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    terminateAfter: {\n      type: 'number',\n      name: 'terminate_after'\n    },\n    stats: {\n      type: 'list'\n    },\n    suggestField: {\n      type: 'string',\n      name: 'suggest_field'\n    },\n    suggestMode: {\n      type: 'enum',\n      'default': 'missing',\n      options: [\n        'missing',\n        'popular',\n        'always'\n      ],\n      name: 'suggest_mode'\n    },\n    suggestSize: {\n      type: 'number',\n      name: 'suggest_size'\n    },\n    suggestText: {\n      type: 'text',\n      name: 'suggest_text'\n    },\n    timeout: {\n      type: 'time'\n    },\n    trackScores: {\n      type: 'boolean',\n      name: 'track_scores'\n    },\n    version: {\n      type: 'boolean'\n    },\n    requestCache: {\n      type: 'boolean',\n      name: 'request_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchExists](https://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.searchExists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/exists',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/exists',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/exists'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchShards](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchShards = ca({\n  params: {\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search_shards',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search_shards',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search_shards'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchTemplate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/template'\n    }\n  ],\n  method: 'POST'\n});\n\napi.snapshot = namespace();\n\n/**\n * Perform a [snapshot.create](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.create = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.createRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.verify - Whether to verify the repository after creation\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.createRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    verify: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.delete](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype['delete'] = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.deleteRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.deleteRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.get](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.get = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [snapshot.getRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.getRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>',\n      req: {\n        repository: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.restore](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.restore = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_restore',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.status](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.status = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        },\n        snapshot: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/<%=repository%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/_status'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.verifyRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.verifyRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/_verify',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [suggest](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-suggesters.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n */\napi.suggest = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_suggest',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_suggest'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [termvectors](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned.\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.\n * @param {Boolean} params.dfs - Specifies if distributed frequencies should be returned instead shard frequencies.\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return.\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned.\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned.\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random).\n * @param {String} params.routing - Specific routing value.\n * @param {String} params.parent - Parent id of documents.\n * @param {Boolean} params.realtime - Specifies if request is real-time as opposed to near-real-time (default: true).\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n * @param {String} params.id - The id of the document, when not specified a doc param should be supplied.\n */\napi.termvectors = ca({\n  params: {\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    dfs: {\n      type: 'boolean',\n      'default': false,\n      required: false\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    },\n    realtime: {\n      type: 'boolean',\n      required: false\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_termvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_termvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [update](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.lang - The script language (default: groovy)\n * @param {String} params.parent - ID of the parent document. Is is only used for routing and when for the upsert request\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {Number} params.retryOnConflict - Specify how many times should the operation be retried when a conflict occurs (default: 0)\n * @param {String} params.routing - Specific routing value\n * @param {Anything} params.script - The URL-encoded script definition (instead of using request body)\n * @param {Anything} params.scriptId - The id of a stored script\n * @param {Boolean} params.scriptedUpsert - True if the script referenced in script or script_id should be called to perform inserts - defaults to false\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.update = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    fields: {\n      type: 'list'\n    },\n    lang: {\n      type: 'string'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    retryOnConflict: {\n      type: 'number',\n      name: 'retry_on_conflict'\n    },\n    routing: {\n      type: 'string'\n    },\n    script: {},\n    scriptId: {\n      name: 'script_id'\n    },\n    scriptedUpsert: {\n      type: 'boolean',\n      name: 'scripted_upsert'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_update',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [create](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.create = ca.proxy(api.index, {\n  transform: function (params) {\n    params.op_type = 'create';\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/apis/2_2.js\n ** module id = 124\n ** module chunks = 0\n **/","var ca = require('../client_action').makeFactoryWithModifier(function (spec) {\n  return require('../utils').merge(spec, {\n    params: {\n      filterPath: {\n        type: 'list',\n        name: 'filter_path'\n      }\n    }\n  });\n});\nvar namespace = require('../client_action').namespaceFactory;\nvar api = module.exports = {};\n\napi._namespaces = ['cat', 'cluster', 'indices', 'nodes', 'snapshot'];\n\n/**\n * Perform a [bulk](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/docs-bulk.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.type - Default document type for items which don't provide one\n * @param {String, String[], Boolean} params.fields - Default comma-separated list of fields to return in the response for updates\n * @param {String} params.index - Default index for items which don't provide one\n */\napi.bulk = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    type: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_bulk'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\napi.cat = namespace();\n\n/**\n * Perform a [cat.aliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.cat.prototype.aliases = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.allocation](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat-allocation.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information\n */\napi.cat.prototype.allocation = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/allocation/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/allocation'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.count](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.count = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/count/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/count'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.fielddata](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat-fielddata.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return the fielddata size\n */\napi.cat.prototype.fielddata = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/fielddata/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/fielddata'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.health](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} [params.ts=true] - Set to false to disable timestamping\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.health = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    ts: {\n      type: 'boolean',\n      'default': true\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/health'\n  }\n});\n\n/**\n * Perform a [cat.help](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.help - Return help information\n */\napi.cat.prototype.help = ca({\n  params: {\n    help: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat'\n  }\n});\n\n/**\n * Perform a [cat.indices](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat-indices.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.pri - Set to true to return stats only for primary shards\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.indices = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    pri: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/indices/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/indices'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.master](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat-master.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.master = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/master'\n  }\n});\n\n/**\n * Perform a [cat.nodeattrs](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat-nodeattrs.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodeattrs = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodeattrs'\n  }\n});\n\n/**\n * Perform a [cat.nodes](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat-nodes.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodes = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodes'\n  }\n});\n\n/**\n * Perform a [cat.pendingTasks](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat-pending-tasks.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cat.plugins](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat-plugins.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.plugins = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/plugins'\n  }\n});\n\n/**\n * Perform a [cat.recovery](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.recovery = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/recovery/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.repositories](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.repositories = ca({\n  params: {\n    local: {\n      type: 'boolean',\n      'default': false\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/repositories'\n  }\n});\n\n/**\n * Perform a [cat.segments](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.segments = ca({\n  params: {\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/segments/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/segments'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.shards](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.shards = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/shards/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/shards'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.snapshots](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.repository - Name of repository from which to fetch the snapshot information\n */\napi.cat.prototype.snapshots = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/snapshots/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [cat.threadPool](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cat-thread-pool.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {Boolean} params.fullId - Enables displaying the complete node ids\n */\napi.cat.prototype.threadPool = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fullId: {\n      type: 'boolean',\n      'default': false,\n      name: 'full_id'\n    }\n  },\n  url: {\n    fmt: '/_cat/thread_pool'\n  }\n});\n\n/**\n * Perform a [clearScroll](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.scrollId - A comma-separated list of scroll IDs to clear\n */\napi.clearScroll = ca({\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  method: 'DELETE'\n});\n\napi.cluster = namespace();\n\n/**\n * Perform a [cluster.getSettings](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.getSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  }\n});\n\n/**\n * Perform a [cluster.health](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cluster-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.level=cluster] - Specify the level of detail for returned information\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.waitForActiveShards - Wait until the specified number of shards is active\n * @param {String} params.waitForNodes - Wait until the specified number of nodes is available\n * @param {Number} params.waitForRelocatingShards - Wait until the specified number of relocating shards is finished\n * @param {String} params.waitForStatus - Wait until cluster is in a specific state\n * @param {String, String[], Boolean} params.index - Limit the information returned to a specific index\n */\napi.cluster.prototype.health = ca({\n  params: {\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    waitForActiveShards: {\n      type: 'number',\n      name: 'wait_for_active_shards'\n    },\n    waitForNodes: {\n      type: 'string',\n      name: 'wait_for_nodes'\n    },\n    waitForRelocatingShards: {\n      type: 'number',\n      name: 'wait_for_relocating_shards'\n    },\n    waitForStatus: {\n      type: 'enum',\n      'default': null,\n      options: [\n        'green',\n        'yellow',\n        'red'\n      ],\n      name: 'wait_for_status'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/health/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/health'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.pendingTasks](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cluster-pending.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.cluster.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_cluster/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cluster.putSettings](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.putSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [cluster.reroute](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cluster-reroute.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.dryRun - Simulate the operation only and return the resulting state\n * @param {Boolean} params.explain - Return an explanation of why the commands can or cannot be executed\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics. Defaults to all but metadata\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.reroute = ca({\n  params: {\n    dryRun: {\n      type: 'boolean',\n      name: 'dry_run'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    metric: {\n      type: 'list',\n      options: [\n        '_all',\n        'blocks',\n        'metadata',\n        'nodes',\n        'routing_table',\n        'master_node',\n        'version'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/reroute'\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [cluster.state](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cluster-state.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n */\napi.cluster.prototype.state = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/state/<%=metric%>/<%=index%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'routing_nodes',\n            'master_node',\n            'version'\n          ]\n        },\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'routing_nodes',\n            'master_node',\n            'version'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.stats](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cluster-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.cluster.prototype.stats = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/stats/nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [count](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.count = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_count'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [countPercolate](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to count percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to count percolate document into. Defaults to type.\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being count percolated.\n * @param {String} params.type - The type of the document being count percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.countPercolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [delete](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/docs-delete.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Specific write consistency setting for the operation\n * @param {String} params.parent - ID of parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi['delete'] = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteScript](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.deleteScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.deleteTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [exists](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.exists = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [explain](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-explain.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)\n * @param {String} params.analyzer - The analyzer for the query string query\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The default field for query string query (default: _all)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.explain = ca({\n  params: {\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_explain',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [fieldStats](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-field-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for to get field statistics for (min value, max value, and more)\n * @param {String} [params.level=cluster] - Defines if field stats should be returned on a per index level or on a cluster wide level\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.fieldStats = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'indices',\n        'cluster'\n      ]\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_field_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_field_stats'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [get](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.get = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getScript](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.getScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getSource](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document; use `_all` to fetch the first document matching the ID across all types\n */\napi.getSource = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_source',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.getTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [index](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.index = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\napi.indices = namespace();\n\n/**\n * Perform a [indices.analyze](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-analyze.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The name of the analyzer to use\n * @param {String, String[], Boolean} params.charFilters - A comma-separated list of character filters to use for the analysis\n * @param {String} params.field - Use the analyzer configured for this field (instead of passing the analyzer name)\n * @param {String, String[], Boolean} params.filters - A comma-separated list of filters to use for the analysis\n * @param {String} params.index - The name of the index to scope the operation\n * @param {Boolean} params.preferLocal - With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)\n * @param {String, String[], Boolean} params.text - The text on which the analysis should be performed (when request body is not used)\n * @param {String} params.tokenizer - The name of the tokenizer to use for the analysis\n * @param {String} [params.format=detailed] - Format of the output\n */\napi.indices.prototype.analyze = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    charFilters: {\n      type: 'list',\n      name: 'char_filters'\n    },\n    field: {\n      type: 'string'\n    },\n    filters: {\n      type: 'list'\n    },\n    index: {\n      type: 'string'\n    },\n    preferLocal: {\n      type: 'boolean',\n      name: 'prefer_local'\n    },\n    text: {\n      type: 'list'\n    },\n    tokenizer: {\n      type: 'string'\n    },\n    format: {\n      type: 'enum',\n      'default': 'detailed',\n      options: [\n        'detailed',\n        'text'\n      ]\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_analyze',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_analyze'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.clearCache](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-clearcache.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.fieldData - Clear field data\n * @param {Boolean} params.fielddata - Clear field data\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to clear when using the `field_data` parameter (default: all)\n * @param {Boolean} params.query - Clear query caches\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index name to limit the operation\n * @param {Boolean} params.recycler - Clear the recycler cache\n * @param {Boolean} params.request - Clear request cache\n */\napi.indices.prototype.clearCache = ca({\n  params: {\n    fieldData: {\n      type: 'boolean',\n      name: 'field_data'\n    },\n    fielddata: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    query: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    index: {\n      type: 'list'\n    },\n    recycler: {\n      type: 'boolean'\n    },\n    request: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_cache/clear',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cache/clear'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.close](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma separated list of indices to close\n */\napi.indices.prototype.close = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_close',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.create](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-create-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.updateAllTypes - Whether to update the mapping for all fields with the same name across all types or not\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.create = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    updateAllTypes: {\n      type: 'boolean',\n      name: 'update_all_types'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.delete](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-delete-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices\n */\napi.indices.prototype['delete'] = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteAlias](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names (supports wildcards); use `_all` for all indices\n * @param {String, String[], Boolean} params.name - A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.\n */\napi.indices.prototype.deleteAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.deleteTemplate = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.name - A comma-separated list of warmer names to delete (supports wildcards); use `_all` to delete all warmers in the specified indices. You must specify a name either in the uri or in the parameters.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to delete warmers from (supports wildcards); use `_all` to perform the operation on all indices.\n */\napi.indices.prototype.deleteWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    name: {\n      type: 'list'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_warmer/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.exists](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to check\n */\napi.indices.prototype.exists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsAlias](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.existsAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.existsTemplate = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsType](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-types-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` to check the types across all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to check\n */\napi.indices.prototype.existsType = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      type: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.flush](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.force - Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)\n * @param {Boolean} params.waitIfOngoing - If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is false and will cause an exception to be thrown on the shard level if another flush operation is already running.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flush = ca({\n  params: {\n    force: {\n      type: 'boolean'\n    },\n    waitIfOngoing: {\n      type: 'boolean',\n      name: 'wait_if_ongoing'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.flushSynced](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-synced-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flushSynced = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush/synced',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush/synced'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.forcemerge](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-forcemerge.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flush - Specify whether the index should be flushed after performing the operation (default: true)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.maxNumSegments - The number of segments the index should be merged into (default: dynamic)\n * @param {Boolean} params.onlyExpungeDeletes - Specify whether the operation should only expunge deleted documents\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.waitForMerge - Specify whether the request should block until the merge process is finished (default: true)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.forcemerge = ca({\n  params: {\n    flush: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    maxNumSegments: {\n      type: 'number',\n      name: 'max_num_segments'\n    },\n    onlyExpungeDeletes: {\n      type: 'boolean',\n      name: 'only_expunge_deletes'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    waitForMerge: {\n      type: 'boolean',\n      name: 'wait_for_merge'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_forcemerge',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_forcemerge'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.get](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-get-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Ignore unavailable indexes (default: false)\n * @param {Boolean} params.allowNoIndices - Ignore if a wildcard expression resolves to no concrete indices (default: false)\n * @param {String} [params.expandWildcards=open] - Whether wildcard expressions should get expanded to open or closed indices (default: open)\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return version and creation date values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.feature - A comma-separated list of features\n */\napi.indices.prototype.get = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=feature%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        feature: {\n          type: 'list',\n          options: [\n            '_settings',\n            '_mappings',\n            '_warmers',\n            '_aliases'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAlias](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.getAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAliases](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to filter\n */\napi.indices.prototype.getAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_aliases/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_aliases',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getFieldMapping](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-get-field-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.includeDefaults - Whether the default mapping values should be returned as well\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields\n */\napi.indices.prototype.getFieldMapping = ca({\n  params: {\n    includeDefaults: {\n      type: 'boolean',\n      name: 'include_defaults'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>/field/<%=fields%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping/field/<%=fields%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>/field/<%=fields%>',\n      req: {\n        type: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/field/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getMapping](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-get-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n */\napi.indices.prototype.getMapping = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getSettings](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-get-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.human - Whether to return version and creation date values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the settings that should be included\n */\napi.indices.prototype.getSettings = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    local: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.name - The comma separated names of the index templates\n */\napi.indices.prototype.getTemplate = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_template/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_template'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getUpgrade](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.getUpgrade = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the warmer (supports wildcards); leave empty to get all warmers\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.getWarmer = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.open](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma separated list of indices to open\n */\napi.indices.prototype.open = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'closed',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_open',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.optimize](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-optimize.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flush - Specify whether the index should be flushed after performing the operation (default: true)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.maxNumSegments - The number of segments the index should be merged into (default: dynamic)\n * @param {Boolean} params.onlyExpungeDeletes - Specify whether the operation should only expunge deleted documents\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.waitForMerge - Specify whether the request should block until the merge process is finished (default: true)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.optimize = ca({\n  params: {\n    flush: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    maxNumSegments: {\n      type: 'number',\n      name: 'max_num_segments'\n    },\n    onlyExpungeDeletes: {\n      type: 'boolean',\n      name: 'only_expunge_deletes'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    waitForMerge: {\n      type: 'boolean',\n      name: 'wait_for_merge'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_optimize',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_optimize'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.putAlias](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.\n * @param {String} params.name - The name of the alias to be created or updated\n */\napi.indices.prototype.putAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putMapping](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-put-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.updateAllTypes - Whether to update the mapping for all fields with the same name across all types or not\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.\n * @param {String} params.type - The name of the document type\n */\napi.indices.prototype.putMapping = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    updateAllTypes: {\n      type: 'boolean',\n      name: 'update_all_types'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putSettings](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.putSettings = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.order - The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)\n * @param {Boolean} params.create - Whether the index template should only be added if new or can also replace an existing one\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.putTemplate = ca({\n  params: {\n    order: {\n      type: 'number'\n    },\n    create: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed) in the search request to warm\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices in the search request to warm. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both, in the search request to warm.\n * @param {Boolean} params.requestCache - Specify whether the request to be warmed should use the request cache, defaults to index level setting\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to register the warmer for; use `_all` or omit to perform the operation on all indices\n * @param {String} params.name - The name of the warmer\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types\n */\napi.indices.prototype.putWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    requestCache: {\n      type: 'boolean',\n      name: 'request_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.recovery](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.detailed - Whether to display detailed information about shard recovery\n * @param {Boolean} params.activeOnly - Display only those recoveries that are currently on-going\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.recovery = ca({\n  params: {\n    detailed: {\n      type: 'boolean',\n      'default': false\n    },\n    activeOnly: {\n      type: 'boolean',\n      'default': false,\n      name: 'active_only'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_recovery',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.refresh](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-refresh.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.force - Force a refresh even if not required\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.refresh = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    force: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_refresh',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_refresh'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.segments](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.verbose - Includes detailed memory usage by Lucene.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.segments = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    verbose: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_segments',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_segments'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.shardStores](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-shards-stores.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.status - A comma-separated list of statuses used to filter on shards to get store information for\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.shardStores = ca({\n  params: {\n    status: {\n      type: 'list',\n      options: [\n        'green',\n        'yellow',\n        'red',\n        'all'\n      ]\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_shard_stores',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_shard_stores'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.stats](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=indices] - Return stats aggregated at cluster, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned the specific metrics.\n */\napi.indices.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'list'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'indices',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_stats/<%=metric%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_stats'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.updateAliases](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Request timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.indices.prototype.updateAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_aliases'\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.upgrade](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.waitForCompletion - Specify whether the request should block until the all segments are upgraded (default: false)\n * @param {Boolean} params.onlyAncientSegments - If true, only ancient (an older Lucene major release) segments will be upgraded\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.upgrade = ca({\n  params: {\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      name: 'wait_for_completion'\n    },\n    onlyAncientSegments: {\n      type: 'boolean',\n      name: 'only_ancient_segments'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.validateQuery](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-validate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.explain - Return detailed information about the error\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {Boolean} params.rewrite - Provide a more detailed explanation showing the actual Lucene query that will be executed.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.validateQuery = ca({\n  params: {\n    explain: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    rewrite: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_validate/query'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [info](http://www.elastic.co/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.info = ca({\n  url: {\n    fmt: '/'\n  }\n});\n\n/**\n * Perform a [mget](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/docs-multi-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.mget = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mget'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mpercolate](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The index of the document being count percolated to use as default\n * @param {String} params.type - The type of the document being percolated to use as default.\n */\napi.mpercolate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mpercolate'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [msearch](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-multi-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to use as default\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to use as default\n */\napi.msearch = ca({\n  params: {\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_msearch'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mtermvectors](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/docs-multi-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.ids - A comma-separated list of documents ids. You must define ids as parameter or set \"ids\" or \"docs\" in the request body\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.routing - Specific routing value. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.parent - Parent id of documents. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} params.realtime - Specifies if requests are real-time as opposed to near-real-time (default: true).\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n */\napi.mtermvectors = ca({\n  params: {\n    ids: {\n      type: 'list',\n      required: false\n    },\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    },\n    realtime: {\n      type: 'boolean',\n      required: false\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mtermvectors'\n    }\n  ],\n  method: 'POST'\n});\n\napi.nodes = namespace();\n\n/**\n * Perform a [nodes.hotThreads](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cluster-nodes-hot-threads.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.interval - The interval for the second sampling of threads\n * @param {Number} params.snapshots - Number of samples of thread stacktrace (default: 10)\n * @param {Number} params.threads - Specify the number of threads to provide information for (default: 3)\n * @param {Boolean} params.ignoreIdleThreads - Don't show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)\n * @param {String} params.type - The type to sample (default: cpu)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.hotThreads = ca({\n  params: {\n    interval: {\n      type: 'time'\n    },\n    snapshots: {\n      type: 'number'\n    },\n    threads: {\n      type: 'number'\n    },\n    ignoreIdleThreads: {\n      type: 'boolean',\n      name: 'ignore_idle_threads'\n    },\n    type: {\n      type: 'enum',\n      options: [\n        'cpu',\n        'wait',\n        'block'\n      ]\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/hotthreads',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/hotthreads'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.info](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cluster-nodes-info.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.metric - A comma-separated list of metrics you wish returned. Leave empty to return all.\n */\napi.nodes.prototype.info = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.stats](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/cluster-nodes-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=node] - Return indices stats aggregated at node, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n * @param {String, String[], Boolean} params.indexMetric - Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'node',\n      options: [\n        'node',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [percolate](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to percolate document into. Defaults to type.\n * @param {String} params.percolateRouting - The routing value to use when percolating the existing document.\n * @param {String} params.percolatePreference - Which shard to prefer when executing the percolate request.\n * @param {String} params.percolateFormat - Return an array of matching query IDs instead of objects\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being percolated.\n * @param {String} params.type - The type of the document being percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.percolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    percolateRouting: {\n      type: 'string',\n      name: 'percolate_routing'\n    },\n    percolatePreference: {\n      type: 'string',\n      name: 'percolate_preference'\n    },\n    percolateFormat: {\n      type: 'enum',\n      options: [\n        'ids'\n      ],\n      name: 'percolate_format'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [ping](http://www.elastic.co/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.ping = ca({\n  url: {\n    fmt: '/'\n  },\n  requestTimeout: 3000,\n  method: 'HEAD'\n});\n\n/**\n * Perform a [putScript](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.putScript = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [putTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.putTemplate = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [renderSearchTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.id - The id of the stored search template\n */\napi.renderSearchTemplate = ca({\n  urls: [\n    {\n      fmt: '/_render/template/<%=id%>',\n      req: {\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_render/template'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [scroll](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.scrollId - The scroll ID\n */\napi.scroll = ca({\n  params: {\n    scroll: {\n      type: 'duration'\n    },\n    scrollId: {\n      type: 'string',\n      name: 'scroll_id'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  paramAsBody: 'scrollId',\n  method: 'POST'\n});\n\n/**\n * Perform a [search](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.explain - Specify whether to return detailed information about score computation as part of a hit\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return as part of a hit\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields to return as the field data representation of a field for each hit\n * @param {Number} params.from - Starting offset (default: 0)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {Number} params.size - Number of hits to return (default: 10)\n * @param {String, String[], Boolean} params.sort - A comma-separated list of <field>:<direction> pairs\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.terminateAfter - The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.\n * @param {String, String[], Boolean} params.stats - Specific 'tag' of the request for logging and statistical purposes\n * @param {String} params.suggestField - Specify which field to use for suggestions\n * @param {String} [params.suggestMode=missing] - Specify suggest mode\n * @param {Number} params.suggestSize - How many suggestions to return in response\n * @param {Text} params.suggestText - The source text for which the suggestions should be returned\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.trackScores - Whether to calculate and return scores even if they are not used for sorting\n * @param {Boolean} params.version - Specify whether to return document version as part of a hit\n * @param {Boolean} params.requestCache - Specify if request cache should be used for this request or not, defaults to index level setting\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.search = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    from: {\n      type: 'number'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'dfs_query_then_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    },\n    size: {\n      type: 'number'\n    },\n    sort: {\n      type: 'list'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    terminateAfter: {\n      type: 'number',\n      name: 'terminate_after'\n    },\n    stats: {\n      type: 'list'\n    },\n    suggestField: {\n      type: 'string',\n      name: 'suggest_field'\n    },\n    suggestMode: {\n      type: 'enum',\n      'default': 'missing',\n      options: [\n        'missing',\n        'popular',\n        'always'\n      ],\n      name: 'suggest_mode'\n    },\n    suggestSize: {\n      type: 'number',\n      name: 'suggest_size'\n    },\n    suggestText: {\n      type: 'text',\n      name: 'suggest_text'\n    },\n    timeout: {\n      type: 'time'\n    },\n    trackScores: {\n      type: 'boolean',\n      name: 'track_scores'\n    },\n    version: {\n      type: 'boolean'\n    },\n    requestCache: {\n      type: 'boolean',\n      name: 'request_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchExists](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.searchExists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/exists',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/exists',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/exists'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchShards](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchShards = ca({\n  params: {\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search_shards',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search_shards',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search_shards'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchTemplate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/template'\n    }\n  ],\n  method: 'POST'\n});\n\napi.snapshot = namespace();\n\n/**\n * Perform a [snapshot.create](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.create = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.createRepository](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.verify - Whether to verify the repository after creation\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.createRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    verify: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.delete](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype['delete'] = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.deleteRepository](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.deleteRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.get](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.get = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [snapshot.getRepository](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.getRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>',\n      req: {\n        repository: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.restore](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.restore = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_restore',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.status](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.status = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        },\n        snapshot: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/<%=repository%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/_status'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.verifyRepository](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.verifyRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/_verify',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [suggest](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-suggesters.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n */\napi.suggest = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_suggest',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_suggest'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [termvectors](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/docs-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned.\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.\n * @param {Boolean} params.dfs - Specifies if distributed frequencies should be returned instead shard frequencies.\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return.\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned.\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned.\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random).\n * @param {String} params.routing - Specific routing value.\n * @param {String} params.parent - Parent id of documents.\n * @param {Boolean} params.realtime - Specifies if request is real-time as opposed to near-real-time (default: true).\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n * @param {String} params.id - The id of the document, when not specified a doc param should be supplied.\n */\napi.termvectors = ca({\n  params: {\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    dfs: {\n      type: 'boolean',\n      'default': false,\n      required: false\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    },\n    realtime: {\n      type: 'boolean',\n      required: false\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_termvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_termvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [update](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/docs-update.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.lang - The script language (default: groovy)\n * @param {String} params.parent - ID of the parent document. Is is only used for routing and when for the upsert request\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {Number} params.retryOnConflict - Specify how many times should the operation be retried when a conflict occurs (default: 0)\n * @param {String} params.routing - Specific routing value\n * @param {Anything} params.script - The URL-encoded script definition (instead of using request body)\n * @param {Anything} params.scriptId - The id of a stored script\n * @param {Boolean} params.scriptedUpsert - True if the script referenced in script or script_id should be called to perform inserts - defaults to false\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.update = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    fields: {\n      type: 'list'\n    },\n    lang: {\n      type: 'string'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    retryOnConflict: {\n      type: 'number',\n      name: 'retry_on_conflict'\n    },\n    routing: {\n      type: 'string'\n    },\n    script: {},\n    scriptId: {\n      name: 'script_id'\n    },\n    scriptedUpsert: {\n      type: 'boolean',\n      name: 'scripted_upsert'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_update',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [create](http://www.elastic.co/guide/en/elasticsearch/reference/2.1/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.create = ca.proxy(api.index, {\n  transform: function (params) {\n    params.op_type = 'create';\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/apis/2_1.js\n ** module id = 125\n ** module chunks = 0\n **/","var ca = require('../client_action').makeFactoryWithModifier(function (spec) {\n  return require('../utils').merge(spec, {\n    params: {\n      filterPath: {\n        type: 'list',\n        name: 'filter_path'\n      }\n    }\n  });\n});\nvar namespace = require('../client_action').namespaceFactory;\nvar api = module.exports = {};\n\napi._namespaces = ['cat', 'cluster', 'indices', 'nodes', 'snapshot'];\n\n/**\n * Perform a [bulk](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/docs-bulk.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.type - Default document type for items which don't provide one\n * @param {String, String[], Boolean} params.fields - Default comma-separated list of fields to return in the response for updates\n * @param {String} params.index - Default index for items which don't provide one\n */\napi.bulk = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    type: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_bulk'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\napi.cat = namespace();\n\n/**\n * Perform a [cat.aliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.cat.prototype.aliases = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.allocation](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat-allocation.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information\n */\napi.cat.prototype.allocation = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/allocation/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/allocation'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.count](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.count = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/count/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/count'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.fielddata](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat-fielddata.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return the fielddata size\n */\napi.cat.prototype.fielddata = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/fielddata/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/fielddata'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.health](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} [params.ts=true] - Set to false to disable timestamping\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.health = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    ts: {\n      type: 'boolean',\n      'default': true\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/health'\n  }\n});\n\n/**\n * Perform a [cat.help](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.help - Return help information\n */\napi.cat.prototype.help = ca({\n  params: {\n    help: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat'\n  }\n});\n\n/**\n * Perform a [cat.indices](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat-indices.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.pri - Set to true to return stats only for primary shards\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.indices = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    pri: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/indices/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/indices'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.master](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat-master.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.master = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/master'\n  }\n});\n\n/**\n * Perform a [cat.nodeattrs](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat-nodeattrs.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodeattrs = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodeattrs'\n  }\n});\n\n/**\n * Perform a [cat.nodes](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat-nodes.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodes = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodes'\n  }\n});\n\n/**\n * Perform a [cat.pendingTasks](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat-pending-tasks.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cat.plugins](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat-plugins.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.plugins = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/plugins'\n  }\n});\n\n/**\n * Perform a [cat.recovery](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.recovery = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/recovery/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.segments](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.segments = ca({\n  params: {\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/segments/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/segments'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.shards](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.shards = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/shards/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/shards'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.threadPool](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cat-thread-pool.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {Boolean} params.fullId - Enables displaying the complete node ids\n */\napi.cat.prototype.threadPool = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fullId: {\n      type: 'boolean',\n      'default': false,\n      name: 'full_id'\n    }\n  },\n  url: {\n    fmt: '/_cat/thread_pool'\n  }\n});\n\n/**\n * Perform a [clearScroll](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.scrollId - A comma-separated list of scroll IDs to clear\n */\napi.clearScroll = ca({\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  method: 'DELETE'\n});\n\napi.cluster = namespace();\n\n/**\n * Perform a [cluster.getSettings](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.getSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  }\n});\n\n/**\n * Perform a [cluster.health](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cluster-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.level=cluster] - Specify the level of detail for returned information\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.waitForActiveShards - Wait until the specified number of shards is active\n * @param {String} params.waitForNodes - Wait until the specified number of nodes is available\n * @param {Number} params.waitForRelocatingShards - Wait until the specified number of relocating shards is finished\n * @param {String} params.waitForStatus - Wait until cluster is in a specific state\n * @param {String, String[], Boolean} params.index - Limit the information returned to a specific index\n */\napi.cluster.prototype.health = ca({\n  params: {\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    waitForActiveShards: {\n      type: 'number',\n      name: 'wait_for_active_shards'\n    },\n    waitForNodes: {\n      type: 'string',\n      name: 'wait_for_nodes'\n    },\n    waitForRelocatingShards: {\n      type: 'number',\n      name: 'wait_for_relocating_shards'\n    },\n    waitForStatus: {\n      type: 'enum',\n      'default': null,\n      options: [\n        'green',\n        'yellow',\n        'red'\n      ],\n      name: 'wait_for_status'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/health/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/health'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.pendingTasks](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cluster-pending.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.cluster.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_cluster/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cluster.putSettings](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.putSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [cluster.reroute](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cluster-reroute.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.dryRun - Simulate the operation only and return the resulting state\n * @param {Boolean} params.explain - Return an explanation of why the commands can or cannot be executed\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics. Defaults to all but metadata\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.reroute = ca({\n  params: {\n    dryRun: {\n      type: 'boolean',\n      name: 'dry_run'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    metric: {\n      type: 'list',\n      options: [\n        '_all',\n        'blocks',\n        'metadata',\n        'nodes',\n        'routing_table',\n        'master_node',\n        'version'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/reroute'\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [cluster.state](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cluster-state.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n */\napi.cluster.prototype.state = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/state/<%=metric%>/<%=index%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'routing_nodes',\n            'master_node',\n            'version'\n          ]\n        },\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'routing_nodes',\n            'master_node',\n            'version'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.stats](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cluster-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.cluster.prototype.stats = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/stats/nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [count](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.count = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_count'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [countPercolate](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to count percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to count percolate document into. Defaults to type.\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being count percolated.\n * @param {String} params.type - The type of the document being count percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.countPercolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [delete](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/docs-delete.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Specific write consistency setting for the operation\n * @param {String} params.parent - ID of parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi['delete'] = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteScript](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.deleteScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.deleteTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [exists](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.exists = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [explain](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-explain.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)\n * @param {String} params.analyzer - The analyzer for the query string query\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The default field for query string query (default: _all)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.explain = ca({\n  params: {\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_explain',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [fieldStats](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-field-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for to get field statistics for (min value, max value, and more)\n * @param {String} [params.level=cluster] - Defines if field stats should be returned on a per index level or on a cluster wide level\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.fieldStats = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'indices',\n        'cluster'\n      ]\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_field_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_field_stats'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [get](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.get = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getScript](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.getScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getSource](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document; use `_all` to fetch the first document matching the ID across all types\n */\napi.getSource = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_source',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.getTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [index](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.index = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\napi.indices = namespace();\n\n/**\n * Perform a [indices.analyze](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-analyze.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The name of the analyzer to use\n * @param {String, String[], Boolean} params.charFilters - A comma-separated list of character filters to use for the analysis\n * @param {String} params.field - Use the analyzer configured for this field (instead of passing the analyzer name)\n * @param {String, String[], Boolean} params.filters - A comma-separated list of filters to use for the analysis\n * @param {String} params.index - The name of the index to scope the operation\n * @param {Boolean} params.preferLocal - With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)\n * @param {String, String[], Boolean} params.text - The text on which the analysis should be performed (when request body is not used)\n * @param {String} params.tokenizer - The name of the tokenizer to use for the analysis\n * @param {String} [params.format=detailed] - Format of the output\n */\napi.indices.prototype.analyze = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    charFilters: {\n      type: 'list',\n      name: 'char_filters'\n    },\n    field: {\n      type: 'string'\n    },\n    filters: {\n      type: 'list'\n    },\n    index: {\n      type: 'string'\n    },\n    preferLocal: {\n      type: 'boolean',\n      name: 'prefer_local'\n    },\n    text: {\n      type: 'list'\n    },\n    tokenizer: {\n      type: 'string'\n    },\n    format: {\n      type: 'enum',\n      'default': 'detailed',\n      options: [\n        'detailed',\n        'text'\n      ]\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_analyze',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_analyze'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.clearCache](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-clearcache.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.fieldData - Clear field data\n * @param {Boolean} params.fielddata - Clear field data\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to clear when using the `field_data` parameter (default: all)\n * @param {Boolean} params.query - Clear query caches\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index name to limit the operation\n * @param {Boolean} params.recycler - Clear the recycler cache\n * @param {Boolean} params.request - Clear request cache\n */\napi.indices.prototype.clearCache = ca({\n  params: {\n    fieldData: {\n      type: 'boolean',\n      name: 'field_data'\n    },\n    fielddata: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    query: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    index: {\n      type: 'list'\n    },\n    recycler: {\n      type: 'boolean'\n    },\n    request: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_cache/clear',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cache/clear'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.close](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma separated list of indices to close\n */\napi.indices.prototype.close = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_close',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.create](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-create-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.updateAllTypes - Whether to update the mapping for all fields with the same name across all types or not\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.create = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    updateAllTypes: {\n      type: 'boolean',\n      name: 'update_all_types'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.delete](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-delete-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices\n */\napi.indices.prototype['delete'] = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteAlias](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names (supports wildcards); use `_all` for all indices\n * @param {String, String[], Boolean} params.name - A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.\n */\napi.indices.prototype.deleteAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.deleteTemplate = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.name - A comma-separated list of warmer names to delete (supports wildcards); use `_all` to delete all warmers in the specified indices. You must specify a name either in the uri or in the parameters.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to delete warmers from (supports wildcards); use `_all` to perform the operation on all indices.\n */\napi.indices.prototype.deleteWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    name: {\n      type: 'list'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_warmer/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.exists](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to check\n */\napi.indices.prototype.exists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsAlias](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.existsAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.existsTemplate = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsType](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-types-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` to check the types across all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to check\n */\napi.indices.prototype.existsType = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      type: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.flush](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.force - Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)\n * @param {Boolean} params.waitIfOngoing - If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is false and will cause an exception to be thrown on the shard level if another flush operation is already running.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flush = ca({\n  params: {\n    force: {\n      type: 'boolean'\n    },\n    waitIfOngoing: {\n      type: 'boolean',\n      name: 'wait_if_ongoing'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.flushSynced](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-synced-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flushSynced = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush/synced',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush/synced'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.get](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-get-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Ignore unavailable indexes (default: false)\n * @param {Boolean} params.allowNoIndices - Ignore if a wildcard expression resolves to no concrete indices (default: false)\n * @param {String} [params.expandWildcards=open] - Whether wildcard expressions should get expanded to open or closed indices (default: open)\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return version and creation date values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.feature - A comma-separated list of features\n */\napi.indices.prototype.get = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=feature%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        feature: {\n          type: 'list',\n          options: [\n            '_settings',\n            '_mappings',\n            '_warmers',\n            '_aliases'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAlias](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.getAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAliases](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to filter\n */\napi.indices.prototype.getAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_aliases/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_aliases',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getFieldMapping](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-get-field-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.includeDefaults - Whether the default mapping values should be returned as well\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields\n */\napi.indices.prototype.getFieldMapping = ca({\n  params: {\n    includeDefaults: {\n      type: 'boolean',\n      name: 'include_defaults'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>/field/<%=fields%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping/field/<%=fields%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>/field/<%=fields%>',\n      req: {\n        type: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/field/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getMapping](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-get-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n */\napi.indices.prototype.getMapping = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getSettings](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-get-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.human - Whether to return version and creation date values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the settings that should be included\n */\napi.indices.prototype.getSettings = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    local: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.name - The comma separated names of the index templates\n */\napi.indices.prototype.getTemplate = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_template/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_template'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getUpgrade](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.getUpgrade = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the warmer (supports wildcards); leave empty to get all warmers\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.getWarmer = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.open](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma separated list of indices to open\n */\napi.indices.prototype.open = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'closed',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_open',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.optimize](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-optimize.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flush - Specify whether the index should be flushed after performing the operation (default: true)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.maxNumSegments - The number of segments the index should be merged into (default: dynamic)\n * @param {Boolean} params.onlyExpungeDeletes - Specify whether the operation should only expunge deleted documents\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.waitForMerge - Specify whether the request should block until the merge process is finished (default: true)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.optimize = ca({\n  params: {\n    flush: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    maxNumSegments: {\n      type: 'number',\n      name: 'max_num_segments'\n    },\n    onlyExpungeDeletes: {\n      type: 'boolean',\n      name: 'only_expunge_deletes'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    waitForMerge: {\n      type: 'boolean',\n      name: 'wait_for_merge'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_optimize',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_optimize'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.putAlias](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.\n * @param {String} params.name - The name of the alias to be created or updated\n */\napi.indices.prototype.putAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putMapping](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-put-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.updateAllTypes - Whether to update the mapping for all fields with the same name across all types or not\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.\n * @param {String} params.type - The name of the document type\n */\napi.indices.prototype.putMapping = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    updateAllTypes: {\n      type: 'boolean',\n      name: 'update_all_types'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putSettings](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.putSettings = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.order - The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)\n * @param {Boolean} params.create - Whether the index template should only be added if new or can also replace an existing one\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.putTemplate = ca({\n  params: {\n    order: {\n      type: 'number'\n    },\n    create: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed) in the search request to warm\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices in the search request to warm. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both, in the search request to warm.\n * @param {Boolean} params.requestCache - Specify whether the request to be warmed should use the request cache, defaults to index level setting\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to register the warmer for; use `_all` or omit to perform the operation on all indices\n * @param {String} params.name - The name of the warmer\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types\n */\napi.indices.prototype.putWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    requestCache: {\n      type: 'boolean',\n      name: 'request_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.recovery](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.detailed - Whether to display detailed information about shard recovery\n * @param {Boolean} params.activeOnly - Display only those recoveries that are currently on-going\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.recovery = ca({\n  params: {\n    detailed: {\n      type: 'boolean',\n      'default': false\n    },\n    activeOnly: {\n      type: 'boolean',\n      'default': false,\n      name: 'active_only'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_recovery',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.refresh](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-refresh.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.force - Force a refresh even if not required\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.refresh = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    force: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_refresh',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_refresh'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.segments](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.verbose - Includes detailed memory usage by Lucene.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.segments = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    verbose: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_segments',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_segments'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.shardStores](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-shards-stores.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.status - A comma-separated list of statuses used to filter on shards to get store information for\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.shardStores = ca({\n  params: {\n    status: {\n      type: 'list',\n      options: [\n        'green',\n        'yellow',\n        'red',\n        'all'\n      ]\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_shard_stores',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_shard_stores'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.stats](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=indices] - Return stats aggregated at cluster, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned the specific metrics.\n */\napi.indices.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'list'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'indices',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_stats/<%=metric%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_stats'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.updateAliases](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Request timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.indices.prototype.updateAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_aliases'\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.upgrade](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.waitForCompletion - Specify whether the request should block until the all segments are upgraded (default: false)\n * @param {Boolean} params.onlyAncientSegments - If true, only ancient (an older Lucene major release) segments will be upgraded\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.upgrade = ca({\n  params: {\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      name: 'wait_for_completion'\n    },\n    onlyAncientSegments: {\n      type: 'boolean',\n      name: 'only_ancient_segments'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.validateQuery](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-validate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.explain - Return detailed information about the error\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {Boolean} params.rewrite - Provide a more detailed explanation showing the actual Lucene query that will be executed.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.validateQuery = ca({\n  params: {\n    explain: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    rewrite: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_validate/query'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [info](http://www.elastic.co/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.info = ca({\n  url: {\n    fmt: '/'\n  }\n});\n\n/**\n * Perform a [mget](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/docs-multi-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.mget = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mget'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mpercolate](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The index of the document being count percolated to use as default\n * @param {String} params.type - The type of the document being percolated to use as default.\n */\napi.mpercolate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mpercolate'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [msearch](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-multi-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to use as default\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to use as default\n */\napi.msearch = ca({\n  params: {\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_msearch'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mtermvectors](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/docs-multi-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.ids - A comma-separated list of documents ids. You must define ids as parameter or set \"ids\" or \"docs\" in the request body\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.routing - Specific routing value. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.parent - Parent id of documents. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} params.realtime - Specifies if requests are real-time as opposed to near-real-time (default: true).\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n */\napi.mtermvectors = ca({\n  params: {\n    ids: {\n      type: 'list',\n      required: false\n    },\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    },\n    realtime: {\n      type: 'boolean',\n      required: false\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mtermvectors'\n    }\n  ],\n  method: 'POST'\n});\n\napi.nodes = namespace();\n\n/**\n * Perform a [nodes.hotThreads](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cluster-nodes-hot-threads.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.interval - The interval for the second sampling of threads\n * @param {Number} params.snapshots - Number of samples of thread stacktrace (default: 10)\n * @param {Number} params.threads - Specify the number of threads to provide information for (default: 3)\n * @param {Boolean} params.ignoreIdleThreads - Don't show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)\n * @param {String} params.type - The type to sample (default: cpu)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.hotThreads = ca({\n  params: {\n    interval: {\n      type: 'time'\n    },\n    snapshots: {\n      type: 'number'\n    },\n    threads: {\n      type: 'number'\n    },\n    ignoreIdleThreads: {\n      type: 'boolean',\n      name: 'ignore_idle_threads'\n    },\n    type: {\n      type: 'enum',\n      options: [\n        'cpu',\n        'wait',\n        'block'\n      ]\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/hotthreads',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/hotthreads'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.info](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cluster-nodes-info.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.metric - A comma-separated list of metrics you wish returned. Leave empty to return all.\n */\napi.nodes.prototype.info = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.stats](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/cluster-nodes-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=node] - Return indices stats aggregated at node, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n * @param {String, String[], Boolean} params.indexMetric - Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'node',\n      options: [\n        'node',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [percolate](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to percolate document into. Defaults to type.\n * @param {String} params.percolateRouting - The routing value to use when percolating the existing document.\n * @param {String} params.percolatePreference - Which shard to prefer when executing the percolate request.\n * @param {String} params.percolateFormat - Return an array of matching query IDs instead of objects\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being percolated.\n * @param {String} params.type - The type of the document being percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.percolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    percolateRouting: {\n      type: 'string',\n      name: 'percolate_routing'\n    },\n    percolatePreference: {\n      type: 'string',\n      name: 'percolate_preference'\n    },\n    percolateFormat: {\n      type: 'enum',\n      options: [\n        'ids'\n      ],\n      name: 'percolate_format'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [ping](http://www.elastic.co/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.ping = ca({\n  url: {\n    fmt: '/'\n  },\n  requestTimeout: 3000,\n  method: 'HEAD'\n});\n\n/**\n * Perform a [putScript](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.putScript = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [putTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.putTemplate = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [renderSearchTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/2.0/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.id - The id of the stored search template\n */\napi.renderSearchTemplate = ca({\n  urls: [\n    {\n      fmt: '/_render/template/<%=id%>',\n      req: {\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_render/template'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [scroll](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.scrollId - The scroll ID\n */\napi.scroll = ca({\n  params: {\n    scroll: {\n      type: 'duration'\n    },\n    scrollId: {\n      type: 'string',\n      name: 'scroll_id'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  paramAsBody: 'scrollId',\n  method: 'POST'\n});\n\n/**\n * Perform a [search](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.explain - Specify whether to return detailed information about score computation as part of a hit\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return as part of a hit\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields to return as the field data representation of a field for each hit\n * @param {Number} params.from - Starting offset (default: 0)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {Number} params.size - Number of hits to return (default: 10)\n * @param {String, String[], Boolean} params.sort - A comma-separated list of <field>:<direction> pairs\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.terminateAfter - The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.\n * @param {String, String[], Boolean} params.stats - Specific 'tag' of the request for logging and statistical purposes\n * @param {String} params.suggestField - Specify which field to use for suggestions\n * @param {String} [params.suggestMode=missing] - Specify suggest mode\n * @param {Number} params.suggestSize - How many suggestions to return in response\n * @param {Text} params.suggestText - The source text for which the suggestions should be returned\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.trackScores - Whether to calculate and return scores even if they are not used for sorting\n * @param {Boolean} params.version - Specify whether to return document version as part of a hit\n * @param {Boolean} params.requestCache - Specify if request cache should be used for this request or not, defaults to index level setting\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.search = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    from: {\n      type: 'number'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'dfs_query_then_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    },\n    size: {\n      type: 'number'\n    },\n    sort: {\n      type: 'list'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    terminateAfter: {\n      type: 'number',\n      name: 'terminate_after'\n    },\n    stats: {\n      type: 'list'\n    },\n    suggestField: {\n      type: 'string',\n      name: 'suggest_field'\n    },\n    suggestMode: {\n      type: 'enum',\n      'default': 'missing',\n      options: [\n        'missing',\n        'popular',\n        'always'\n      ],\n      name: 'suggest_mode'\n    },\n    suggestSize: {\n      type: 'number',\n      name: 'suggest_size'\n    },\n    suggestText: {\n      type: 'text',\n      name: 'suggest_text'\n    },\n    timeout: {\n      type: 'time'\n    },\n    trackScores: {\n      type: 'boolean',\n      name: 'track_scores'\n    },\n    version: {\n      type: 'boolean'\n    },\n    requestCache: {\n      type: 'boolean',\n      name: 'request_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchExists](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.searchExists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/exists',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/exists',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/exists'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchShards](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchShards = ca({\n  params: {\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search_shards',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search_shards',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search_shards'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchTemplate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/template'\n    }\n  ],\n  method: 'POST'\n});\n\napi.snapshot = namespace();\n\n/**\n * Perform a [snapshot.create](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.create = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.createRepository](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.verify - Whether to verify the repository after creation\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.createRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    verify: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.delete](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype['delete'] = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.deleteRepository](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.deleteRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.get](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.get = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [snapshot.getRepository](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.getRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>',\n      req: {\n        repository: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.restore](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.restore = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_restore',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.status](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.status = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        },\n        snapshot: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/<%=repository%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/_status'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.verifyRepository](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.verifyRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/_verify',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [suggest](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-suggesters.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n */\napi.suggest = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_suggest',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_suggest'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [termvectors](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/docs-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned.\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.\n * @param {Boolean} params.dfs - Specifies if distributed frequencies should be returned instead shard frequencies.\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return.\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned.\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned.\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random).\n * @param {String} params.routing - Specific routing value.\n * @param {String} params.parent - Parent id of documents.\n * @param {Boolean} params.realtime - Specifies if request is real-time as opposed to near-real-time (default: true).\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n * @param {String} params.id - The id of the document, when not specified a doc param should be supplied.\n */\napi.termvectors = ca({\n  params: {\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    dfs: {\n      type: 'boolean',\n      'default': false,\n      required: false\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    },\n    realtime: {\n      type: 'boolean',\n      required: false\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_termvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_termvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [update](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/docs-update.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.lang - The script language (default: groovy)\n * @param {String} params.parent - ID of the parent document. Is is only used for routing and when for the upsert request\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {Number} params.retryOnConflict - Specify how many times should the operation be retried when a conflict occurs (default: 0)\n * @param {String} params.routing - Specific routing value\n * @param {Anything} params.script - The URL-encoded script definition (instead of using request body)\n * @param {Anything} params.scriptId - The id of a stored script\n * @param {Boolean} params.scriptedUpsert - True if the script referenced in script or script_id should be called to perform inserts - defaults to false\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.update = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    fields: {\n      type: 'list'\n    },\n    lang: {\n      type: 'string'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    retryOnConflict: {\n      type: 'number',\n      name: 'retry_on_conflict'\n    },\n    routing: {\n      type: 'string'\n    },\n    script: {},\n    scriptId: {\n      name: 'script_id'\n    },\n    scriptedUpsert: {\n      type: 'boolean',\n      name: 'scripted_upsert'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_update',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [create](http://www.elastic.co/guide/en/elasticsearch/reference/2.0/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.create = ca.proxy(api.index, {\n  transform: function (params) {\n    params.op_type = 'create';\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/apis/2_0.js\n ** module id = 126\n ** module chunks = 0\n **/","var ca = require('../client_action').makeFactoryWithModifier(function (spec) {\n  return require('../utils').merge(spec, {\n    params: {\n      filterPath: {\n        type: 'list',\n        name: 'filter_path'\n      }\n    }\n  });\n});\nvar namespace = require('../client_action').namespaceFactory;\nvar api = module.exports = {};\n\napi._namespaces = ['cat', 'cluster', 'indices', 'nodes', 'snapshot'];\n\n/**\n * Perform a [bulk](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/docs-bulk.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Explicitely set the replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.type - Default document type for items which don't provide one\n * @param {String} params.index - Default index for items which don't provide one\n */\napi.bulk = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    type: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_bulk'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\napi.cat = namespace();\n\n/**\n * Perform a [cat.aliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.cat.prototype.aliases = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.allocation](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cat-allocation.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information\n */\napi.cat.prototype.allocation = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/allocation/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/allocation'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.count](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cat-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.count = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/count/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/count'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.fielddata](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/cat-fielddata.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return the fielddata size\n */\napi.cat.prototype.fielddata = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/fielddata/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/fielddata'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.health](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cat-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} [params.ts=true] - Set to false to disable timestamping\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.health = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    ts: {\n      type: 'boolean',\n      'default': true\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/health'\n  }\n});\n\n/**\n * Perform a [cat.help](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.help - Return help information\n */\napi.cat.prototype.help = ca({\n  params: {\n    help: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat'\n  }\n});\n\n/**\n * Perform a [cat.indices](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cat-indices.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.pri - Set to true to return stats only for primary shards\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.indices = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    pri: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/indices/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/indices'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.master](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cat-master.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.master = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/master'\n  }\n});\n\n/**\n * Perform a [cat.nodes](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cat-nodes.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodes = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodes'\n  }\n});\n\n/**\n * Perform a [cat.pendingTasks](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cat-pending-tasks.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cat.plugins](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/cat-plugins.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.plugins = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/plugins'\n  }\n});\n\n/**\n * Perform a [cat.recovery](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cat-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.recovery = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/recovery/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.segments](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/cat-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} [params.v=true] - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.segments = ca({\n  params: {\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': true\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/segments/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/segments'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.shards](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cat-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.shards = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/shards/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/shards'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.threadPool](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/cat-thread-pool.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {Boolean} params.fullId - Enables displaying the complete node ids\n */\napi.cat.prototype.threadPool = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fullId: {\n      type: 'boolean',\n      'default': false,\n      name: 'full_id'\n    }\n  },\n  url: {\n    fmt: '/_cat/thread_pool'\n  }\n});\n\n/**\n * Perform a [clearScroll](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.scrollId - A comma-separated list of scroll IDs to clear\n */\napi.clearScroll = ca({\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  method: 'DELETE'\n});\n\napi.cluster = namespace();\n\n/**\n * Perform a [cluster.getSettings](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.getSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  }\n});\n\n/**\n * Perform a [cluster.health](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cluster-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.level=cluster] - Specify the level of detail for returned information\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.waitForActiveShards - Wait until the specified number of shards is active\n * @param {String} params.waitForNodes - Wait until the specified number of nodes is available\n * @param {Number} params.waitForRelocatingShards - Wait until the specified number of relocating shards is finished\n * @param {String} params.waitForStatus - Wait until cluster is in a specific state\n * @param {String} params.index - Limit the information returned to a specific index\n */\napi.cluster.prototype.health = ca({\n  params: {\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    waitForActiveShards: {\n      type: 'number',\n      name: 'wait_for_active_shards'\n    },\n    waitForNodes: {\n      type: 'string',\n      name: 'wait_for_nodes'\n    },\n    waitForRelocatingShards: {\n      type: 'number',\n      name: 'wait_for_relocating_shards'\n    },\n    waitForStatus: {\n      type: 'enum',\n      'default': null,\n      options: [\n        'green',\n        'yellow',\n        'red'\n      ],\n      name: 'wait_for_status'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/health/<%=index%>',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/health'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.pendingTasks](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cluster-pending.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.cluster.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_cluster/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cluster.putSettings](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.putSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [cluster.reroute](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cluster-reroute.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.dryRun - Simulate the operation only and return the resulting state\n * @param {Boolean} params.explain - Return an explanation of why the commands can or cannot be executed\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics. Defaults to all but metadata\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.reroute = ca({\n  params: {\n    dryRun: {\n      type: 'boolean',\n      name: 'dry_run'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    metric: {\n      type: 'list',\n      options: [\n        '_all',\n        'blocks',\n        'metadata',\n        'nodes',\n        'routing_table',\n        'master_node',\n        'version'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/reroute'\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [cluster.state](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cluster-state.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n */\napi.cluster.prototype.state = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/state/<%=metric%>/<%=index%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'routing_nodes',\n            'master_node',\n            'version'\n          ]\n        },\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'routing_nodes',\n            'master_node',\n            'version'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.stats](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cluster-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.cluster.prototype.stats = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/stats/nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [count](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/search-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.count = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_count'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [countPercolate](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to count percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to count percolate document into. Defaults to type.\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being count percolated.\n * @param {String} params.type - The type of the document being count percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.countPercolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [delete](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/docs-delete.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Specific write consistency setting for the operation\n * @param {String} params.parent - ID of parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi['delete'] = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteByQuery](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/docs-delete-by-query.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {String} params.consistency - Specific write consistency setting for the operation\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the operation\n */\napi.deleteByQuery = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteScript](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.deleteScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.deleteTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [exists](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.exists = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [explain](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/search-explain.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)\n * @param {String} params.analyzer - The analyzer for the query string query\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The default field for query string query (default: _all)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.explain = ca({\n  params: {\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_explain',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [fieldStats](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/search-field-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for to get field statistics for (min value, max value, and more)\n * @param {String} [params.level=cluster] - Defines if field stats should be returned on a per index level or on a cluster wide level\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.fieldStats = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'indices',\n        'cluster'\n      ]\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_field_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_field_stats'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [get](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.get = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getScript](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.getScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getSource](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document; use `_all` to fetch the first document matching the ID across all types\n */\napi.getSource = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_source',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.getTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [index](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.index = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\napi.indices = namespace();\n\n/**\n * Perform a [indices.analyze](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-analyze.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The name of the analyzer to use\n * @param {String, String[], Boolean} params.charFilters - A comma-separated list of character filters to use for the analysis\n * @param {String} params.field - Use the analyzer configured for this field (instead of passing the analyzer name)\n * @param {String, String[], Boolean} params.filters - A comma-separated list of filters to use for the analysis\n * @param {String} params.index - The name of the index to scope the operation\n * @param {Boolean} params.preferLocal - With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)\n * @param {String} params.text - The text on which the analysis should be performed (when request body is not used)\n * @param {String} params.tokenizer - The name of the tokenizer to use for the analysis\n * @param {String} [params.format=detailed] - Format of the output\n */\napi.indices.prototype.analyze = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    charFilters: {\n      type: 'list',\n      name: 'char_filters'\n    },\n    field: {\n      type: 'string'\n    },\n    filters: {\n      type: 'list'\n    },\n    index: {\n      type: 'string'\n    },\n    preferLocal: {\n      type: 'boolean',\n      name: 'prefer_local'\n    },\n    text: {\n      type: 'string'\n    },\n    tokenizer: {\n      type: 'string'\n    },\n    format: {\n      type: 'enum',\n      'default': 'detailed',\n      options: [\n        'detailed',\n        'text'\n      ]\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_analyze',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_analyze'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.clearCache](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-clearcache.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.fieldData - Clear field data\n * @param {Boolean} params.fielddata - Clear field data\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to clear when using the `field_data` parameter (default: all)\n * @param {Boolean} params.filter - Clear filter caches\n * @param {Boolean} params.filterCache - Clear filter caches\n * @param {Boolean} params.filterKeys - A comma-separated list of keys to clear when using the `filter_cache` parameter (default: all)\n * @param {Boolean} params.id - Clear ID caches for parent/child\n * @param {Boolean} params.idCache - Clear ID caches for parent/child\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index name to limit the operation\n * @param {Boolean} params.recycler - Clear the recycler cache\n * @param {Boolean} params.queryCache - Clear query cache\n */\napi.indices.prototype.clearCache = ca({\n  params: {\n    fieldData: {\n      type: 'boolean',\n      name: 'field_data'\n    },\n    fielddata: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    filter: {\n      type: 'boolean'\n    },\n    filterCache: {\n      type: 'boolean',\n      name: 'filter_cache'\n    },\n    filterKeys: {\n      type: 'boolean',\n      name: 'filter_keys'\n    },\n    id: {\n      type: 'boolean'\n    },\n    idCache: {\n      type: 'boolean',\n      name: 'id_cache'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    index: {\n      type: 'list'\n    },\n    recycler: {\n      type: 'boolean'\n    },\n    queryCache: {\n      type: 'boolean',\n      name: 'query_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_cache/clear',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cache/clear'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.close](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.close = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_close',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.create](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-create-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.create = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.delete](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-delete-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices\n */\napi.indices.prototype['delete'] = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteAlias](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names (supports wildcards); use `_all` for all indices\n * @param {String, String[], Boolean} params.name - A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.\n */\napi.indices.prototype.deleteAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteMapping](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-delete-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names (supports wildcards); use `_all` for all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to delete (supports wildcards); use `_all` to delete all document types in the specified indices.\n */\napi.indices.prototype.deleteMapping = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/_mapping',\n    req: {\n      index: {\n        type: 'list'\n      },\n      type: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.deleteTemplate = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.name - A comma-separated list of warmer names to delete (supports wildcards); use `_all` to delete all warmers in the specified indices. You must specify a name either in the uri or in the parameters.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to delete warmers from (supports wildcards); use `_all` to perform the operation on all indices.\n */\napi.indices.prototype.deleteWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    name: {\n      type: 'list'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_warmer/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.exists](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to check\n */\napi.indices.prototype.exists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsAlias](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.existsAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.existsTemplate = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsType](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-types-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` to check the types across all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to check\n */\napi.indices.prototype.existsType = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      type: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.flush](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.force - Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)\n * @param {Boolean} params.waitIfOngoing - If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is false and will cause an exception to be thrown on the shard level if another flush operation is already running.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flush = ca({\n  params: {\n    force: {\n      type: 'boolean'\n    },\n    waitIfOngoing: {\n      type: 'boolean',\n      name: 'wait_if_ongoing'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.flushSynced](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/indices-synced-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n */\napi.indices.prototype.flushSynced = ca({\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush/synced',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush/synced'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.get](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-get-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Ignore unavailable indexes (default: false)\n * @param {Boolean} params.allowNoIndices - Ignore if a wildcard expression resolves to no concrete indices (default: false)\n * @param {String} [params.expandWildcards=open] - Whether wildcard expressions should get expanded to open or closed indices (default: open)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.feature - A comma-separated list of features\n */\napi.indices.prototype.get = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=feature%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        feature: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAlias](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.getAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAliases](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to filter\n */\napi.indices.prototype.getAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_aliases/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_aliases',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getFieldMapping](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-get-field-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.includeDefaults - Whether the default mapping values should be returned as well\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n * @param {String, String[], Boolean} params.field - A comma-separated list of fields\n */\napi.indices.prototype.getFieldMapping = ca({\n  params: {\n    includeDefaults: {\n      type: 'boolean',\n      name: 'include_defaults'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>/field/<%=field%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        field: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping/field/<%=field%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        field: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>/field/<%=field%>',\n      req: {\n        type: {\n          type: 'list'\n        },\n        field: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/field/<%=field%>',\n      req: {\n        field: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getMapping](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-get-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n */\napi.indices.prototype.getMapping = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getSettings](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-get-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the settings that should be included\n */\napi.indices.prototype.getSettings = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.getTemplate = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_template/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_template'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getUpgrade](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.getUpgrade = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the warmer (supports wildcards); leave empty to get all warmers\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.getWarmer = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.open](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.open = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'closed',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_open',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.optimize](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-optimize.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flush - Specify whether the index should be flushed after performing the operation (default: true)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.maxNumSegments - The number of segments the index should be merged into (default: dynamic)\n * @param {Boolean} params.onlyExpungeDeletes - Specify whether the operation should only expunge deleted documents\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.waitForMerge - Specify whether the request should block until the merge process is finished (default: true)\n * @param {Boolean} params.force - Force a merge operation to run, even if there is a single segment in the index (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.optimize = ca({\n  params: {\n    flush: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    maxNumSegments: {\n      type: 'number',\n      name: 'max_num_segments'\n    },\n    onlyExpungeDeletes: {\n      type: 'boolean',\n      name: 'only_expunge_deletes'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    waitForMerge: {\n      type: 'boolean',\n      name: 'wait_for_merge'\n    },\n    force: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_optimize',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_optimize'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.putAlias](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.\n * @param {String} params.name - The name of the alias to be created or updated\n */\napi.indices.prototype.putAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putMapping](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-put-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreConflicts - Specify whether to ignore conflicts while updating the mapping (default: false)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.\n * @param {String} params.type - The name of the document type\n */\napi.indices.prototype.putMapping = ca({\n  params: {\n    ignoreConflicts: {\n      type: 'boolean',\n      name: 'ignore_conflicts'\n    },\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putSettings](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.putSettings = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.order - The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)\n * @param {Boolean} params.create - Whether the index template should only be added if new or can also replace an existing one\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.putTemplate = ca({\n  params: {\n    order: {\n      type: 'number'\n    },\n    create: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed) in the search request to warm\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices in the search request to warm. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both, in the search request to warm.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to register the warmer for; use `_all` or omit to perform the operation on all indices\n * @param {String} params.name - The name of the warmer\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types\n */\napi.indices.prototype.putWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.recovery](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/indices-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.detailed - Whether to display detailed information about shard recovery\n * @param {Boolean} params.activeOnly - Display only those recoveries that are currently on-going\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.recovery = ca({\n  params: {\n    detailed: {\n      type: 'boolean',\n      'default': false\n    },\n    activeOnly: {\n      type: 'boolean',\n      'default': false,\n      name: 'active_only'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_recovery',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.refresh](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-refresh.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.force - Force a refresh even if not required\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.refresh = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    force: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_refresh',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_refresh'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.segments](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.segments = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_segments',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_segments'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.stats](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=indices] - Return stats aggregated at cluster, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned the specific metrics.\n */\napi.indices.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'list'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'indices',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_stats/<%=metric%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'query_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'query_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_stats'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.status](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-status.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.recovery - Return information about shard recovery\n * @param {Boolean} params.snapshot - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.status = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    recovery: {\n      type: 'boolean'\n    },\n    snapshot: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_status',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_status'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.updateAliases](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Request timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.indices.prototype.updateAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_aliases'\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.upgrade](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.waitForCompletion - Specify whether the request should block until the all segments are upgraded (default: true)\n * @param {Boolean} params.onlyAncientSegments - If true, only ancient (an older Lucene major release) segments will be upgraded\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.upgrade = ca({\n  params: {\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      name: 'wait_for_completion'\n    },\n    onlyAncientSegments: {\n      type: 'boolean',\n      name: 'only_ancient_segments'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.validateQuery](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/search-validate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.explain - Return detailed information about the error\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {Boolean} params.rewrite - Provide a more detailed explanation showing the actual Lucene query that will be executed.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.validateQuery = ca({\n  params: {\n    explain: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    rewrite: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_validate/query'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [info](http://www.elastic.co/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.info = ca({\n  url: {\n    fmt: '/'\n  }\n});\n\n/**\n * Perform a [mget](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/docs-multi-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.mget = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mget'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mlt](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/search-more-like-this.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.boostTerms - The boost factor\n * @param {Number} params.maxDocFreq - The word occurrence frequency as count: words with higher occurrence in the corpus will be ignored\n * @param {Number} params.maxQueryTerms - The maximum query terms to be included in the generated query\n * @param {Number} params.maxWordLength - The minimum length of the word: longer words will be ignored\n * @param {Number} params.minDocFreq - The word occurrence frequency as count: words with lower occurrence in the corpus will be ignored\n * @param {Number} params.minTermFreq - The term frequency as percent: terms with lower occurence in the source document will be ignored\n * @param {Number} params.minWordLength - The minimum length of the word: shorter words will be ignored\n * @param {String, String[], Boolean} params.mltFields - Specific fields to perform the query against\n * @param {Number} params.percentTermsToMatch - How many terms have to match in order to consider the document a match (default: 0.3)\n * @param {String} params.routing - Specific routing value\n * @param {Number} params.searchFrom - The offset from which to return results\n * @param {String, String[], Boolean} params.searchIndices - A comma-separated list of indices to perform the query against (default: the index containing the document)\n * @param {String} params.searchScroll - A scroll search request definition\n * @param {Number} params.searchSize - The number of documents to return (default: 10)\n * @param {String} params.searchSource - A specific search request definition (instead of using the request body)\n * @param {String} params.searchType - Specific search type (eg. `dfs_then_fetch`, `count`, etc)\n * @param {String, String[], Boolean} params.searchTypes - A comma-separated list of types to perform the query against (default: the same type as the document)\n * @param {String, String[], Boolean} params.stopWords - A list of stop words to be ignored\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.mlt = ca({\n  params: {\n    boostTerms: {\n      type: 'number',\n      name: 'boost_terms'\n    },\n    maxDocFreq: {\n      type: 'number',\n      name: 'max_doc_freq'\n    },\n    maxQueryTerms: {\n      type: 'number',\n      name: 'max_query_terms'\n    },\n    maxWordLength: {\n      type: 'number',\n      name: 'max_word_length'\n    },\n    minDocFreq: {\n      type: 'number',\n      name: 'min_doc_freq'\n    },\n    minTermFreq: {\n      type: 'number',\n      name: 'min_term_freq'\n    },\n    minWordLength: {\n      type: 'number',\n      name: 'min_word_length'\n    },\n    mltFields: {\n      type: 'list',\n      name: 'mlt_fields'\n    },\n    percentTermsToMatch: {\n      type: 'number',\n      name: 'percent_terms_to_match'\n    },\n    routing: {\n      type: 'string'\n    },\n    searchFrom: {\n      type: 'number',\n      name: 'search_from'\n    },\n    searchIndices: {\n      type: 'list',\n      name: 'search_indices'\n    },\n    searchScroll: {\n      type: 'string',\n      name: 'search_scroll'\n    },\n    searchSize: {\n      type: 'number',\n      name: 'search_size'\n    },\n    searchSource: {\n      type: 'string',\n      name: 'search_source'\n    },\n    searchType: {\n      type: 'string',\n      name: 'search_type'\n    },\n    searchTypes: {\n      type: 'list',\n      name: 'search_types'\n    },\n    stopWords: {\n      type: 'list',\n      name: 'stop_words'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_mlt',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [mpercolate](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The index of the document being count percolated to use as default\n * @param {String} params.type - The type of the document being percolated to use as default.\n */\napi.mpercolate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mpercolate'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [msearch](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/search-multi-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to use as default\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to use as default\n */\napi.msearch = ca({\n  params: {\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_msearch'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mtermvectors](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/docs-multi-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.ids - A comma-separated list of documents ids. You must define ids as parameter or set \"ids\" or \"docs\" in the request body\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.routing - Specific routing value. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.parent - Parent id of documents. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} params.realtime - Specifies if requests are real-time as opposed to near-real-time (default: true).\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n * @param {String} params.id - The id of the document.\n */\napi.mtermvectors = ca({\n  params: {\n    ids: {\n      type: 'list',\n      required: false\n    },\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    },\n    realtime: {\n      type: 'boolean',\n      required: false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mtermvectors'\n    }\n  ],\n  method: 'POST'\n});\n\napi.nodes = namespace();\n\n/**\n * Perform a [nodes.hotThreads](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cluster-nodes-hot-threads.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.interval - The interval for the second sampling of threads\n * @param {Number} params.snapshots - Number of samples of thread stacktrace (default: 10)\n * @param {Number} params.threads - Specify the number of threads to provide information for (default: 3)\n * @param {Boolean} params.ignoreIdleThreads - Don't show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)\n * @param {String} params.type - The type to sample (default: cpu)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.hotThreads = ca({\n  params: {\n    interval: {\n      type: 'time'\n    },\n    snapshots: {\n      type: 'number'\n    },\n    threads: {\n      type: 'number'\n    },\n    ignoreIdleThreads: {\n      type: 'boolean',\n      name: 'ignore_idle_threads'\n    },\n    type: {\n      type: 'enum',\n      options: [\n        'cpu',\n        'wait',\n        'block'\n      ]\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/hotthreads',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/hotthreads'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.info](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cluster-nodes-info.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.metric - A comma-separated list of metrics you wish returned. Leave empty to return all.\n */\napi.nodes.prototype.info = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'network',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'network',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.shutdown](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cluster-nodes-shutdown.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.delay - Set the delay for the operation (default: 1s)\n * @param {Boolean} params.exit - Exit the JVM as well (default: true)\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to perform the operation on; use `_local` to perform the operation on the node you're connected to, leave empty to perform the operation on all nodes\n */\napi.nodes.prototype.shutdown = ca({\n  params: {\n    delay: {\n      type: 'time'\n    },\n    exit: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/nodes/<%=nodeId%>/_shutdown',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_shutdown'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [nodes.stats](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/cluster-nodes-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=node] - Return indices stats aggregated at node, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n * @param {String, String[], Boolean} params.indexMetric - Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'node',\n      options: [\n        'node',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'query_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'query_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [percolate](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateFormat - Return an array of matching query IDs instead of objects\n * @param {String} params.percolateIndex - The index to percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to percolate document into. Defaults to type.\n * @param {String} params.percolateRouting - The routing value to use when percolating the existing document.\n * @param {String} params.percolatePreference - Which shard to prefer when executing the percolate request.\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being percolated.\n * @param {String} params.type - The type of the document being percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.percolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateFormat: {\n      type: 'enum',\n      options: [\n        'ids'\n      ],\n      name: 'percolate_format'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    percolateRouting: {\n      type: 'string',\n      name: 'percolate_routing'\n    },\n    percolatePreference: {\n      type: 'string',\n      name: 'percolate_preference'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [ping](http://www.elastic.co/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.ping = ca({\n  url: {\n    fmt: '/'\n  },\n  requestTimeout: 3000,\n  method: 'HEAD'\n});\n\n/**\n * Perform a [putScript](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.putScript = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [putTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.putTemplate = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [scroll](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.scrollId - The scroll ID\n */\napi.scroll = ca({\n  params: {\n    scroll: {\n      type: 'duration'\n    },\n    scrollId: {\n      type: 'string',\n      name: 'scroll_id'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  paramAsBody: 'scrollId',\n  method: 'POST'\n});\n\n/**\n * Perform a [search](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/search-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.explain - Specify whether to return detailed information about score computation as part of a hit\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return as part of a hit\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields to return as the field data representation of a field for each hit\n * @param {Number} params.from - Starting offset (default: 0)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {Number} params.size - Number of hits to return (default: 10)\n * @param {String, String[], Boolean} params.sort - A comma-separated list of <field>:<direction> pairs\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String, String[], Boolean} params.stats - Specific 'tag' of the request for logging and statistical purposes\n * @param {String} params.suggestField - Specify which field to use for suggestions\n * @param {String} [params.suggestMode=missing] - Specify suggest mode\n * @param {Number} params.suggestSize - How many suggestions to return in response\n * @param {Text} params.suggestText - The source text for which the suggestions should be returned\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.trackScores - Whether to calculate and return scores even if they are not used for sorting\n * @param {Boolean} params.version - Specify whether to return document version as part of a hit\n * @param {Boolean} params.queryCache - Specify if query cache should be used for this request or not, defaults to index level setting\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.search = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    from: {\n      type: 'number'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    },\n    size: {\n      type: 'number'\n    },\n    sort: {\n      type: 'list'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    stats: {\n      type: 'list'\n    },\n    suggestField: {\n      type: 'string',\n      name: 'suggest_field'\n    },\n    suggestMode: {\n      type: 'enum',\n      'default': 'missing',\n      options: [\n        'missing',\n        'popular',\n        'always'\n      ],\n      name: 'suggest_mode'\n    },\n    suggestSize: {\n      type: 'number',\n      name: 'suggest_size'\n    },\n    suggestText: {\n      type: 'text',\n      name: 'suggest_text'\n    },\n    timeout: {\n      type: 'time'\n    },\n    trackScores: {\n      type: 'boolean',\n      name: 'track_scores'\n    },\n    version: {\n      type: 'boolean'\n    },\n    queryCache: {\n      type: 'boolean',\n      name: 'query_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchExists](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/search-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.searchExists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/exists',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/exists',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/exists'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchShards](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/search-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.searchShards = ca({\n  params: {\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search_shards',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search_shards',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_search_shards'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchTemplate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/template'\n    }\n  ],\n  method: 'POST'\n});\n\napi.snapshot = namespace();\n\n/**\n * Perform a [snapshot.create](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.create = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.createRepository](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.verify - Whether to verify the repository after creation\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.createRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    verify: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.delete](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype['delete'] = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.deleteRepository](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.deleteRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.get](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.get = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [snapshot.getRepository](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.getRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>',\n      req: {\n        repository: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.restore](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.restore = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_restore',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.status](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.status = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        },\n        snapshot: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/<%=repository%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/_status'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.verifyRepository](http://www.elastic.co/guide/en/elasticsearch/reference/1.7/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.verifyRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/_verify',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [suggest](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/search-suggesters.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n */\napi.suggest = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_suggest',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_suggest'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [termvector](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/docs-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned.\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return.\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned.\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned.\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random).\n * @param {String} params.routing - Specific routing value.\n * @param {String} params.parent - Parent id of documents.\n * @param {Boolean} params.realtime - Specifies if request is real-time as opposed to near-real-time (default: true).\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n * @param {String} params.id - The id of the document.\n */\napi.termvector = ca({\n  params: {\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    },\n    realtime: {\n      type: 'boolean',\n      required: false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_termvector',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_termvector',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [update](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/docs-update.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.lang - The script language (default: groovy)\n * @param {String} params.parent - ID of the parent document. Is is only used for routing and when for the upsert request\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {Number} params.retryOnConflict - Specify how many times should the operation be retried when a conflict occurs (default: 0)\n * @param {String} params.routing - Specific routing value\n * @param {Anything} params.script - The URL-encoded script definition (instead of using request body)\n * @param {Anything} params.scriptId - The id of a stored script\n * @param {Boolean} params.scriptedUpsert - True if the script referenced in script or script_id should be called to perform inserts - defaults to false\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.update = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    fields: {\n      type: 'list'\n    },\n    lang: {\n      type: 'string'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    retryOnConflict: {\n      type: 'number',\n      name: 'retry_on_conflict'\n    },\n    routing: {\n      type: 'string'\n    },\n    script: {},\n    scriptId: {\n      name: 'script_id'\n    },\n    scriptedUpsert: {\n      type: 'boolean',\n      name: 'scripted_upsert'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_update',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [create](http://www.elastic.co/guide/en/elasticsearch/reference/1.6/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.create = ca.proxy(api.index, {\n  transform: function (params) {\n    params.op_type = 'create';\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/apis/1_7.js\n ** module id = 127\n ** module chunks = 0\n **/","var ca = require('../client_action').makeFactoryWithModifier(function (spec) {\n  return require('../utils').merge(spec, {\n    params: {\n      filterPath: {\n        type: 'list',\n        name: 'filter_path'\n      }\n    }\n  });\n});\nvar namespace = require('../client_action').namespaceFactory;\nvar api = module.exports = {};\n\napi._namespaces = ['cat', 'cluster', 'indices', 'nodes', 'snapshot', 'tasks'];\n\n/**\n * Perform a [bulk](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.type - Default document type for items which don't provide one\n * @param {String, String[], Boolean} params.fields - Default comma-separated list of fields to return in the response for updates\n * @param {String} params.index - Default index for items which don't provide one\n */\napi.bulk = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    type: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_bulk'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\napi.cat = namespace();\n\n/**\n * Perform a [cat.aliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.cat.prototype.aliases = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.allocation](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information\n */\napi.cat.prototype.allocation = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/allocation/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/allocation'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.count](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.count = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/count/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/count'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.fielddata](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return the fielddata size\n */\napi.cat.prototype.fielddata = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/fielddata/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/fielddata'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.health](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} [params.ts=true] - Set to false to disable timestamping\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.health = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    ts: {\n      type: 'boolean',\n      'default': true\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/health'\n  }\n});\n\n/**\n * Perform a [cat.help](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.help - Return help information\n */\napi.cat.prototype.help = ca({\n  params: {\n    help: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat'\n  }\n});\n\n/**\n * Perform a [cat.indices](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.pri - Set to true to return stats only for primary shards\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.indices = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    pri: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/indices/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/indices'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.master](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.master = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/master'\n  }\n});\n\n/**\n * Perform a [cat.nodeattrs](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodeattrs = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodeattrs'\n  }\n});\n\n/**\n * Perform a [cat.nodes](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodes = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodes'\n  }\n});\n\n/**\n * Perform a [cat.pendingTasks](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cat.plugins](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.plugins = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/plugins'\n  }\n});\n\n/**\n * Perform a [cat.recovery](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.recovery = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/recovery/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.repositories](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.repositories = ca({\n  params: {\n    local: {\n      type: 'boolean',\n      'default': false\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/repositories'\n  }\n});\n\n/**\n * Perform a [cat.segments](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.segments = ca({\n  params: {\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/segments/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/segments'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.shards](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.shards = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/shards/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/shards'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.snapshots](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Set to true to ignore unavailable snapshots\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.repository - Name of repository from which to fetch the snapshot information\n */\napi.cat.prototype.snapshots = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      'default': false,\n      name: 'ignore_unavailable'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/snapshots/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [cat.threadPool](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {Boolean} params.fullId - Enables displaying the complete node ids\n */\napi.cat.prototype.threadPool = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fullId: {\n      type: 'boolean',\n      'default': false,\n      name: 'full_id'\n    }\n  },\n  url: {\n    fmt: '/_cat/thread_pool'\n  }\n});\n\n/**\n * Perform a [clearScroll](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.scrollId - A comma-separated list of scroll IDs to clear\n */\napi.clearScroll = ca({\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  method: 'DELETE'\n});\n\napi.cluster = namespace();\n\n/**\n * Perform a [cluster.getSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.getSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  }\n});\n\n/**\n * Perform a [cluster.health](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.level=cluster] - Specify the level of detail for returned information\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.waitForActiveShards - Wait until the specified number of shards is active\n * @param {String} params.waitForNodes - Wait until the specified number of nodes is available\n * @param {Number} params.waitForRelocatingShards - Wait until the specified number of relocating shards is finished\n * @param {String} params.waitForStatus - Wait until cluster is in a specific state\n * @param {String, String[], Boolean} params.index - Limit the information returned to a specific index\n */\napi.cluster.prototype.health = ca({\n  params: {\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    waitForActiveShards: {\n      type: 'number',\n      name: 'wait_for_active_shards'\n    },\n    waitForNodes: {\n      type: 'string',\n      name: 'wait_for_nodes'\n    },\n    waitForRelocatingShards: {\n      type: 'number',\n      name: 'wait_for_relocating_shards'\n    },\n    waitForStatus: {\n      type: 'enum',\n      'default': null,\n      options: [\n        'green',\n        'yellow',\n        'red'\n      ],\n      name: 'wait_for_status'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/health/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/health'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.pendingTasks](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.cluster.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_cluster/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cluster.putSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.putSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [cluster.reroute](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.dryRun - Simulate the operation only and return the resulting state\n * @param {Boolean} params.explain - Return an explanation of why the commands can or cannot be executed\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics. Defaults to all but metadata\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.reroute = ca({\n  params: {\n    dryRun: {\n      type: 'boolean',\n      name: 'dry_run'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    metric: {\n      type: 'list',\n      options: [\n        '_all',\n        'blocks',\n        'metadata',\n        'nodes',\n        'routing_table',\n        'master_node',\n        'version'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/reroute'\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [cluster.state](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n */\napi.cluster.prototype.state = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/state/<%=metric%>/<%=index%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'routing_nodes',\n            'master_node',\n            'version'\n          ]\n        },\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'routing_nodes',\n            'master_node',\n            'version'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.stats](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.cluster.prototype.stats = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/stats/nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [count](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.count = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_count'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [countPercolate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to count percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to count percolate document into. Defaults to type.\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being count percolated.\n * @param {String} params.type - The type of the document being count percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.countPercolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [delete](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Specific write consistency setting for the operation\n * @param {String} params.parent - ID of parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi['delete'] = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteScript](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.deleteScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.deleteTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [exists](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.exists = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [explain](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)\n * @param {String} params.analyzer - The analyzer for the query string query\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The default field for query string query (default: _all)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.explain = ca({\n  params: {\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_explain',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [fieldStats](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for to get field statistics for (min value, max value, and more)\n * @param {String} [params.level=cluster] - Defines if field stats should be returned on a per index level or on a cluster wide level\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.fieldStats = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'indices',\n        'cluster'\n      ]\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_field_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_field_stats'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [get](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.get = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getScript](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.getScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getSource](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document; use `_all` to fetch the first document matching the ID across all types\n */\napi.getSource = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_source',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.getTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [index](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.index = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\napi.indices = namespace();\n\n/**\n * Perform a [indices.analyze](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The name of the analyzer to use\n * @param {String, String[], Boolean} params.charFilters - A comma-separated list of character filters to use for the analysis\n * @param {String} params.field - Use the analyzer configured for this field (instead of passing the analyzer name)\n * @param {String, String[], Boolean} params.filters - A comma-separated list of filters to use for the analysis\n * @param {String} params.index - The name of the index to scope the operation\n * @param {Boolean} params.preferLocal - With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)\n * @param {String, String[], Boolean} params.text - The text on which the analysis should be performed (when request body is not used)\n * @param {String} params.tokenizer - The name of the tokenizer to use for the analysis\n * @param {Boolean} params.explain - With `true`, outputs more advanced details. (default: false)\n * @param {String, String[], Boolean} params.attributes - A comma-separated list of token attributes to output, this parameter works only with `explain=true`\n * @param {String} [params.format=detailed] - Format of the output\n */\napi.indices.prototype.analyze = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    charFilters: {\n      type: 'list',\n      name: 'char_filters'\n    },\n    field: {\n      type: 'string'\n    },\n    filters: {\n      type: 'list'\n    },\n    index: {\n      type: 'string'\n    },\n    preferLocal: {\n      type: 'boolean',\n      name: 'prefer_local'\n    },\n    text: {\n      type: 'list'\n    },\n    tokenizer: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    attributes: {\n      type: 'list'\n    },\n    format: {\n      type: 'enum',\n      'default': 'detailed',\n      options: [\n        'detailed',\n        'text'\n      ]\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_analyze',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_analyze'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.clearCache](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.fieldData - Clear field data\n * @param {Boolean} params.fielddata - Clear field data\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to clear when using the `field_data` parameter (default: all)\n * @param {Boolean} params.query - Clear query caches\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index name to limit the operation\n * @param {Boolean} params.recycler - Clear the recycler cache\n * @param {Boolean} params.request - Clear request cache\n */\napi.indices.prototype.clearCache = ca({\n  params: {\n    fieldData: {\n      type: 'boolean',\n      name: 'field_data'\n    },\n    fielddata: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    query: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    index: {\n      type: 'list'\n    },\n    recycler: {\n      type: 'boolean'\n    },\n    request: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_cache/clear',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cache/clear'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.close](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma separated list of indices to close\n */\napi.indices.prototype.close = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_close',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.create](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.updateAllTypes - Whether to update the mapping for all fields with the same name across all types or not\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.create = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    updateAllTypes: {\n      type: 'boolean',\n      name: 'update_all_types'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.delete](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices\n */\napi.indices.prototype['delete'] = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names (supports wildcards); use `_all` for all indices\n * @param {String, String[], Boolean} params.name - A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.\n */\napi.indices.prototype.deleteAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.deleteTemplate = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.name - A comma-separated list of warmer names to delete (supports wildcards); use `_all` to delete all warmers in the specified indices. You must specify a name either in the uri or in the parameters.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to delete warmers from (supports wildcards); use `_all` to perform the operation on all indices.\n */\napi.indices.prototype.deleteWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    name: {\n      type: 'list'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_warmer/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.exists](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to check\n */\napi.indices.prototype.exists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.existsAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.existsTemplate = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsType](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` to check the types across all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to check\n */\napi.indices.prototype.existsType = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      type: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.flush](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.force - Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)\n * @param {Boolean} params.waitIfOngoing - If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is false and will cause an exception to be thrown on the shard level if another flush operation is already running.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flush = ca({\n  params: {\n    force: {\n      type: 'boolean'\n    },\n    waitIfOngoing: {\n      type: 'boolean',\n      name: 'wait_if_ongoing'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.flushSynced](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flushSynced = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush/synced',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush/synced'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.forcemerge](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flush - Specify whether the index should be flushed after performing the operation (default: true)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.maxNumSegments - The number of segments the index should be merged into (default: dynamic)\n * @param {Boolean} params.onlyExpungeDeletes - Specify whether the operation should only expunge deleted documents\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.waitForMerge - Specify whether the request should block until the merge process is finished (default: true)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.forcemerge = ca({\n  params: {\n    flush: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    maxNumSegments: {\n      type: 'number',\n      name: 'max_num_segments'\n    },\n    onlyExpungeDeletes: {\n      type: 'boolean',\n      name: 'only_expunge_deletes'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    waitForMerge: {\n      type: 'boolean',\n      name: 'wait_for_merge'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_forcemerge',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_forcemerge'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.get](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Ignore unavailable indexes (default: false)\n * @param {Boolean} params.allowNoIndices - Ignore if a wildcard expression resolves to no concrete indices (default: false)\n * @param {String} [params.expandWildcards=open] - Whether wildcard expressions should get expanded to open or closed indices (default: open)\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return version and creation date values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.feature - A comma-separated list of features\n */\napi.indices.prototype.get = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=feature%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        feature: {\n          type: 'list',\n          options: [\n            '_settings',\n            '_mappings',\n            '_warmers',\n            '_aliases'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.getAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAliases](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to filter\n */\napi.indices.prototype.getAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_aliases/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_aliases',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getFieldMapping](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.includeDefaults - Whether the default mapping values should be returned as well\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields\n */\napi.indices.prototype.getFieldMapping = ca({\n  params: {\n    includeDefaults: {\n      type: 'boolean',\n      name: 'include_defaults'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>/field/<%=fields%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping/field/<%=fields%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>/field/<%=fields%>',\n      req: {\n        type: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/field/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getMapping](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n */\napi.indices.prototype.getMapping = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.human - Whether to return version and creation date values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the settings that should be included\n */\napi.indices.prototype.getSettings = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    local: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.name - The comma separated names of the index templates\n */\napi.indices.prototype.getTemplate = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_template/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_template'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getUpgrade](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.getUpgrade = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the warmer (supports wildcards); leave empty to get all warmers\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.getWarmer = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.open](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma separated list of indices to open\n */\napi.indices.prototype.open = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'closed',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_open',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.optimize](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-optimize.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flush - Specify whether the index should be flushed after performing the operation (default: true)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.maxNumSegments - The number of segments the index should be merged into (default: dynamic)\n * @param {Boolean} params.onlyExpungeDeletes - Specify whether the operation should only expunge deleted documents\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.waitForMerge - Specify whether the request should block until the merge process is finished (default: true)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.optimize = ca({\n  params: {\n    flush: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    maxNumSegments: {\n      type: 'number',\n      name: 'max_num_segments'\n    },\n    onlyExpungeDeletes: {\n      type: 'boolean',\n      name: 'only_expunge_deletes'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    waitForMerge: {\n      type: 'boolean',\n      name: 'wait_for_merge'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_optimize',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_optimize'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.putAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.\n * @param {String} params.name - The name of the alias to be created or updated\n */\napi.indices.prototype.putAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putMapping](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.updateAllTypes - Whether to update the mapping for all fields with the same name across all types or not\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.\n * @param {String} params.type - The name of the document type\n */\napi.indices.prototype.putMapping = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    updateAllTypes: {\n      type: 'boolean',\n      name: 'update_all_types'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.putSettings = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.order - The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)\n * @param {Boolean} params.create - Whether the index template should only be added if new or can also replace an existing one\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.putTemplate = ca({\n  params: {\n    order: {\n      type: 'number'\n    },\n    create: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putWarmer](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed) in the search request to warm\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices in the search request to warm. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both, in the search request to warm.\n * @param {Boolean} params.requestCache - Specify whether the request to be warmed should use the request cache, defaults to index level setting\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to register the warmer for; use `_all` or omit to perform the operation on all indices\n * @param {String} params.name - The name of the warmer\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types\n */\napi.indices.prototype.putWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    requestCache: {\n      type: 'boolean',\n      name: 'request_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.recovery](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.detailed - Whether to display detailed information about shard recovery\n * @param {Boolean} params.activeOnly - Display only those recoveries that are currently on-going\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.recovery = ca({\n  params: {\n    detailed: {\n      type: 'boolean',\n      'default': false\n    },\n    activeOnly: {\n      type: 'boolean',\n      'default': false,\n      name: 'active_only'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_recovery',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.refresh](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.force - Force a refresh even if not required\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.refresh = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    force: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_refresh',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_refresh'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.segments](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.verbose - Includes detailed memory usage by Lucene.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.segments = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    verbose: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_segments',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_segments'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.shardStores](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.status - A comma-separated list of statuses used to filter on shards to get store information for\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.shardStores = ca({\n  params: {\n    status: {\n      type: 'list',\n      options: [\n        'green',\n        'yellow',\n        'red',\n        'all'\n      ]\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_shard_stores',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_shard_stores'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.stats](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=indices] - Return stats aggregated at cluster, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned the specific metrics.\n */\napi.indices.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'list'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'indices',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_stats/<%=metric%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_stats'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.updateAliases](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Request timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.indices.prototype.updateAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_aliases'\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.upgrade](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.waitForCompletion - Specify whether the request should block until the all segments are upgraded (default: false)\n * @param {Boolean} params.onlyAncientSegments - If true, only ancient (an older Lucene major release) segments will be upgraded\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.upgrade = ca({\n  params: {\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      name: 'wait_for_completion'\n    },\n    onlyAncientSegments: {\n      type: 'boolean',\n      name: 'only_ancient_segments'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.validateQuery](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.explain - Return detailed information about the error\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {Boolean} params.rewrite - Provide a more detailed explanation showing the actual Lucene query that will be executed.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.validateQuery = ca({\n  params: {\n    explain: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    rewrite: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_validate/query'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [info](http://www.elastic.co/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.info = ca({\n  url: {\n    fmt: '/'\n  }\n});\n\n/**\n * Perform a [mget](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.mget = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mget'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mpercolate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The index of the document being count percolated to use as default\n * @param {String} params.type - The type of the document being percolated to use as default.\n */\napi.mpercolate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mpercolate'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [msearch](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to use as default\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to use as default\n */\napi.msearch = ca({\n  params: {\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_msearch'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mtermvectors](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.ids - A comma-separated list of documents ids. You must define ids as parameter or set \"ids\" or \"docs\" in the request body\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.routing - Specific routing value. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.parent - Parent id of documents. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} params.realtime - Specifies if requests are real-time as opposed to near-real-time (default: true).\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n */\napi.mtermvectors = ca({\n  params: {\n    ids: {\n      type: 'list',\n      required: false\n    },\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    },\n    realtime: {\n      type: 'boolean',\n      required: false\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mtermvectors'\n    }\n  ],\n  method: 'POST'\n});\n\napi.nodes = namespace();\n\n/**\n * Perform a [nodes.hotThreads](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.interval - The interval for the second sampling of threads\n * @param {Number} params.snapshots - Number of samples of thread stacktrace (default: 10)\n * @param {Number} params.threads - Specify the number of threads to provide information for (default: 3)\n * @param {Boolean} params.ignoreIdleThreads - Don't show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)\n * @param {String} params.type - The type to sample (default: cpu)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.hotThreads = ca({\n  params: {\n    interval: {\n      type: 'time'\n    },\n    snapshots: {\n      type: 'number'\n    },\n    threads: {\n      type: 'number'\n    },\n    ignoreIdleThreads: {\n      type: 'boolean',\n      name: 'ignore_idle_threads'\n    },\n    type: {\n      type: 'enum',\n      options: [\n        'cpu',\n        'wait',\n        'block'\n      ]\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/hotthreads',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/hotthreads'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.info](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.metric - A comma-separated list of metrics you wish returned. Leave empty to return all.\n */\napi.nodes.prototype.info = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.stats](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=node] - Return indices stats aggregated at node, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n * @param {String, String[], Boolean} params.indexMetric - Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'node',\n      options: [\n        'node',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [percolate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to percolate document into. Defaults to type.\n * @param {String} params.percolateRouting - The routing value to use when percolating the existing document.\n * @param {String} params.percolatePreference - Which shard to prefer when executing the percolate request.\n * @param {String} params.percolateFormat - Return an array of matching query IDs instead of objects\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being percolated.\n * @param {String} params.type - The type of the document being percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.percolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    percolateRouting: {\n      type: 'string',\n      name: 'percolate_routing'\n    },\n    percolatePreference: {\n      type: 'string',\n      name: 'percolate_preference'\n    },\n    percolateFormat: {\n      type: 'enum',\n      options: [\n        'ids'\n      ],\n      name: 'percolate_format'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [ping](http://www.elastic.co/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.ping = ca({\n  url: {\n    fmt: '/'\n  },\n  requestTimeout: 3000,\n  method: 'HEAD'\n});\n\n/**\n * Perform a [putScript](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.putScript = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [putTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.putTemplate = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [reindex](https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-reindex.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.refresh - Should the effected indexes be refreshed?\n * @param {Date, Number} [params.timeout=1m] - Time each individual bulk request should wait for shards that are unavailable.\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Boolean} params.waitForCompletion - Should the request should block until the reindex is complete.\n */\napi.reindex = ca({\n  params: {\n    refresh: {\n      type: 'boolean'\n    },\n    timeout: {\n      type: 'time',\n      'default': '1m'\n    },\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_reindex'\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [renderSearchTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.id - The id of the stored search template\n */\napi.renderSearchTemplate = ca({\n  urls: [\n    {\n      fmt: '/_render/template/<%=id%>',\n      req: {\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_render/template'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [scroll](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.scrollId - The scroll ID\n */\napi.scroll = ca({\n  params: {\n    scroll: {\n      type: 'duration'\n    },\n    scrollId: {\n      type: 'string',\n      name: 'scroll_id'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  paramAsBody: 'scrollId',\n  method: 'POST'\n});\n\n/**\n * Perform a [search](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.explain - Specify whether to return detailed information about score computation as part of a hit\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return as part of a hit\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields to return as the field data representation of a field for each hit\n * @param {Number} params.from - Starting offset (default: 0)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {Number} params.size - Number of hits to return (default: 10)\n * @param {String, String[], Boolean} params.sort - A comma-separated list of <field>:<direction> pairs\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.terminateAfter - The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.\n * @param {String, String[], Boolean} params.stats - Specific 'tag' of the request for logging and statistical purposes\n * @param {String} params.suggestField - Specify which field to use for suggestions\n * @param {String} [params.suggestMode=missing] - Specify suggest mode\n * @param {Number} params.suggestSize - How many suggestions to return in response\n * @param {Text} params.suggestText - The source text for which the suggestions should be returned\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.trackScores - Whether to calculate and return scores even if they are not used for sorting\n * @param {Boolean} params.version - Specify whether to return document version as part of a hit\n * @param {Boolean} params.requestCache - Specify if request cache should be used for this request or not, defaults to index level setting\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.search = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    from: {\n      type: 'number'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'dfs_query_then_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    },\n    size: {\n      type: 'number'\n    },\n    sort: {\n      type: 'list'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    terminateAfter: {\n      type: 'number',\n      name: 'terminate_after'\n    },\n    stats: {\n      type: 'list'\n    },\n    suggestField: {\n      type: 'string',\n      name: 'suggest_field'\n    },\n    suggestMode: {\n      type: 'enum',\n      'default': 'missing',\n      options: [\n        'missing',\n        'popular',\n        'always'\n      ],\n      name: 'suggest_mode'\n    },\n    suggestSize: {\n      type: 'number',\n      name: 'suggest_size'\n    },\n    suggestText: {\n      type: 'text',\n      name: 'suggest_text'\n    },\n    timeout: {\n      type: 'time'\n    },\n    trackScores: {\n      type: 'boolean',\n      name: 'track_scores'\n    },\n    version: {\n      type: 'boolean'\n    },\n    requestCache: {\n      type: 'boolean',\n      name: 'request_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchExists](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.searchExists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/exists',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/exists',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/exists'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchShards](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchShards = ca({\n  params: {\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search_shards',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search_shards',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search_shards'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchTemplate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/template'\n    }\n  ],\n  method: 'POST'\n});\n\napi.snapshot = namespace();\n\n/**\n * Perform a [snapshot.create](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.create = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.createRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.verify - Whether to verify the repository after creation\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.createRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    verify: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.delete](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype['delete'] = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.deleteRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.deleteRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.get](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.get = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [snapshot.getRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.getRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>',\n      req: {\n        repository: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.restore](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.restore = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_restore',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.status](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.status = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        },\n        snapshot: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/<%=repository%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/_status'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.verifyRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.verifyRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/_verify',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [suggest](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-suggesters.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n */\napi.suggest = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_suggest',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_suggest'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\napi.tasks = namespace();\n\n/**\n * Perform a [tasks.cancel](http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks-cancel.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.actions - A comma-separated list of actions that should be cancelled. Leave empty to cancel all.\n * @param {String} params.parentNode - Cancel tasks with specified parent node.\n * @param {String} params.parentTask - Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.\n * @param {Number} params.taskId - Cancel the task with specified task id (node_id:task_number)\n */\napi.tasks.prototype.cancel = ca({\n  params: {\n    nodeId: {\n      type: 'list',\n      name: 'node_id'\n    },\n    actions: {\n      type: 'list'\n    },\n    parentNode: {\n      type: 'string',\n      name: 'parent_node'\n    },\n    parentTask: {\n      type: 'string',\n      name: 'parent_task'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_tasks/<%=taskId%>/_cancel',\n      req: {\n        taskId: {\n          type: 'number'\n        }\n      }\n    },\n    {\n      fmt: '/_tasks/_cancel'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [tasks.list](http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks-list.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.actions - A comma-separated list of actions that should be returned. Leave empty to return all.\n * @param {Boolean} params.detailed - Return detailed task information (default: false)\n * @param {String} params.parentNode - Return tasks with specified parent node.\n * @param {String} params.parentTask - Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all.\n * @param {Boolean} params.waitForCompletion - Wait for the matching tasks to complete (default: false)\n * @param {String} params.taskId - Return the task with specified id (node_id:task_number)\n */\napi.tasks.prototype.list = ca({\n  params: {\n    nodeId: {\n      type: 'list',\n      name: 'node_id'\n    },\n    actions: {\n      type: 'list'\n    },\n    detailed: {\n      type: 'boolean'\n    },\n    parentNode: {\n      type: 'string',\n      name: 'parent_node'\n    },\n    parentTask: {\n      type: 'string',\n      name: 'parent_task'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      name: 'wait_for_completion'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_tasks/<%=taskId%>',\n      req: {\n        taskId: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_tasks'\n    }\n  ]\n});\n\n/**\n * Perform a [termvectors](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned.\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.\n * @param {Boolean} params.dfs - Specifies if distributed frequencies should be returned instead shard frequencies.\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return.\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned.\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned.\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random).\n * @param {String} params.routing - Specific routing value.\n * @param {String} params.parent - Parent id of documents.\n * @param {Boolean} params.realtime - Specifies if request is real-time as opposed to near-real-time (default: true).\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n * @param {String} params.id - The id of the document, when not specified a doc param should be supplied.\n */\napi.termvectors = ca({\n  params: {\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    dfs: {\n      type: 'boolean',\n      'default': false,\n      required: false\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    },\n    realtime: {\n      type: 'boolean',\n      required: false\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_termvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_termvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [update](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.lang - The script language (default: groovy)\n * @param {String} params.parent - ID of the parent document. Is is only used for routing and when for the upsert request\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {Number} params.retryOnConflict - Specify how many times should the operation be retried when a conflict occurs (default: 0)\n * @param {String} params.routing - Specific routing value\n * @param {Anything} params.script - The URL-encoded script definition (instead of using request body)\n * @param {Anything} params.scriptId - The id of a stored script\n * @param {Boolean} params.scriptedUpsert - True if the script referenced in script or script_id should be called to perform inserts - defaults to false\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.update = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    fields: {\n      type: 'list'\n    },\n    lang: {\n      type: 'string'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    retryOnConflict: {\n      type: 'number',\n      name: 'retry_on_conflict'\n    },\n    routing: {\n      type: 'string'\n    },\n    script: {},\n    scriptId: {\n      name: 'script_id'\n    },\n    scriptedUpsert: {\n      type: 'boolean',\n      name: 'scripted_upsert'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_update',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [updateByQuery](https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-reindex.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.explain - Specify whether to return detailed information about score computation as part of a hit\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return as part of a hit\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields to return as the field data representation of a field for each hit\n * @param {Number} params.from - Starting offset (default: 0)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.conflicts=abort] - What to do when the reindex hits version conflicts?\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {Date, Number} params.searchTimeout - Explicit timeout for each search request. Defaults to no timeout.\n * @param {Number} params.size - Number of hits to return (default: 10)\n * @param {String, String[], Boolean} params.sort - A comma-separated list of <field>:<direction> pairs\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.terminateAfter - The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.\n * @param {String, String[], Boolean} params.stats - Specific 'tag' of the request for logging and statistical purposes\n * @param {String} params.suggestField - Specify which field to use for suggestions\n * @param {String} [params.suggestMode=missing] - Specify suggest mode\n * @param {Number} params.suggestSize - How many suggestions to return in response\n * @param {Text} params.suggestText - The source text for which the suggestions should be returned\n * @param {Date, Number} [params.timeout=1m] - Time each individual bulk request should wait for shards that are unavailable.\n * @param {Boolean} params.trackScores - Whether to calculate and return scores even if they are not used for sorting\n * @param {Boolean} params.version - Specify whether to return document version as part of a hit\n * @param {Boolean} params.versionType - Should the document increment the version number (internal) on hit or not (reindex)\n * @param {Boolean} params.requestCache - Specify if request cache should be used for this request or not, defaults to index level setting\n * @param {Boolean} params.refresh - Should the effected indexes be refreshed?\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Integer} params.scrollSize - Size on the scroll request powering the update_by_query\n * @param {Boolean} params.waitForCompletion - Should the request should block until the reindex is complete.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.updateByQuery = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    from: {\n      type: 'number'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    conflicts: {\n      type: 'enum',\n      'default': 'abort',\n      options: [\n        'abort',\n        'proceed'\n      ]\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'dfs_query_then_fetch'\n      ],\n      name: 'search_type'\n    },\n    searchTimeout: {\n      type: 'time',\n      name: 'search_timeout'\n    },\n    size: {\n      type: 'number'\n    },\n    sort: {\n      type: 'list'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    terminateAfter: {\n      type: 'number',\n      name: 'terminate_after'\n    },\n    stats: {\n      type: 'list'\n    },\n    suggestField: {\n      type: 'string',\n      name: 'suggest_field'\n    },\n    suggestMode: {\n      type: 'enum',\n      'default': 'missing',\n      options: [\n        'missing',\n        'popular',\n        'always'\n      ],\n      name: 'suggest_mode'\n    },\n    suggestSize: {\n      type: 'number',\n      name: 'suggest_size'\n    },\n    suggestText: {\n      type: 'text',\n      name: 'suggest_text'\n    },\n    timeout: {\n      type: 'time',\n      'default': '1m'\n    },\n    trackScores: {\n      type: 'boolean',\n      name: 'track_scores'\n    },\n    version: {\n      type: 'boolean'\n    },\n    versionType: {\n      type: 'boolean',\n      name: 'version_type'\n    },\n    requestCache: {\n      type: 'boolean',\n      name: 'request_cache'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    scrollSize: {\n      type: 'integer',\n      name: 'scroll_size'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_update_by_query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_update_by_query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [create](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.create = ca.proxy(api.index, {\n  transform: function (params) {\n    params.op_type = 'create';\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/apis/2_x.js\n ** module id = 128\n ** module chunks = 0\n **/","var ca = require('../client_action').makeFactoryWithModifier(function (spec) {\n  return require('../utils').merge(spec, {\n    params: {\n      filterPath: {\n        type: 'list',\n        name: 'filter_path'\n      }\n    }\n  });\n});\nvar namespace = require('../client_action').namespaceFactory;\nvar api = module.exports = {};\n\napi._namespaces = ['cat', 'cluster', 'indices', 'ingest', 'nodes', 'reindex', 'snapshot', 'tasks'];\n\n/**\n * Perform a [bulk](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.type - Default document type for items which don't provide one\n * @param {String, String[], Boolean} params.fields - Default comma-separated list of fields to return in the response for updates\n * @param {String} params.pipeline - The pipeline id to preprocess incoming documents with\n * @param {String} params.index - Default index for items which don't provide one\n */\napi.bulk = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    type: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    },\n    pipeline: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_bulk'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\napi.cat = namespace();\n\n/**\n * Perform a [cat.aliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.cat.prototype.aliases = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.allocation](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information\n */\napi.cat.prototype.allocation = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/allocation/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/allocation'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.count](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.count = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/count/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/count'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.fielddata](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return the fielddata size\n */\napi.cat.prototype.fielddata = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/fielddata/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/fielddata'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.health](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} [params.ts=true] - Set to false to disable timestamping\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.health = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    ts: {\n      type: 'boolean',\n      'default': true\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/health'\n  }\n});\n\n/**\n * Perform a [cat.help](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.help - Return help information\n */\napi.cat.prototype.help = ca({\n  params: {\n    help: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat'\n  }\n});\n\n/**\n * Perform a [cat.indices](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.pri - Set to true to return stats only for primary shards\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.indices = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    pri: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/indices/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/indices'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.master](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.master = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/master'\n  }\n});\n\n/**\n * Perform a [cat.nodeattrs](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodeattrs = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodeattrs'\n  }\n});\n\n/**\n * Perform a [cat.nodes](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodes = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodes'\n  }\n});\n\n/**\n * Perform a [cat.pendingTasks](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.pendingTasks = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cat.plugins](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.plugins = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/plugins'\n  }\n});\n\n/**\n * Perform a [cat.recovery](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.recovery = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/recovery/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.repositories](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.repositories = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean',\n      'default': false\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/repositories'\n  }\n});\n\n/**\n * Perform a [cat.segments](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.segments = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/segments/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/segments'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.shards](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.shards = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/shards/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/shards'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.snapshots](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {Boolean} params.ignoreUnavailable - Set to true to ignore unavailable snapshots\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.repository - Name of repository from which to fetch the snapshot information\n */\napi.cat.prototype.snapshots = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      'default': false,\n      name: 'ignore_unavailable'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/snapshots/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [cat.threadPool](http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.format - a short version of the Accept header, e.g. json, yaml\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {Boolean} params.fullId - Enables displaying the complete node ids\n */\napi.cat.prototype.threadPool = ca({\n  params: {\n    format: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fullId: {\n      type: 'boolean',\n      'default': false,\n      name: 'full_id'\n    }\n  },\n  url: {\n    fmt: '/_cat/thread_pool'\n  }\n});\n\n/**\n * Perform a [clearScroll](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.scrollId - A comma-separated list of scroll IDs to clear\n */\napi.clearScroll = ca({\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  method: 'DELETE'\n});\n\napi.cluster = namespace();\n\n/**\n * Perform a [cluster.allocationExplain](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.includeYesDecisions - Return 'YES' decisions in explanation (default: false)\n */\napi.cluster.prototype.allocationExplain = ca({\n  params: {\n    includeYesDecisions: {\n      type: 'boolean',\n      name: 'include_yes_decisions'\n    }\n  },\n  url: {\n    fmt: '/_cluster/allocation/explain'\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [cluster.getSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.includeDefaults - Whether to return all default clusters setting.\n */\napi.cluster.prototype.getSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    includeDefaults: {\n      type: 'boolean',\n      'default': false,\n      name: 'include_defaults'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  }\n});\n\n/**\n * Perform a [cluster.health](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.level=cluster] - Specify the level of detail for returned information\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.waitForActiveShards - Wait until the specified number of shards is active\n * @param {String} params.waitForNodes - Wait until the specified number of nodes is available\n * @param {Number} params.waitForRelocatingShards - Wait until the specified number of relocating shards is finished\n * @param {String} params.waitForStatus - Wait until cluster is in a specific state\n * @param {String, String[], Boolean} params.index - Limit the information returned to a specific index\n */\napi.cluster.prototype.health = ca({\n  params: {\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    waitForActiveShards: {\n      type: 'number',\n      name: 'wait_for_active_shards'\n    },\n    waitForNodes: {\n      type: 'string',\n      name: 'wait_for_nodes'\n    },\n    waitForRelocatingShards: {\n      type: 'number',\n      name: 'wait_for_relocating_shards'\n    },\n    waitForStatus: {\n      type: 'enum',\n      'default': null,\n      options: [\n        'green',\n        'yellow',\n        'red'\n      ],\n      name: 'wait_for_status'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/health/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/health'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.pendingTasks](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.cluster.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_cluster/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cluster.putSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.putSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [cluster.reroute](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.dryRun - Simulate the operation only and return the resulting state\n * @param {Boolean} params.explain - Return an explanation of why the commands can or cannot be executed\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics. Defaults to all but metadata\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.reroute = ca({\n  params: {\n    dryRun: {\n      type: 'boolean',\n      name: 'dry_run'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    metric: {\n      type: 'list',\n      options: [\n        '_all',\n        'blocks',\n        'metadata',\n        'nodes',\n        'routing_table',\n        'master_node',\n        'version'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/reroute'\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [cluster.state](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n */\napi.cluster.prototype.state = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/state/<%=metric%>/<%=index%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'routing_nodes',\n            'master_node',\n            'version'\n          ]\n        },\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'routing_nodes',\n            'master_node',\n            'version'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.stats](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.cluster.prototype.stats = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/stats/nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [count](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.count = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_count'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [countPercolate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to count percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to count percolate document into. Defaults to type.\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being count percolated.\n * @param {String} params.type - The type of the document being count percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.countPercolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [delete](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Specific write consistency setting for the operation\n * @param {String} params.parent - ID of parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi['delete'] = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteScript](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.deleteScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.deleteTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [exists](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.exists = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [explain](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)\n * @param {String} params.analyzer - The analyzer for the query string query\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The default field for query string query (default: _all)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.explain = ca({\n  params: {\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_explain',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [fieldStats](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for to get field statistics for (min value, max value, and more)\n * @param {String} [params.level=cluster] - Defines if field stats should be returned on a per index level or on a cluster wide level\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.fieldStats = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'indices',\n        'cluster'\n      ]\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_field_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_field_stats'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [get](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.get = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getScript](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.getScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getSource](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document; use `_all` to fetch the first document matching the ID across all types\n */\napi.getSource = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_source',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.getTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [index](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.pipeline - The pipeline id to preprocess incoming documents with\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.index = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    },\n    pipeline: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\napi.indices = namespace();\n\n/**\n * Perform a [indices.analyze](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The name of the analyzer to use\n * @param {String, String[], Boolean} params.charFilters - A comma-separated list of character filters to use for the analysis\n * @param {String} params.field - Use the analyzer configured for this field (instead of passing the analyzer name)\n * @param {String, String[], Boolean} params.filters - A comma-separated list of filters to use for the analysis\n * @param {String} params.index - The name of the index to scope the operation\n * @param {Boolean} params.preferLocal - With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)\n * @param {String, String[], Boolean} params.text - The text on which the analysis should be performed (when request body is not used)\n * @param {String} params.tokenizer - The name of the tokenizer to use for the analysis\n * @param {Boolean} params.explain - With `true`, outputs more advanced details. (default: false)\n * @param {String, String[], Boolean} params.attributes - A comma-separated list of token attributes to output, this parameter works only with `explain=true`\n * @param {String} [params.format=detailed] - Format of the output\n */\napi.indices.prototype.analyze = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    charFilters: {\n      type: 'list',\n      name: 'char_filters'\n    },\n    field: {\n      type: 'string'\n    },\n    filters: {\n      type: 'list'\n    },\n    index: {\n      type: 'string'\n    },\n    preferLocal: {\n      type: 'boolean',\n      name: 'prefer_local'\n    },\n    text: {\n      type: 'list'\n    },\n    tokenizer: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    attributes: {\n      type: 'list'\n    },\n    format: {\n      type: 'enum',\n      'default': 'detailed',\n      options: [\n        'detailed',\n        'text'\n      ]\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_analyze',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_analyze'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.clearCache](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.fieldData - Clear field data\n * @param {Boolean} params.fielddata - Clear field data\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to clear when using the `field_data` parameter (default: all)\n * @param {Boolean} params.query - Clear query caches\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index name to limit the operation\n * @param {Boolean} params.recycler - Clear the recycler cache\n * @param {Boolean} params.request - Clear request cache\n */\napi.indices.prototype.clearCache = ca({\n  params: {\n    fieldData: {\n      type: 'boolean',\n      name: 'field_data'\n    },\n    fielddata: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    query: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    index: {\n      type: 'list'\n    },\n    recycler: {\n      type: 'boolean'\n    },\n    request: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_cache/clear',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cache/clear'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.close](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma separated list of indices to close\n */\napi.indices.prototype.close = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_close',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.create](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.updateAllTypes - Whether to update the mapping for all fields with the same name across all types or not\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.create = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    updateAllTypes: {\n      type: 'boolean',\n      name: 'update_all_types'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.delete](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices\n */\napi.indices.prototype['delete'] = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names (supports wildcards); use `_all` for all indices\n * @param {String, String[], Boolean} params.name - A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.\n */\napi.indices.prototype.deleteAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.deleteTemplate = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.exists](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to check\n */\napi.indices.prototype.exists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.existsAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.existsTemplate = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsType](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` to check the types across all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to check\n */\napi.indices.prototype.existsType = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      type: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.flush](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.force - Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)\n * @param {Boolean} params.waitIfOngoing - If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is false and will cause an exception to be thrown on the shard level if another flush operation is already running.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flush = ca({\n  params: {\n    force: {\n      type: 'boolean'\n    },\n    waitIfOngoing: {\n      type: 'boolean',\n      name: 'wait_if_ongoing'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.flushSynced](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flushSynced = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush/synced',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush/synced'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.forcemerge](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flush - Specify whether the index should be flushed after performing the operation (default: true)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.maxNumSegments - The number of segments the index should be merged into (default: dynamic)\n * @param {Boolean} params.onlyExpungeDeletes - Specify whether the operation should only expunge deleted documents\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.waitForMerge - Specify whether the request should block until the merge process is finished (default: true)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.forcemerge = ca({\n  params: {\n    flush: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    maxNumSegments: {\n      type: 'number',\n      name: 'max_num_segments'\n    },\n    onlyExpungeDeletes: {\n      type: 'boolean',\n      name: 'only_expunge_deletes'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    waitForMerge: {\n      type: 'boolean',\n      name: 'wait_for_merge'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_forcemerge',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_forcemerge'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.get](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Ignore unavailable indexes (default: false)\n * @param {Boolean} params.allowNoIndices - Ignore if a wildcard expression resolves to no concrete indices (default: false)\n * @param {String} [params.expandWildcards=open] - Whether wildcard expressions should get expanded to open or closed indices (default: open)\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return version and creation date values in human-readable format.\n * @param {Boolean} params.includeDefaults - Whether to return all default setting for each of the indices.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.feature - A comma-separated list of features\n */\napi.indices.prototype.get = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    includeDefaults: {\n      type: 'boolean',\n      'default': false,\n      name: 'include_defaults'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=feature%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        feature: {\n          type: 'list',\n          options: [\n            '_settings',\n            '_mappings',\n            '_aliases'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=all] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.getAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'all',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getFieldMapping](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.includeDefaults - Whether the default mapping values should be returned as well\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields\n */\napi.indices.prototype.getFieldMapping = ca({\n  params: {\n    includeDefaults: {\n      type: 'boolean',\n      name: 'include_defaults'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>/field/<%=fields%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping/field/<%=fields%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>/field/<%=fields%>',\n      req: {\n        type: {\n          type: 'list'\n        },\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/field/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getMapping](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n */\napi.indices.prototype.getMapping = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.human - Whether to return version and creation date values in human-readable format.\n * @param {Boolean} params.includeDefaults - Whether to return all default setting for each of the indices.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the settings that should be included\n */\napi.indices.prototype.getSettings = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    local: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    includeDefaults: {\n      type: 'boolean',\n      'default': false,\n      name: 'include_defaults'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.name - The comma separated names of the index templates\n */\napi.indices.prototype.getTemplate = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_template/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_template'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getUpgrade](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.getUpgrade = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.open](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma separated list of indices to open\n */\napi.indices.prototype.open = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'closed',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_open',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.putAlias](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.\n * @param {String} params.name - The name of the alias to be created or updated\n */\napi.indices.prototype.putAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putMapping](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.updateAllTypes - Whether to update the mapping for all fields with the same name across all types or not\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.\n * @param {String} params.type - The name of the document type\n */\napi.indices.prototype.putMapping = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    updateAllTypes: {\n      type: 'boolean',\n      name: 'update_all_types'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putSettings](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.preserveExisting - Whether to update existing settings. If set to `true` existing settings on an index remain unchanged, the default is `false`\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.putSettings = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    preserveExisting: {\n      type: 'boolean',\n      name: 'preserve_existing'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.order - The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)\n * @param {Boolean} params.create - Whether the index template should only be added if new or can also replace an existing one\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.putTemplate = ca({\n  params: {\n    order: {\n      type: 'number'\n    },\n    create: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.recovery](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.detailed - Whether to display detailed information about shard recovery\n * @param {Boolean} params.activeOnly - Display only those recoveries that are currently on-going\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.recovery = ca({\n  params: {\n    detailed: {\n      type: 'boolean',\n      'default': false\n    },\n    activeOnly: {\n      type: 'boolean',\n      'default': false,\n      name: 'active_only'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_recovery',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.refresh](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.force - Force a refresh even if not required\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.refresh = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    force: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_refresh',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_refresh'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.segments](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.verbose - Includes detailed memory usage by Lucene.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.segments = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    verbose: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_segments',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_segments'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.shardStores](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.status - A comma-separated list of statuses used to filter on shards to get store information for\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.shardStores = ca({\n  params: {\n    status: {\n      type: 'list',\n      options: [\n        'green',\n        'yellow',\n        'red',\n        'all'\n      ]\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_shard_stores',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_shard_stores'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.stats](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=indices] - Return stats aggregated at cluster, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned the specific metrics.\n */\napi.indices.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'list'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'indices',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_stats/<%=metric%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_stats'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.updateAliases](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Request timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.indices.prototype.updateAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_aliases'\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.upgrade](http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.waitForCompletion - Specify whether the request should block until the all segments are upgraded (default: false)\n * @param {Boolean} params.onlyAncientSegments - If true, only ancient (an older Lucene major release) segments will be upgraded\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.upgrade = ca({\n  params: {\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      name: 'wait_for_completion'\n    },\n    onlyAncientSegments: {\n      type: 'boolean',\n      name: 'only_ancient_segments'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.validateQuery](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.explain - Return detailed information about the error\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {Boolean} params.rewrite - Provide a more detailed explanation showing the actual Lucene query that will be executed.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.validateQuery = ca({\n  params: {\n    explain: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    q: {\n      type: 'string'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    rewrite: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_validate/query'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [info](http://www.elastic.co/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.info = ca({\n  url: {\n    fmt: '/'\n  }\n});\n\napi.ingest = namespace();\n\n/**\n * Perform a [ingest.deletePipeline](https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.id - Pipeline ID\n */\napi.ingest.prototype.deletePipeline = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_ingest/pipeline/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [ingest.getPipeline](https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.id - Comma separated list of pipeline ids. Wildcards supported\n */\napi.ingest.prototype.getPipeline = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_ingest/pipeline/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [ingest.putPipeline](https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.id - Pipeline ID\n */\napi.ingest.prototype.putPipeline = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_ingest/pipeline/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [ingest.simulate](https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.verbose - Verbose mode. Display data output for each processor in executed pipeline\n * @param {String} params.id - Pipeline ID\n */\napi.ingest.prototype.simulate = ca({\n  params: {\n    verbose: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_ingest/pipeline/<%=id%>/_simulate/',\n      req: {\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_ingest/pipeline/_simulate'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mget](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.mget = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mget'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mpercolate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The index of the document being count percolated to use as default\n * @param {String} params.type - The type of the document being percolated to use as default.\n */\napi.mpercolate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mpercolate'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [msearch](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to use as default\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to use as default\n */\napi.msearch = ca({\n  params: {\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_msearch'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mtermvectors](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.ids - A comma-separated list of documents ids. You must define ids as parameter or set \"ids\" or \"docs\" in the request body\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.routing - Specific routing value. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.parent - Parent id of documents. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} params.realtime - Specifies if requests are real-time as opposed to near-real-time (default: true).\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n */\napi.mtermvectors = ca({\n  params: {\n    ids: {\n      type: 'list',\n      required: false\n    },\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    },\n    realtime: {\n      type: 'boolean',\n      required: false\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mtermvectors'\n    }\n  ],\n  method: 'POST'\n});\n\napi.nodes = namespace();\n\n/**\n * Perform a [nodes.hotThreads](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.interval - The interval for the second sampling of threads\n * @param {Number} params.snapshots - Number of samples of thread stacktrace (default: 10)\n * @param {Number} params.threads - Specify the number of threads to provide information for (default: 3)\n * @param {Boolean} params.ignoreIdleThreads - Don't show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)\n * @param {String} params.type - The type to sample (default: cpu)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.hotThreads = ca({\n  params: {\n    interval: {\n      type: 'time'\n    },\n    snapshots: {\n      type: 'number'\n    },\n    threads: {\n      type: 'number'\n    },\n    ignoreIdleThreads: {\n      type: 'boolean',\n      name: 'ignore_idle_threads'\n    },\n    type: {\n      type: 'enum',\n      options: [\n        'cpu',\n        'wait',\n        'block'\n      ]\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/hotthreads',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/hotthreads'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.info](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.metric - A comma-separated list of metrics you wish returned. Leave empty to return all.\n */\napi.nodes.prototype.info = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'transport',\n            'http',\n            'plugins',\n            'ingest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'transport',\n            'http',\n            'plugins',\n            'ingest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.stats](http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=node] - Return indices stats aggregated at node, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n * @param {String, String[], Boolean} params.indexMetric - Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'node',\n      options: [\n        'node',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport',\n            'discovery'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport',\n            'discovery'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport',\n            'discovery'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'query_cache',\n            'flush',\n            'get',\n            'indexing',\n            'merge',\n            'percolate',\n            'request_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'os',\n            'process',\n            'thread_pool',\n            'transport',\n            'discovery'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [percolate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to percolate document into. Defaults to type.\n * @param {String} params.percolateRouting - The routing value to use when percolating the existing document.\n * @param {String} params.percolatePreference - Which shard to prefer when executing the percolate request.\n * @param {String} params.percolateFormat - Return an array of matching query IDs instead of objects\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being percolated.\n * @param {String} params.type - The type of the document being percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.percolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    percolateRouting: {\n      type: 'string',\n      name: 'percolate_routing'\n    },\n    percolatePreference: {\n      type: 'string',\n      name: 'percolate_preference'\n    },\n    percolateFormat: {\n      type: 'enum',\n      options: [\n        'ids'\n      ],\n      name: 'percolate_format'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [ping](http://www.elastic.co/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.ping = ca({\n  url: {\n    fmt: '/'\n  },\n  requestTimeout: 3000,\n  method: 'HEAD'\n});\n\n/**\n * Perform a [putScript](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.putScript = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [putTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.putTemplate = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\napi.reindex = namespace();\n\n/**\n * Perform a [reindex](https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-reindex.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.refresh - Should the effected indexes be refreshed?\n * @param {Date, Number} [params.timeout=1m] - Time each individual bulk request should wait for shards that are unavailable.\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Boolean} params.waitForCompletion - Should the request should block until the reindex is complete.\n * @param {Float} params.requestsPerSecond - The throttle for this request in sub-requests per second. 0 means set no throttle.\n */\napi.reindex = ca({\n  params: {\n    refresh: {\n      type: 'boolean'\n    },\n    timeout: {\n      type: 'time',\n      'default': '1m'\n    },\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    },\n    requestsPerSecond: {\n      type: 'float',\n      'default': 0,\n      name: 'requests_per_second'\n    }\n  },\n  url: {\n    fmt: '/_reindex'\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [reindex.rethrottle](https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-reindex.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Float} params.requestsPerSecond - The throttle to set on this request in sub-requests per second. 0 means set no throttle. As does \"unlimited\". Otherwise it must be a float.\n * @param {String} params.taskId - The task id to rethrottle\n */\napi.reindex.prototype.rethrottle = ca({\n  params: {\n    requestsPerSecond: {\n      type: 'float',\n      'default': 0,\n      name: 'requests_per_second'\n    }\n  },\n  url: {\n    fmt: '/_reindex/<%=taskId%>/_rethrottle',\n    req: {\n      taskId: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [renderSearchTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.id - The id of the stored search template\n */\napi.renderSearchTemplate = ca({\n  urls: [\n    {\n      fmt: '/_render/template/<%=id%>',\n      req: {\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_render/template'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [scroll](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.scrollId - The scroll ID\n */\napi.scroll = ca({\n  params: {\n    scroll: {\n      type: 'duration'\n    },\n    scrollId: {\n      type: 'string',\n      name: 'scroll_id'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  paramAsBody: 'scrollId',\n  method: 'POST'\n});\n\n/**\n * Perform a [search](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.explain - Specify whether to return detailed information about score computation as part of a hit\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return as part of a hit\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields to return as the field data representation of a field for each hit\n * @param {Number} params.from - Starting offset (default: 0)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {Number} params.size - Number of hits to return (default: 10)\n * @param {String, String[], Boolean} params.sort - A comma-separated list of <field>:<direction> pairs\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.terminateAfter - The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.\n * @param {String, String[], Boolean} params.stats - Specific 'tag' of the request for logging and statistical purposes\n * @param {String} params.suggestField - Specify which field to use for suggestions\n * @param {String} [params.suggestMode=missing] - Specify suggest mode\n * @param {Number} params.suggestSize - How many suggestions to return in response\n * @param {Text} params.suggestText - The source text for which the suggestions should be returned\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.trackScores - Whether to calculate and return scores even if they are not used for sorting\n * @param {Boolean} params.version - Specify whether to return document version as part of a hit\n * @param {Boolean} params.requestCache - Specify if request cache should be used for this request or not, defaults to index level setting\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.search = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    from: {\n      type: 'number'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'dfs_query_then_fetch'\n      ],\n      name: 'search_type'\n    },\n    size: {\n      type: 'number'\n    },\n    sort: {\n      type: 'list'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    terminateAfter: {\n      type: 'number',\n      name: 'terminate_after'\n    },\n    stats: {\n      type: 'list'\n    },\n    suggestField: {\n      type: 'string',\n      name: 'suggest_field'\n    },\n    suggestMode: {\n      type: 'enum',\n      'default': 'missing',\n      options: [\n        'missing',\n        'popular',\n        'always'\n      ],\n      name: 'suggest_mode'\n    },\n    suggestSize: {\n      type: 'number',\n      name: 'suggest_size'\n    },\n    suggestText: {\n      type: 'text',\n      name: 'suggest_text'\n    },\n    timeout: {\n      type: 'time'\n    },\n    trackScores: {\n      type: 'boolean',\n      name: 'track_scores'\n    },\n    version: {\n      type: 'boolean'\n    },\n    requestCache: {\n      type: 'boolean',\n      name: 'request_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchShards](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchShards = ca({\n  params: {\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search_shards',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search_shards',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search_shards'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchTemplate](http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchTemplate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/template'\n    }\n  ],\n  method: 'POST'\n});\n\napi.snapshot = namespace();\n\n/**\n * Perform a [snapshot.create](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.create = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.createRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.verify - Whether to verify the repository after creation\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.createRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    verify: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.delete](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype['delete'] = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.deleteRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.deleteRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.get](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.get = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [snapshot.getRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.getRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>',\n      req: {\n        repository: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.restore](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.restore = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_restore',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.status](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.status = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        },\n        snapshot: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/<%=repository%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/_status'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.verifyRepository](http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.verifyRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/_verify',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [suggest](http://www.elastic.co/guide/en/elasticsearch/reference/master/search-suggesters.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n */\napi.suggest = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_suggest',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_suggest'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\napi.tasks = namespace();\n\n/**\n * Perform a [tasks.cancel](http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks-cancel.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.actions - A comma-separated list of actions that should be cancelled. Leave empty to cancel all.\n * @param {String} params.parentNode - Cancel tasks with specified parent node.\n * @param {String} params.parentTask - Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.\n * @param {String} params.taskId - Cancel the task with specified task id (node_id:task_number)\n */\napi.tasks.prototype.cancel = ca({\n  params: {\n    nodeId: {\n      type: 'list',\n      name: 'node_id'\n    },\n    actions: {\n      type: 'list'\n    },\n    parentNode: {\n      type: 'string',\n      name: 'parent_node'\n    },\n    parentTask: {\n      type: 'string',\n      name: 'parent_task'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_tasks/<%=taskId%>/_cancel',\n      req: {\n        taskId: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_tasks/_cancel'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [tasks.list](http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks-list.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.actions - A comma-separated list of actions that should be returned. Leave empty to return all.\n * @param {Boolean} params.detailed - Return detailed task information (default: false)\n * @param {String} params.parentNode - Return tasks with specified parent node.\n * @param {String} params.parentTask - Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all.\n * @param {Boolean} params.waitForCompletion - Wait for the matching tasks to complete (default: false)\n * @param {String} [params.groupBy=nodes] - Group tasks by nodes or parent/child relationships\n * @param {String} params.taskId - Return the task with specified id (node_id:task_number)\n */\napi.tasks.prototype.list = ca({\n  params: {\n    nodeId: {\n      type: 'list',\n      name: 'node_id'\n    },\n    actions: {\n      type: 'list'\n    },\n    detailed: {\n      type: 'boolean'\n    },\n    parentNode: {\n      type: 'string',\n      name: 'parent_node'\n    },\n    parentTask: {\n      type: 'string',\n      name: 'parent_task'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      name: 'wait_for_completion'\n    },\n    groupBy: {\n      type: 'enum',\n      'default': 'nodes',\n      options: [\n        'nodes',\n        'parents'\n      ],\n      name: 'group_by'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_tasks/<%=taskId%>',\n      req: {\n        taskId: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_tasks'\n    }\n  ]\n});\n\n/**\n * Perform a [termvectors](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned.\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return.\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned.\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned.\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random).\n * @param {String} params.routing - Specific routing value.\n * @param {String} params.parent - Parent id of documents.\n * @param {Boolean} params.realtime - Specifies if request is real-time as opposed to near-real-time (default: true).\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n * @param {String} params.id - The id of the document, when not specified a doc param should be supplied.\n */\napi.termvectors = ca({\n  params: {\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    },\n    realtime: {\n      type: 'boolean',\n      required: false\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_termvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_termvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [update](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.lang - The script language (default: groovy)\n * @param {String} params.parent - ID of the parent document. Is is only used for routing and when for the upsert request\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {Number} params.retryOnConflict - Specify how many times should the operation be retried when a conflict occurs (default: 0)\n * @param {String} params.routing - Specific routing value\n * @param {Anything} params.script - The URL-encoded script definition (instead of using request body)\n * @param {Anything} params.scriptId - The id of a stored script\n * @param {Boolean} params.scriptedUpsert - True if the script referenced in script or script_id should be called to perform inserts - defaults to false\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.update = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    fields: {\n      type: 'list'\n    },\n    lang: {\n      type: 'string'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    retryOnConflict: {\n      type: 'number',\n      name: 'retry_on_conflict'\n    },\n    routing: {\n      type: 'string'\n    },\n    script: {},\n    scriptId: {\n      name: 'script_id'\n    },\n    scriptedUpsert: {\n      type: 'boolean',\n      name: 'scripted_upsert'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_update',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [updateByQuery](https://www.elastic.co/guide/en/elasticsearch/plugins/master/plugins-reindex.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.explain - Specify whether to return detailed information about score computation as part of a hit\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return as part of a hit\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields to return as the field data representation of a field for each hit\n * @param {Number} params.from - Starting offset (default: 0)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.conflicts=abort] - What to do when the reindex hits version conflicts?\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.pipeline - Ingest pipeline to set on index requests made by this action. (default: none)\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {Date, Number} params.searchTimeout - Explicit timeout for each search request. Defaults to no timeout.\n * @param {Number} params.size - Number of hits to return (default: 10)\n * @param {String, String[], Boolean} params.sort - A comma-separated list of <field>:<direction> pairs\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.terminateAfter - The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.\n * @param {String, String[], Boolean} params.stats - Specific 'tag' of the request for logging and statistical purposes\n * @param {String} params.suggestField - Specify which field to use for suggestions\n * @param {String} [params.suggestMode=missing] - Specify suggest mode\n * @param {Number} params.suggestSize - How many suggestions to return in response\n * @param {Text} params.suggestText - The source text for which the suggestions should be returned\n * @param {Date, Number} [params.timeout=1m] - Time each individual bulk request should wait for shards that are unavailable.\n * @param {Boolean} params.trackScores - Whether to calculate and return scores even if they are not used for sorting\n * @param {Boolean} params.version - Specify whether to return document version as part of a hit\n * @param {Boolean} params.versionType - Should the document increment the version number (internal) on hit or not (reindex)\n * @param {Boolean} params.requestCache - Specify if request cache should be used for this request or not, defaults to index level setting\n * @param {Boolean} params.refresh - Should the effected indexes be refreshed?\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Integer} params.scrollSize - Size on the scroll request powering the update_by_query\n * @param {Boolean} params.waitForCompletion - Should the request should block until the reindex is complete.\n * @param {Float} params.requestsPerSecond - The throttle for this request in sub-requests per second. 0 means set no throttle.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.updateByQuery = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    from: {\n      type: 'number'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    conflicts: {\n      type: 'enum',\n      'default': 'abort',\n      options: [\n        'abort',\n        'proceed'\n      ]\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    pipeline: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'dfs_query_then_fetch'\n      ],\n      name: 'search_type'\n    },\n    searchTimeout: {\n      type: 'time',\n      name: 'search_timeout'\n    },\n    size: {\n      type: 'number'\n    },\n    sort: {\n      type: 'list'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    terminateAfter: {\n      type: 'number',\n      name: 'terminate_after'\n    },\n    stats: {\n      type: 'list'\n    },\n    suggestField: {\n      type: 'string',\n      name: 'suggest_field'\n    },\n    suggestMode: {\n      type: 'enum',\n      'default': 'missing',\n      options: [\n        'missing',\n        'popular',\n        'always'\n      ],\n      name: 'suggest_mode'\n    },\n    suggestSize: {\n      type: 'number',\n      name: 'suggest_size'\n    },\n    suggestText: {\n      type: 'text',\n      name: 'suggest_text'\n    },\n    timeout: {\n      type: 'time',\n      'default': '1m'\n    },\n    trackScores: {\n      type: 'boolean',\n      name: 'track_scores'\n    },\n    version: {\n      type: 'boolean'\n    },\n    versionType: {\n      type: 'boolean',\n      name: 'version_type'\n    },\n    requestCache: {\n      type: 'boolean',\n      name: 'request_cache'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    scrollSize: {\n      type: 'integer',\n      name: 'scroll_size'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    },\n    requestsPerSecond: {\n      type: 'float',\n      'default': 0,\n      name: 'requests_per_second'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_update_by_query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_update_by_query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [create](http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.pipeline - The pipeline id to preprocess incoming documents with\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.create = ca.proxy(api.index, {\n  transform: function (params) {\n    params.op_type = 'create';\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/elasticsearch/src/lib/apis/master.js\n ** module id = 129\n ** module chunks = 0\n **/"],"sourceRoot":""}